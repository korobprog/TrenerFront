/**
 * –¢–µ—Å—Ç Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ NextAuth
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –≤—Ö–æ–¥–∞
 */

const { signIn, getProviders } = require('next-auth/react');

async function testEmailProvider() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ NextAuth...\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...');

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
    const mockProviders = {
      email: {
        id: 'email',
        name: 'Email',
        type: 'email',
        signinUrl: 'http://localhost:3000/api/auth/signin/email',
        callbackUrl: 'http://localhost:3000/api/auth/callback/email',
      },
      google: {
        id: 'google',
        name: 'Google',
        type: 'oauth',
      },
      credentials: {
        id: 'credentials',
        name: 'Credentials',
        type: 'credentials',
      },
    };

    console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã:');
    Object.values(mockProviders).forEach((provider) => {
      console.log(`   - ${provider.name} (${provider.id})`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é SMTP
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');

    const smtpConfig = {
      host: process.env.EMAIL_HOST || 'smtp.gmail.com',
      port: process.env.EMAIL_PORT || 587,
      secure: process.env.EMAIL_SECURE === 'true',
      user: process.env.EMAIL_USER,
      password: process.env.EMAIL_PASSWORD ? '***—Å–∫—Ä—ã—Ç–æ***' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù',
      from: process.env.EMAIL_FROM,
    };

    console.log('üìß SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
    console.log(`   Host: ${smtpConfig.host}`);
    console.log(`   Port: ${smtpConfig.port}`);
    console.log(`   Secure: ${smtpConfig.secure}`);
    console.log(`   User: ${smtpConfig.user || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);
    console.log(`   Password: ${smtpConfig.password}`);
    console.log(`   From: ${smtpConfig.from || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');

    const requiredVars = [
      'EMAIL_HOST',
      'EMAIL_PORT',
      'EMAIL_USER',
      'EMAIL_PASSWORD',
      'EMAIL_FROM',
    ];

    let missingVars = [];
    requiredVars.forEach((varName) => {
      if (!process.env[varName]) {
        missingVars.push(varName);
      }
    });

    if (missingVars.length > 0) {
      console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
      missingVars.forEach((varName) => {
        console.log(`   - ${varName}`);
      });
      console.log('\nüí° –î–ª—è —Ä–∞–±–æ—Ç—ã Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:');
      console.log('   1. EMAIL_PASSWORD - –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Gmail');
      console.log('   2. –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ EMAIL_* –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
    } else {
      console.log('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoint –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');

    try {
      const response = await fetch(
        'http://localhost:3000/api/user/auth-settings',
        {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        }
      );

      if (response.status === 401) {
        console.log('‚úÖ API endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)');
      } else {
        console.log(`‚ö†Ô∏è  API endpoint –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API endpoint:', error.message);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');

    try {
      const response = await fetch('http://localhost:3000/user/auth-settings');

      if (response.status === 200 || response.status === 302) {
        console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç—É–ø–Ω–∞');
      } else {
        console.log(`‚ö†Ô∏è  –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤–µ—Ä–Ω—É–ª–∞ —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error.message);
    }

    console.log('\nüìã –†–µ–∑—é–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('‚úÖ Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ NextAuth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
    console.log('‚úÖ SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.log('‚úÖ API endpoint –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω');
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∞');
    console.log('‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–æ–∑–¥–∞–Ω');
    console.log('‚úÖ –°—Ç–∏–ª–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');

    if (missingVars.length > 0) {
      console.log('\n‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:');
      console.log('   1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Gmail');
      console.log('   2. –û–±–Ω–æ–≤–∏—Ç—å EMAIL_PASSWORD –≤ .env —Ñ–∞–π–ª–∞—Ö');
      console.log('   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
    }

    console.log('\nüéâ Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testEmailProvider();
