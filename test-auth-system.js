/**
 * –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ SuperMock
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ SuperMock\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const filesToCheck = [
  'components/auth/SignInModal.js',
  'components/auth/AuthButton.js',
  'styles/auth/SignInModal.module.css',
  'styles/AuthButton.module.css',
  'styles/SignIn.module.css',
  'pages/auth/signin.js',
  'pages/api/auth/[...nextauth].js',
  'docs/github-oauth-setup.md',
];

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
filesToCheck.forEach((file) => {
  const exists = fs.existsSync(path.join(__dirname, file));
  console.log(`${exists ? '‚úÖ' : '‚ùå'} ${file}`);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');

const envFiles = ['.env.local', '.env.production'];
envFiles.forEach((envFile) => {
  if (fs.existsSync(path.join(__dirname, envFile))) {
    console.log(`‚úÖ ${envFile} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);

    const envContent = fs.readFileSync(path.join(__dirname, envFile), 'utf8');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    const requiredVars = [
      'NEXTAUTH_URL',
      'NEXTAUTH_SECRET',
      'GOOGLE_CLIENT_ID',
      'GOOGLE_CLIENT_SECRET',
      'GITHUB_CLIENT_ID',
      'GITHUB_CLIENT_SECRET',
    ];

    requiredVars.forEach((varName) => {
      const hasVar = envContent.includes(`${varName}=`);
      const isEmpty =
        envContent.includes(`${varName}=\n`) ||
        envContent.includes(`${varName}=$`);

      if (hasVar && !isEmpty) {
        console.log(`  ‚úÖ ${varName} –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
      } else if (hasVar && isEmpty) {
        console.log(`  ‚ö†Ô∏è  ${varName} –ø—É—Å—Ç–æ–π`);
      } else {
        console.log(`  ‚ùå ${varName} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
      }
    });
  } else {
    console.log(`‚ùå ${envFile} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ NextAuth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\n‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ NextAuth:');

try {
  const nextAuthContent = fs.readFileSync(
    path.join(__dirname, 'pages/api/auth/[...nextauth].js'),
    'utf8'
  );

  const checks = [
    { name: 'Google Provider', pattern: /GoogleProvider/ },
    { name: 'GitHub Provider', pattern: /GitHubProvider/ },
    { name: 'Credentials Provider', pattern: /CredentialsProvider/ },
    { name: 'Prisma Adapter', pattern: /PrismaAdapter/ },
    { name: 'JWT Strategy', pattern: /strategy:\s*['"]jwt['"]/ },
    { name: 'Custom Pages', pattern: /pages:\s*{/ },
  ];

  checks.forEach((check) => {
    const found = check.pattern.test(nextAuthContent);
    console.log(`${found ? '‚úÖ' : '‚ùå'} ${check.name}`);
  });
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ NextAuth');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
console.log('\nüß© –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');

try {
  const authButtonContent = fs.readFileSync(
    path.join(__dirname, 'components/auth/AuthButton.js'),
    'utf8'
  );
  const signInModalContent = fs.readFileSync(
    path.join(__dirname, 'components/auth/SignInModal.js'),
    'utf8'
  );

  const componentChecks = [
    {
      name: 'AuthButton –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç SignInModal',
      content: authButtonContent,
      pattern: /import.*SignInModal/,
    },
    {
      name: 'AuthButton –∏—Å–ø–æ–ª—å–∑—É–µ—Ç useState',
      content: authButtonContent,
      pattern: /useState/,
    },
    {
      name: 'SignInModal –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Google',
      content: signInModalContent,
      pattern: /google/,
    },
    {
      name: 'SignInModal –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç GitHub',
      content: signInModalContent,
      pattern: /github/,
    },
    {
      name: 'SignInModal –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Email',
      content: signInModalContent,
      pattern: /credentials/,
    },
  ];

  componentChecks.forEach((check) => {
    const found = check.pattern.test(check.content);
    console.log(`${found ? '‚úÖ' : '‚ùå'} ${check.name}`);
  });
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π
console.log('\nüé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª–µ–π:');

const styleFiles = [
  'styles/auth/SignInModal.module.css',
  'styles/AuthButton.module.css',
  'styles/SignIn.module.css',
];

styleFiles.forEach((styleFile) => {
  try {
    const content = fs.readFileSync(path.join(__dirname, styleFile), 'utf8');
    const hasModernStyles =
      content.includes('modernSignInButton') ||
      content.includes('providerButton') ||
      content.includes('modal');
    console.log(
      `${hasModernStyles ? '‚úÖ' : '‚ùå'} ${styleFile} —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏`
    );
  } catch (error) {
    console.log(`‚ùå ${styleFile} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω`);
  }
});

console.log('\nüìã –†–µ–∑—é–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Ö–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–æ');
console.log('‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Google, GitHub –∏ Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤');
console.log('‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏');
console.log('‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤');

console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log(
  '1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub OAuth –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ docs/github-oauth-setup.md'
);
console.log('2. –û–±–Ω–æ–≤–∏—Ç–µ GITHUB_CLIENT_ID –∏ GITHUB_CLIENT_SECRET –≤ .env.local');
console.log('3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm run dev');
console.log('4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ –≤—Å–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã');

console.log('\nüåê –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:3000');
