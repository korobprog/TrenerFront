import { useState, useEffect } from 'react';
import { useSession, getSession } from 'next-auth/react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import FlashcardContainer from '../../components/flashcards/FlashcardContainer';
import styles from '../../styles/Flashcards.module.css';

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ñ–ª–µ—à-–∫–∞—Ä—Ç–æ—á–µ–∫
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é —Ñ–ª–µ—à-–∫–∞—Ä—Ç–æ—á–µ–∫
 */
export default function FlashcardsPage() {
  const { data: session, status } = useSession();
  const router = useRouter();

  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
  const { topic, difficulty, mode = 'study', limit = '10' } = router.query;

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const [settings, setSettings] = useState({
    topic: topic || null,
    difficulty: difficulty || null,
    mode: mode || 'study',
    limit: parseInt(limit) || 10,
  });

  const [showSettings, setShowSettings] = useState(false);
  const [isLoading, setIsLoading] = useState(true);

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ URL
  useEffect(() => {
    if (router.isReady) {
      setSettings({
        topic: topic || null,
        difficulty: difficulty || null,
        mode: mode || 'study',
        limit: parseInt(limit) || 10,
      });
      setIsLoading(false);
    }
  }, [router.isReady, topic, difficulty, mode, limit]);

  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞, –µ—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  useEffect(() => {
    if (status === 'unauthenticated') {
      router.push(
        '/auth/signin?callbackUrl=' + encodeURIComponent('/flashcards')
      );
    }
  }, [status, router]);

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const applySettings = (newSettings) => {
    const query = {};
    if (newSettings.topic) query.topic = newSettings.topic;
    if (newSettings.difficulty) query.difficulty = newSettings.difficulty;
    if (newSettings.mode !== 'study') query.mode = newSettings.mode;
    if (newSettings.limit !== 10) query.limit = newSettings.limit.toString();

    router.push({
      pathname: '/flashcards',
      query,
    });

    setSettings(newSettings);
    setShowSettings(false);
  };

  // –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const resetSettings = () => {
    const defaultSettings = {
      topic: null,
      difficulty: null,
      mode: 'study',
      limit: 10,
    };
    applySettings(defaultSettings);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à
  useEffect(() => {
    const handleKeyPress = (event) => {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Ñ–æ–∫—É—Å –Ω–∞ input —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
      if (
        event.target.tagName === 'INPUT' ||
        event.target.tagName === 'TEXTAREA'
      ) {
        return;
      }

      switch (event.key) {
        case 's':
        case 'S':
          setShowSettings(!showSettings);
          break;
        case 'Escape':
          setShowSettings(false);
          break;
      }
    };

    document.addEventListener('keydown', handleKeyPress);
    return () => document.removeEventListener('keydown', handleKeyPress);
  }, [showSettings]);

  if (status === 'loading' || isLoading) {
    return (
      <div className={styles.container}>
        <div className={styles.loadingMessage}>
          <div className={styles.spinner}></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  if (status === 'unauthenticated') {
    return null; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ useEffect
  }

  return (
    <>
      <Head>
        <title>–§–ª–µ—à-–∫–∞—Ä—Ç–æ—á–∫–∏ - –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º</title>
        <meta
          name="description"
          content="–ò–∑—É—á–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–ª–µ—à-–∫–∞—Ä—Ç–æ—á–µ–∫ —Å AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –æ—Ç–≤–µ—Ç–æ–≤"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <main className="main-content">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className={styles.pageHeader}>
          <div className={styles.headerContent}>
            <h1 className={styles.pageTitle}>
              <span className={styles.titleIcon}>üéØ</span>
              –§–ª–µ—à-–∫–∞—Ä—Ç–æ—á–∫–∏
            </h1>
            <p className={styles.pageDescription}>
              –ò–∑—É—á–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö
              –∫–∞—Ä—Ç–æ—á–µ–∫. AI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ
              –ø–æ–Ω–∏–º–∞–Ω–∏—è.
            </p>
          </div>

          <div className={styles.headerActions}>
            <button
              className={styles.settingsButton}
              onClick={() => setShowSettings(!showSettings)}
            >
              <span className={styles.settingsIcon}>‚öôÔ∏è</span>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        </div>

        {/* –ü–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
        {showSettings && (
          <div className={styles.settingsPanel}>
            <div className={styles.settingsContent}>
              <h3 className={styles.settingsTitle}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–∏</h3>

              <div className={styles.settingsGrid}>
                <div className={styles.settingGroup}>
                  <label className={styles.settingLabel}>–¢–µ–º–∞:</label>
                  <select
                    className={styles.settingSelect}
                    value={settings.topic || ''}
                    onChange={(e) =>
                      setSettings({
                        ...settings,
                        topic: e.target.value || null,
                      })
                    }
                  >
                    <option value="">–í—Å–µ —Ç–µ–º—ã</option>
                    <option value="javascript">JavaScript</option>
                    <option value="react">React</option>
                    <option value="nodejs">Node.js</option>
                    <option value="css">CSS</option>
                    <option value="html">HTML</option>
                    <option value="database">–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</option>
                    <option value="algorithms">–ê–ª–≥–æ—Ä–∏—Ç–º—ã</option>
                    <option value="system-design">
                      –°–∏—Å—Ç–µ–º–Ω–æ–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                    </option>
                    <option value="general">–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã</option>
                  </select>
                </div>

                <div className={styles.settingGroup}>
                  <label className={styles.settingLabel}>–°–ª–æ–∂–Ω–æ—Å—Ç—å:</label>
                  <select
                    className={styles.settingSelect}
                    value={settings.difficulty || ''}
                    onChange={(e) =>
                      setSettings({
                        ...settings,
                        difficulty: e.target.value || null,
                      })
                    }
                  >
                    <option value="">–õ—é–±–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å</option>
                    <option value="easy">–õ–µ–≥–∫–∏–π</option>
                    <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
                    <option value="hard">–°–ª–æ–∂–Ω—ã–π</option>
                  </select>
                </div>

                <div className={styles.settingGroup}>
                  <label className={styles.settingLabel}>–†–µ–∂–∏–º:</label>
                  <select
                    className={styles.settingSelect}
                    value={settings.mode}
                    onChange={(e) =>
                      setSettings({
                        ...settings,
                        mode: e.target.value,
                      })
                    }
                  >
                    <option value="study">–ò–∑—É—á–µ–Ω–∏–µ</option>
                    <option value="review">–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</option>
                    <option value="exam">–≠–∫–∑–∞–º–µ–Ω</option>
                  </select>
                </div>

                <div className={styles.settingGroup}>
                  <label className={styles.settingLabel}>
                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫:
                  </label>
                  <select
                    className={styles.settingSelect}
                    value={settings.limit}
                    onChange={(e) =>
                      setSettings({
                        ...settings,
                        limit: parseInt(e.target.value),
                      })
                    }
                  >
                    <option value={5}>5 –∫–∞—Ä—Ç–æ—á–µ–∫</option>
                    <option value={10}>10 –∫–∞—Ä—Ç–æ—á–µ–∫</option>
                    <option value={15}>15 –∫–∞—Ä—Ç–æ—á–µ–∫</option>
                    <option value={20}>20 –∫–∞—Ä—Ç–æ—á–µ–∫</option>
                    <option value={30}>30 –∫–∞—Ä—Ç–æ—á–µ–∫</option>
                    <option value={50}>50 –∫–∞—Ä—Ç–æ—á–µ–∫</option>
                  </select>
                </div>
              </div>

              <div className={styles.settingsActions}>
                <button
                  className={styles.applyButton}
                  onClick={() => applySettings(settings)}
                >
                  –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                </button>
                <button className={styles.resetButton} onClick={resetSettings}>
                  –°–±—Ä–æ—Å–∏—Ç—å
                </button>
                <button
                  className={styles.cancelButton}
                  onClick={() => setShowSettings(false)}
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </div>
          </div>
        )}

        {/* –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className={styles.currentSettings}>
          <div className={styles.settingsBadges}>
            {settings.topic && (
              <span className={styles.settingBadge}>üìö {settings.topic}</span>
            )}
            {settings.difficulty && (
              <span className={styles.settingBadge}>
                {settings.difficulty === 'easy'
                  ? 'üü¢'
                  : settings.difficulty === 'medium'
                  ? 'üü°'
                  : 'üî¥'}
                {settings.difficulty === 'easy'
                  ? '–õ–µ–≥–∫–∏–π'
                  : settings.difficulty === 'medium'
                  ? '–°—Ä–µ–¥–Ω–∏–π'
                  : '–°–ª–æ–∂–Ω—ã–π'}
              </span>
            )}
            <span className={styles.settingBadge}>
              {settings.mode === 'study'
                ? 'üìñ'
                : settings.mode === 'review'
                ? 'üîÑ'
                : 'üìù'}
              {settings.mode === 'study'
                ? '–ò–∑—É—á–µ–Ω–∏–µ'
                : settings.mode === 'review'
                ? '–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ'
                : '–≠–∫–∑–∞–º–µ–Ω'}
            </span>
            <span className={styles.settingBadge}>
              üî¢ {settings.limit} –∫–∞—Ä—Ç–æ—á–µ–∫
            </span>
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–ª–µ—à-–∫–∞—Ä—Ç–æ—á–µ–∫ */}
        <FlashcardContainer
          topic={settings.topic}
          difficulty={settings.difficulty}
          mode={settings.mode}
          limit={settings.limit}
        />

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ */}
        <div className={styles.helpSection}>
          <h3 className={styles.helpTitle}>üí° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</h3>
          <div className={styles.helpGrid}>
            <div className={styles.helpItem}>
              <span className={styles.helpIcon}>1Ô∏è‚É£</span>
              <div className={styles.helpText}>
                <strong>–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å</strong> –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å
                –º—ã—Å–ª–µ–Ω–Ω–æ
              </div>
            </div>
            <div className={styles.helpItem}>
              <span className={styles.helpIcon}>2Ô∏è‚É£</span>
              <div className={styles.helpText}>
                <strong>–ü–µ—Ä–µ–≤–µ—Ä–Ω–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É</strong> —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
                –æ—Ç–≤–µ—Ç
              </div>
            </div>
            <div className={styles.helpItem}>
              <span className={styles.helpIcon}>3Ô∏è‚É£</span>
              <div className={styles.helpText}>
                <strong>–û—Ü–µ–Ω–∏—Ç–µ —Å–µ–±—è</strong> —á–µ—Å—Ç–Ω–æ: –∑–Ω–∞–ª–∏, —á–∞—Å—Ç–∏—á–Ω–æ –∑–Ω–∞–ª–∏ –∏–ª–∏
                –Ω–µ –∑–Ω–∞–ª–∏
              </div>
            </div>
            <div className={styles.helpItem}>
              <span className={styles.helpIcon}>4Ô∏è‚É£</span>
              <div className={styles.helpText}>
                <strong>–ü–æ–≤—Ç–æ—Ä—è–π—Ç–µ</strong> —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ª—É—á—à–µ–≥–æ
                –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
export async function getServerSideProps(context) {
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination:
          '/auth/signin?callbackUrl=' + encodeURIComponent('/flashcards'),
        permanent: false,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
}
