"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/mock-interviews/[id]";
exports.ids = ["pages/api/mock-interviews/[id]"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next-auth/react":
/*!**********************************!*\
  !*** external "next-auth/react" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("next-auth/react");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmock-interviews%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmock-interviews%5C%5Bid%5D%5Cindex.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmock-interviews%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmock-interviews%5C%5Bid%5D%5Cindex.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_mock_interviews_id_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\mock-interviews\\[id]\\index.js */ \"(api)/./pages/api/mock-interviews/[id]/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_mock_interviews_id_index_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_mock_interviews_id_index_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/mock-interviews/[id]\",\n        pathname: \"/api/mock-interviews/[id]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_mock_interviews_id_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm1vY2staW50ZXJ2aWV3cyUyRiU1QmlkJTVEJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlNUNhcGklNUNtb2NrLWludGVydmlld3MlNUMlNUJpZCU1RCU1Q2luZGV4LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzBFO0FBQzFFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxtRUFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsbUVBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJ2aWV3LXByZXAvP2Q4YmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxtb2NrLWludGVydmlld3NcXFxcW2lkXVxcXFxpbmRleC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL21vY2staW50ZXJ2aWV3cy9baWRdXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbW9jay1pbnRlcnZpZXdzL1tpZF1cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmock-interviews%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmock-interviews%5C%5Bid%5D%5Cindex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/prisma.js":
/*!***********************!*\
  !*** ./lib/prisma.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Предотвращаем создание множества экземпляров Prisma Client в режиме разработки\n// https://www.prisma.io/docs/guides/performance-and-optimization/connection-management#prevent-multiple-instances-in-development\n// Создаем новый экземпляр PrismaClient с включенным логированием запросов\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: [\n        \"query\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ]\n});\n// Добавляем логирование для отладки\nconsole.log(\"Prisma Client инициализирован:\", prisma ? \"успешно\" : \"ошибка\");\n// Проверяем доступность моделей\nconsole.log(\"Доступные модели в Prisma Client:\", Object.keys(prisma));\n// Проверяем наличие модели UserPoints\ntry {\n    console.log(\"Проверка модели UserPoints...\");\n    // Выполняем тестовый запрос к модели UserPoints\n    prisma.$queryRaw`SELECT EXISTS (\r\n    SELECT FROM information_schema.tables\r\n    WHERE table_schema = 'public'\r\n    AND table_name = 'UserPoints'\r\n  )`.then((result)=>{\n        console.log(\"Результат проверки таблицы UserPoints:\", result);\n    }).catch((error)=>{\n        console.error(\"Ошибка при проверке таблицы UserPoints:\", error);\n    });\n} catch (error) {\n    console.error(\"Ошибка при проверке модели UserPoints:\", error);\n}\n// Проверяем таблицу Session\ntry {\n    console.log(\"Проверка таблицы Session...\");\n    // Выполняем тестовый запрос к таблице Session\n    prisma.$queryRaw`SELECT EXISTS (\r\n    SELECT FROM information_schema.tables\r\n    WHERE table_schema = 'public'\r\n    AND table_name = 'Session'\r\n  )`.then((result)=>{\n        console.log(\"Результат проверки таблицы Session:\", result);\n        // Если таблица существует, проверяем количество записей\n        if (result[0].exists) {\n            prisma.session.count().then((count)=>{\n                console.log(\"Количество записей в таблице Session:\", count);\n            }).catch((error)=>{\n                console.error(\"Ошибка при подсчете записей в таблице Session:\", error);\n            });\n        }\n    }).catch((error)=>{\n        console.error(\"Ошибка при проверке таблицы Session:\", error);\n    });\n} catch (error) {\n    console.error(\"Ошибка при проверке таблицы Session:\", error);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvcHJpc21hLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQUU5QyxpRkFBaUY7QUFDakYsaUlBQWlJO0FBRWpJLDBFQUEwRTtBQUMxRSxNQUFNQyxTQUFTLElBQUlELHdEQUFZQSxDQUFDO0lBQzlCRSxLQUFLO1FBQUM7UUFBUztRQUFRO1FBQVE7S0FBUTtBQUN6QztBQUVBLG9DQUFvQztBQUNwQ0MsUUFBUUQsR0FBRyxDQUFDLGtDQUFrQ0QsU0FBUyxZQUFZO0FBRW5FLGdDQUFnQztBQUNoQ0UsUUFBUUQsR0FBRyxDQUFDLHFDQUFxQ0UsT0FBT0MsSUFBSSxDQUFDSjtBQUU3RCxzQ0FBc0M7QUFDdEMsSUFBSTtJQUNGRSxRQUFRRCxHQUFHLENBQUM7SUFDWixnREFBZ0Q7SUFDaERELE9BQU9LLFNBQVMsQ0FBQzs7OztHQUloQixDQUFDLENBQ0NDLElBQUksQ0FBQyxDQUFDQztRQUNMTCxRQUFRRCxHQUFHLENBQUMsMENBQTBDTTtJQUN4RCxHQUNDQyxLQUFLLENBQUMsQ0FBQ0M7UUFDTlAsUUFBUU8sS0FBSyxDQUFDLDJDQUEyQ0E7SUFDM0Q7QUFDSixFQUFFLE9BQU9BLE9BQU87SUFDZFAsUUFBUU8sS0FBSyxDQUFDLDBDQUEwQ0E7QUFDMUQ7QUFFQSw0QkFBNEI7QUFDNUIsSUFBSTtJQUNGUCxRQUFRRCxHQUFHLENBQUM7SUFDWiw4Q0FBOEM7SUFDOUNELE9BQU9LLFNBQVMsQ0FBQzs7OztHQUloQixDQUFDLENBQ0NDLElBQUksQ0FBQyxDQUFDQztRQUNMTCxRQUFRRCxHQUFHLENBQUMsdUNBQXVDTTtRQUVuRCx3REFBd0Q7UUFDeEQsSUFBSUEsTUFBTSxDQUFDLEVBQUUsQ0FBQ0csTUFBTSxFQUFFO1lBQ3BCVixPQUFPVyxPQUFPLENBQ1hDLEtBQUssR0FDTE4sSUFBSSxDQUFDLENBQUNNO2dCQUNMVixRQUFRRCxHQUFHLENBQUMseUNBQXlDVztZQUN2RCxHQUNDSixLQUFLLENBQUMsQ0FBQ0M7Z0JBQ05QLFFBQVFPLEtBQUssQ0FDWCxrREFDQUE7WUFFSjtRQUNKO0lBQ0YsR0FDQ0QsS0FBSyxDQUFDLENBQUNDO1FBQ05QLFFBQVFPLEtBQUssQ0FBQyx3Q0FBd0NBO0lBQ3hEO0FBQ0osRUFBRSxPQUFPQSxPQUFPO0lBQ2RQLFFBQVFPLEtBQUssQ0FBQyx3Q0FBd0NBO0FBQ3hEO0FBRUEsaUVBQWVULE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcnZpZXctcHJlcC8uL2xpYi9wcmlzbWEuanM/NzUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCc7XHJcblxyXG4vLyDQn9GA0LXQtNC+0YLQstGA0LDRidCw0LXQvCDRgdC+0LfQtNCw0L3QuNC1INC80L3QvtC20LXRgdGC0LLQsCDRjdC60LfQtdC80L/Qu9GP0YDQvtCyIFByaXNtYSBDbGllbnQg0LIg0YDQtdC20LjQvNC1INGA0LDQt9GA0LDQsdC+0YLQutC4XHJcbi8vIGh0dHBzOi8vd3d3LnByaXNtYS5pby9kb2NzL2d1aWRlcy9wZXJmb3JtYW5jZS1hbmQtb3B0aW1pemF0aW9uL2Nvbm5lY3Rpb24tbWFuYWdlbWVudCNwcmV2ZW50LW11bHRpcGxlLWluc3RhbmNlcy1pbi1kZXZlbG9wbWVudFxyXG5cclxuLy8g0KHQvtC30LTQsNC10Lwg0L3QvtCy0YvQuSDRjdC60LfQtdC80L/Qu9GP0YAgUHJpc21hQ2xpZW50INGBINCy0LrQu9GO0YfQtdC90L3Ri9C8INC70L7Qs9C40YDQvtCy0LDQvdC40LXQvCDQt9Cw0L/RgNC+0YHQvtCyXHJcbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gIGxvZzogWydxdWVyeScsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InXSxcclxufSk7XHJcblxyXG4vLyDQlNC+0LHQsNCy0LvRj9C10Lwg0LvQvtCz0LjRgNC+0LLQsNC90LjQtSDQtNC70Y8g0L7RgtC70LDQtNC60LhcclxuY29uc29sZS5sb2coJ1ByaXNtYSBDbGllbnQg0LjQvdC40YbQuNCw0LvQuNC30LjRgNC+0LLQsNC9OicsIHByaXNtYSA/ICfRg9GB0L/QtdGI0L3QvicgOiAn0L7RiNC40LHQutCwJyk7XHJcblxyXG4vLyDQn9GA0L7QstC10YDRj9C10Lwg0LTQvtGB0YLRg9C/0L3QvtGB0YLRjCDQvNC+0LTQtdC70LXQuVxyXG5jb25zb2xlLmxvZygn0JTQvtGB0YLRg9C/0L3Ri9C1INC80L7QtNC10LvQuCDQsiBQcmlzbWEgQ2xpZW50OicsIE9iamVjdC5rZXlzKHByaXNtYSkpO1xyXG5cclxuLy8g0J/RgNC+0LLQtdGA0Y/QtdC8INC90LDQu9C40YfQuNC1INC80L7QtNC10LvQuCBVc2VyUG9pbnRzXHJcbnRyeSB7XHJcbiAgY29uc29sZS5sb2coJ9Cf0YDQvtCy0LXRgNC60LAg0LzQvtC00LXQu9C4IFVzZXJQb2ludHMuLi4nKTtcclxuICAvLyDQktGL0L/QvtC70L3Rj9C10Lwg0YLQtdGB0YLQvtCy0YvQuSDQt9Cw0L/RgNC+0YEg0Log0LzQvtC00LXQu9C4IFVzZXJQb2ludHNcclxuICBwcmlzbWEuJHF1ZXJ5UmF3YFNFTEVDVCBFWElTVFMgKFxyXG4gICAgU0VMRUNUIEZST00gaW5mb3JtYXRpb25fc2NoZW1hLnRhYmxlc1xyXG4gICAgV0hFUkUgdGFibGVfc2NoZW1hID0gJ3B1YmxpYydcclxuICAgIEFORCB0YWJsZV9uYW1lID0gJ1VzZXJQb2ludHMnXHJcbiAgKWBcclxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ9Cg0LXQt9GD0LvRjNGC0LDRgiDQv9GA0L7QstC10YDQutC4INGC0LDQsdC70LjRhtGLIFVzZXJQb2ludHM6JywgcmVzdWx0KTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0L/RgNC+0LLQtdGA0LrQtSDRgtCw0LHQu9C40YbRiyBVc2VyUG9pbnRzOicsIGVycm9yKTtcclxuICAgIH0pO1xyXG59IGNhdGNoIChlcnJvcikge1xyXG4gIGNvbnNvbGUuZXJyb3IoJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0L/RgNC+0LLQtdGA0LrQtSDQvNC+0LTQtdC70LggVXNlclBvaW50czonLCBlcnJvcik7XHJcbn1cclxuXHJcbi8vINCf0YDQvtCy0LXRgNGP0LXQvCDRgtCw0LHQu9C40YbRgyBTZXNzaW9uXHJcbnRyeSB7XHJcbiAgY29uc29sZS5sb2coJ9Cf0YDQvtCy0LXRgNC60LAg0YLQsNCx0LvQuNGG0YsgU2Vzc2lvbi4uLicpO1xyXG4gIC8vINCS0YvQv9C+0LvQvdGP0LXQvCDRgtC10YHRgtC+0LLRi9C5INC30LDQv9GA0L7RgSDQuiDRgtCw0LHQu9C40YbQtSBTZXNzaW9uXHJcbiAgcHJpc21hLiRxdWVyeVJhd2BTRUxFQ1QgRVhJU1RTIChcclxuICAgIFNFTEVDVCBGUk9NIGluZm9ybWF0aW9uX3NjaGVtYS50YWJsZXNcclxuICAgIFdIRVJFIHRhYmxlX3NjaGVtYSA9ICdwdWJsaWMnXHJcbiAgICBBTkQgdGFibGVfbmFtZSA9ICdTZXNzaW9uJ1xyXG4gIClgXHJcbiAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCfQoNC10LfRg9C70YzRgtCw0YIg0L/RgNC+0LLQtdGA0LrQuCDRgtCw0LHQu9C40YbRiyBTZXNzaW9uOicsIHJlc3VsdCk7XHJcblxyXG4gICAgICAvLyDQldGB0LvQuCDRgtCw0LHQu9C40YbQsCDRgdGD0YnQtdGB0YLQstGD0LXRgiwg0L/RgNC+0LLQtdGA0Y/QtdC8INC60L7Qu9C40YfQtdGB0YLQstC+INC30LDQv9C40YHQtdC5XHJcbiAgICAgIGlmIChyZXN1bHRbMF0uZXhpc3RzKSB7XHJcbiAgICAgICAgcHJpc21hLnNlc3Npb25cclxuICAgICAgICAgIC5jb3VudCgpXHJcbiAgICAgICAgICAudGhlbigoY291bnQpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ9Ca0L7Qu9C40YfQtdGB0YLQstC+INC30LDQv9C40YHQtdC5INCyINGC0LDQsdC70LjRhtC1IFNlc3Npb246JywgY291bnQpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICAgICAgICAn0J7RiNC40LHQutCwINC/0YDQuCDQv9C+0LTRgdGH0LXRgtC1INC30LDQv9C40YHQtdC5INCyINGC0LDQsdC70LjRhtC1IFNlc3Npb246JyxcclxuICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0L/RgNC+0LLQtdGA0LrQtSDRgtCw0LHQu9C40YbRiyBTZXNzaW9uOicsIGVycm9yKTtcclxuICAgIH0pO1xyXG59IGNhdGNoIChlcnJvcikge1xyXG4gIGNvbnNvbGUuZXJyb3IoJ9Ce0YjQuNCx0LrQsCDQv9GA0Lgg0L/RgNC+0LLQtdGA0LrQtSDRgtCw0LHQu9C40YbRiyBTZXNzaW9uOicsIGVycm9yKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcHJpc21hO1xyXG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwicHJpc21hIiwibG9nIiwiY29uc29sZSIsIk9iamVjdCIsImtleXMiLCIkcXVlcnlSYXciLCJ0aGVuIiwicmVzdWx0IiwiY2F0Y2giLCJlcnJvciIsImV4aXN0cyIsInNlc3Npb24iLCJjb3VudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/prisma.js\n");

/***/ }),

/***/ "(api)/./pages/api/mock-interviews/[id]/index.js":
/*!*************************************************!*\
  !*** ./pages/api/mock-interviews/[id]/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"next-auth/react\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/prisma */ \"(api)/./lib/prisma.js\");\n\n\nasync function handler(req, res) {\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)({\n        req\n    });\n    if (!session) {\n        return res.status(401).json({\n            message: \"Необходима авторизация\"\n        });\n    }\n    // Получаем ID собеседования из URL\n    const { id } = req.query;\n    // Обработка GET запроса - получение информации о собеседовании\n    if (req.method === \"GET\") {\n        try {\n            const interview = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mockInterview.findUnique({\n                where: {\n                    id\n                },\n                include: {\n                    interviewer: {\n                        select: {\n                            id: true,\n                            name: true,\n                            email: true,\n                            image: true\n                        }\n                    },\n                    interviewee: {\n                        select: {\n                            id: true,\n                            name: true,\n                            email: true,\n                            image: true\n                        }\n                    },\n                    interviewFeedback: true\n                }\n            });\n            if (!interview) {\n                return res.status(404).json({\n                    message: \"Собеседование не найдено\"\n                });\n            }\n            // Проверяем, имеет ли пользователь доступ к этому собеседованию\n            // Доступ имеют интервьюер и отвечающий\n            if (interview.interviewerId !== session.user.id && interview.intervieweeId !== session.user.id) {\n                return res.status(403).json({\n                    message: \"У вас нет доступа к этому собеседованию\"\n                });\n            }\n            return res.status(200).json(interview);\n        } catch (error) {\n            console.error(\"Ошибка при получении информации о собеседовании:\", error);\n            return res.status(500).json({\n                message: \"Ошибка сервера при получении информации о собеседовании\"\n            });\n        }\n    }\n    // Обработка PUT запроса - обновление информации о собеседовании\n    if (req.method === \"PUT\") {\n        // Проверяем, является ли пользователь интервьюером\n        const interview = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mockInterview.findUnique({\n            where: {\n                id\n            }\n        });\n        if (!interview) {\n            return res.status(404).json({\n                message: \"Собеседование не найдено\"\n            });\n        }\n        if (interview.interviewerId !== session.user.id) {\n            return res.status(403).json({\n                message: \"Только интервьюер может обновлять информацию о собеседовании\"\n            });\n        }\n        // Получаем данные для обновления\n        const { scheduledTime, meetingLink, status } = req.body;\n        // Проверяем, что собеседование можно обновить\n        if (interview.status === \"completed\") {\n            return res.status(400).json({\n                message: \"Нельзя обновить завершенное собеседование\"\n            });\n        }\n        try {\n            const updatedInterview = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mockInterview.update({\n                where: {\n                    id\n                },\n                data: {\n                    ...scheduledTime && {\n                        scheduledTime: new Date(scheduledTime)\n                    },\n                    ...meetingLink && {\n                        meetingLink\n                    },\n                    ...status && {\n                        status\n                    }\n                }\n            });\n            return res.status(200).json(updatedInterview);\n        } catch (error) {\n            console.error(\"Ошибка при обновлении собеседования:\", error);\n            return res.status(500).json({\n                message: \"Ошибка сервера при обновлении собеседования\"\n            });\n        }\n    }\n    // Обработка DELETE запроса - отмена собеседования\n    if (req.method === \"DELETE\") {\n        // Проверяем, является ли пользователь интервьюером\n        const interview = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mockInterview.findUnique({\n            where: {\n                id\n            }\n        });\n        if (!interview) {\n            return res.status(404).json({\n                message: \"Собеседование не найдено\"\n            });\n        }\n        if (interview.interviewerId !== session.user.id) {\n            return res.status(403).json({\n                message: \"Только интервьюер может отменить собеседование\"\n            });\n        }\n        // Проверяем, что собеседование можно отменить\n        if (interview.status === \"completed\") {\n            return res.status(400).json({\n                message: \"Нельзя отменить завершенное собеседование\"\n            });\n        }\n        try {\n            // Если собеседование уже забронировано, возвращаем баллы отвечающему\n            if (interview.status === \"booked\" && interview.intervieweeId) {\n                // Начинаем транзакцию для обновления статуса и возврата баллов\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].$transaction(async (prisma)=>{\n                    // Обновляем статус собеседования на \"cancelled\"\n                    await prisma.mockInterview.update({\n                        where: {\n                            id\n                        },\n                        data: {\n                            status: \"cancelled\"\n                        }\n                    });\n                    // Проверяем, есть ли у отвечающего запись о баллах\n                    const intervieweePoints = await prisma.userPoints.findUnique({\n                        where: {\n                            userId: interview.intervieweeId\n                        }\n                    });\n                    if (intervieweePoints) {\n                        // Возвращаем 3 балла отвечающему\n                        await prisma.userPoints.update({\n                            where: {\n                                userId: interview.intervieweeId\n                            },\n                            data: {\n                                points: {\n                                    increment: 3\n                                }\n                            }\n                        });\n                    }\n                });\n            } else {\n                // Если собеседование не забронировано, просто обновляем статус\n                await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mockInterview.update({\n                    where: {\n                        id\n                    },\n                    data: {\n                        status: \"cancelled\"\n                    }\n                });\n            }\n            return res.status(200).json({\n                message: \"Собеседование успешно отменено\"\n            });\n        } catch (error) {\n            console.error(\"Ошибка при отмене собеседования:\", error);\n            return res.status(500).json({\n                message: \"Ошибка сервера при отмене собеседования\"\n            });\n        }\n    }\n    // Если метод запроса не поддерживается\n    return res.status(405).json({\n        message: \"Метод не поддерживается\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/mock-interviews/[id]/index.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmock-interviews%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cmock-interviews%5C%5Bid%5D%5Cindex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();