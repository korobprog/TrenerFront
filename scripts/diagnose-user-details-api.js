/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /api/admin/users/[id]
 */

const USER_ID = 'cmb9k4mtb0000mkc4b5uwfgtz';
const BASE_URL = 'http://localhost:3000';

async function testUserDetailsAPI() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
  console.log(`üìã ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${USER_ID}`);
  console.log('=' * 60);

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüìä –¢–ï–°–¢ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    const response = await fetch(`${BASE_URL}/api/admin/users/${USER_ID}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        Cookie: 'next-auth.session-token=3621ebb0-8151-4e84-9b65-7e6ec958852a',
      },
    });

    console.log(`üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log(`üì° –°—Ç–∞—Ç—É—Å —Ç–µ–∫—Å—Ç: ${response.statusText}`);

    if (!response.ok) {
      console.error(
        `‚ùå –û—à–∏–±–∫–∞ HTTP: ${response.status} ${response.statusText}`
      );
      const errorText = await response.text();
      console.error(`‚ùå –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: ${errorText}`);
      return;
    }

    const userData = await response.json();
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
    console.log('\nüîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –û–¢–í–ï–¢–ê:');
    console.log(`üìã success: ${userData.success}`);
    console.log(`üìã data –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${!!userData.data}`);

    if (userData.data) {
      const user = userData.data;
      console.log('\nüë§ –î–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:');
      console.log(`üìã ID: ${user.id}`);
      console.log(`üìã name: ${user.name || 'undefined'}`);
      console.log(`üìã email: ${user.email || 'undefined'}`);
      console.log(`üìã role: ${user.role || 'undefined'}`);
      console.log(`üìã isBlocked: ${user.isBlocked}`);
      console.log(`üìã createdAt: ${user.createdAt || 'undefined'}`);

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      console.log('\nüîó –°–í–Ø–ó–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï:');
      console.log(`üìã userPoints: ${!!user.userPoints}`);
      if (user.userPoints) {
        console.log(`   üí∞ points: ${user.userPoints.points}`);
      }

      console.log(`üìã _count: ${!!user._count}`);
      if (user._count) {
        console.log(
          `   üìä interviewerSessions: ${user._count.interviewerSessions}`
        );
        console.log(
          `   üìä intervieweeSessions: ${user._count.intervieweeSessions}`
        );
        console.log(`   üìä violations: ${user._count.violations}`);
        console.log(
          `   üìä pointsTransactions: ${user._count.pointsTransactions}`
        );
      }

      console.log(
        `üìã interviewerSessions: ${
          user.interviewerSessions?.length || 0
        } –∑–∞–ø–∏—Å–µ–π`
      );
      console.log(
        `üìã intervieweeSessions: ${
          user.intervieweeSessions?.length || 0
        } –∑–∞–ø–∏—Å–µ–π`
      );
      console.log(`üìã violations: ${user.violations?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
      console.log(
        `üìã pointsTransactions: ${user.pointsTransactions?.length || 0} –∑–∞–ø–∏—Å–µ–π`
      );

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–æ–ª–µ–π
      console.log('\nüö® –ü–†–û–í–ï–†–ö–ê –ü–†–û–ë–õ–ï–ú–ù–´–• –ü–û–õ–ï–ô:');
      if (!user.name || user.name === 'undefined') {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–ª–µ name –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ undefined');
      } else {
        console.log('‚úÖ –ü–æ–ª–µ name –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      }

      if (!user.userPoints) {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–ª–µ userPoints –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      } else if (user.userPoints.points === 0) {
        console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë–∞–ª–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–≤–Ω—ã 0');
      } else {
        console.log('‚úÖ –ü–æ–ª–µ userPoints –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      }

      if (!user._count) {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–ª–µ _count –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
      } else {
        console.log('‚úÖ –ü–æ–ª–µ _count –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      }
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ (–Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç)
    console.log('\nüìä –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤');
    const pointsResponse = await fetch(
      `${BASE_URL}/api/admin/users/${USER_ID}/points`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Cookie:
            'next-auth.session-token=3621ebb0-8151-4e84-9b65-7e6ec958852a',
        },
        body: JSON.stringify({
          userId: USER_ID,
          amount: 10,
          type: 'admin_adjustment',
          description: '–¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤',
        }),
      }
    );

    console.log(`üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ API –±–∞–ª–ª–æ–≤: ${pointsResponse.status}`);

    if (pointsResponse.status === 404) {
      console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê: API —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      console.log('üìã –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å: /api/admin/users/[id]/points.js');
    } else {
      console.log(`üì° –û—Ç–≤–µ—Ç API –±–∞–ª–ª–æ–≤: ${await pointsResponse.text()}`);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
testUserDetailsAPI().catch(console.error);
