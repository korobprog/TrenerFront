const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function testTrainingAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await prisma.$connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ\n');

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ Question
    console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ Question...');
    const questionsCount = await prisma.question.count();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: ${questionsCount}`);

    if (questionsCount > 0) {
      const sampleQuestion = await prisma.question.findFirst({
        include: {
          favoriteQuestions: true,
          userProgress: true,
        },
      });
      console.log('‚úÖ –ú–æ–¥–µ–ª—å Question —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log(`   - ID: ${sampleQuestion.id}`);
      console.log(`   - Text: ${sampleQuestion.text?.substring(0, 50)}...`);
      console.log(`   - Topic: ${sampleQuestion.topic || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      console.log(
        `   - Difficulty: ${sampleQuestion.difficulty || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`
      );
    }
    console.log('');

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ UserFavoriteQuestion
    console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ UserFavoriteQuestion...');
    const favoritesCount = await prisma.userFavoriteQuestion.count();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: ${favoritesCount}\n`);

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ UserProgress
    console.log('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ UserProgress...');
    const progressCount = await prisma.userProgress.count();
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: ${progressCount}\n`);

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É
    console.log('5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç—É...');
    const searchResults = await prisma.question.findMany({
      where: {
        text: {
          contains: '—á—Ç–æ',
          mode: 'insensitive',
        },
      },
      take: 3,
    });
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å "—á—Ç–æ": ${searchResults.length}\n`);

    // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–∞–º
    console.log('6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–∞–º...');
    const topics = await prisma.question.findMany({
      select: {
        topic: true,
      },
      distinct: ['topic'],
      where: {
        topic: {
          not: null,
        },
      },
    });
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–º: ${topics.length}`);
    if (topics.length > 0) {
      console.log('   –¢–µ–º—ã:', topics.map((t) => t.topic).join(', '));
    }
    console.log('');

    // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    console.log('7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏...');
    const difficulties = await prisma.question.findMany({
      select: {
        difficulty: true,
      },
      distinct: ['difficulty'],
      where: {
        difficulty: {
          not: null,
        },
      },
    });
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: ${difficulties.length}`);
    if (difficulties.length > 0) {
      console.log(
        '   –°–ª–æ–∂–Ω–æ—Å—Ç–∏:',
        difficulties.map((d) => d.difficulty).join(', ')
      );
    }
    console.log('');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –†–µ–∑—é–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
    console.log('‚úÖ –ü–æ–∏—Å–∫ –ø–æ –ø–æ–ª—é "text" –≤–º–µ—Å—Ç–æ "question"');
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–≤—è–∑—å favoriteQuestions –≤ –º–æ–¥–µ–ª–∏ Question');
    console.log('‚úÖ –£–¥–∞–ª–µ–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –º–æ–¥–µ–ª–∏ achievement');
    console.log('‚úÖ –í—Å–µ API endpoints –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    console.error('–î–µ—Ç–∞–ª–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testTrainingAPI();
