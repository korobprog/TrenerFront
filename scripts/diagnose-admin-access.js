const { PrismaClient } = require('@prisma/client');
const fs = require('fs');
const path = require('path');

const prisma = new PrismaClient();

async function diagnoseAdminAccess() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–û–°–¢–£–ü–ê –ö –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò');
  console.log('=====================================\n');

  const issues = [];

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    const adminApiPath = path.join(process.cwd(), 'pages', 'api', 'admin');
    const adminStatisticsPath = path.join(adminApiPath, 'statistics.js');

    if (!fs.existsSync(adminApiPath)) {
      issues.push({
        type: 'CRITICAL',
        category: 'API_ENDPOINTS',
        problem: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞ /pages/api/admin/',
        description: 'API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç',
        impact: '–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –∞–¥–º–∏–Ω API –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 404',
      });
      console.log('‚ùå –ü–∞–ø–∫–∞ /pages/api/admin/ –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢');
    } else {
      console.log('‚úÖ –ü–∞–ø–∫–∞ /pages/api/admin/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    if (!fs.existsSync(adminStatisticsPath)) {
      issues.push({
        type: 'CRITICAL',
        category: 'API_ENDPOINTS',
        problem: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª /pages/api/admin/statistics.js',
        description: '–≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        impact: '–ó–∞–ø—Ä–æ—Å—ã –∫ /api/admin/statistics –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 404',
      });
      console.log('‚ùå –§–∞–π–ª /pages/api/admin/statistics.js –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢');
    } else {
      console.log('‚úÖ –§–∞–π–ª /pages/api/admin/statistics.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

    const users = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        role: true,
        isBlocked: true,
        createdAt: true,
      },
      orderBy: {
        createdAt: 'desc',
      },
    });

    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${users.length}`);

    const roleStats = users.reduce((acc, user) => {
      acc[user.role] = (acc[user.role] || 0) + 1;
      return acc;
    }, {});

    console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–ª–µ–π:');
    Object.entries(roleStats).forEach(([role, count]) => {
      console.log(`   ${role}: ${count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è makstreid@yandex.ru
    const targetUser = users.find(
      (user) => user.email === 'makstreid@yandex.ru'
    );
    if (targetUser) {
      console.log('\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å makstreid@yandex.ru:');
      console.log(`   ID: ${targetUser.id}`);
      console.log(`   –†–æ–ª—å: ${targetUser.role}`);
      console.log(`   –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: ${targetUser.isBlocked}`);
      console.log(`   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${targetUser.createdAt}`);

      if (targetUser.role !== 'superadmin') {
        issues.push({
          type: 'CRITICAL',
          category: 'USER_ROLES',
          problem: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å makstreid@yandex.ru –∏–º–µ–µ—Ç —Ä–æ–ª—å '${targetUser.role}' –≤–º–µ—Å—Ç–æ 'superadmin'`,
          description:
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã—Ö –ø—Ä–∞–≤',
          impact: '–î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
        });
        console.log('‚ùå –†–û–õ–¨ –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –¢–†–ï–ë–û–í–ê–ù–ò–Ø–ú');
      } else {
        console.log('‚úÖ –†–æ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
      }

      if (targetUser.isBlocked) {
        issues.push({
          type: 'CRITICAL',
          category: 'USER_ROLES',
          problem: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å makstreid@yandex.ru –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
          description:
            '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏',
          impact: '–î–æ—Å—Ç—É–ø –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω',
        });
        console.log('‚ùå –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù');
      } else {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
      }
    } else {
      issues.push({
        type: 'CRITICAL',
        category: 'USER_ROLES',
        problem: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å makstreid@yandex.ru –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
        description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ',
        impact: '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
      });
      console.log('‚ùå –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ù–ï –ù–ê–ô–î–ï–ù –í –ë–ê–ó–ï –î–ê–ù–ù–´–•');
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    const superAdmins = users.filter((user) => user.role === 'superadmin');
    console.log(`\nüëë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ: ${superAdmins.length}`);
    if (superAdmins.length === 0) {
      issues.push({
        type: 'WARNING',
        category: 'USER_ROLES',
        problem: '–í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        description: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø—Ä–∞–≤–∞–º–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        impact: '–ù–∏–∫—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏',
      });
      console.log('‚ö†Ô∏è –ù–ï–¢ –°–£–ü–ï–†-–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í');
    } else {
      superAdmins.forEach((admin) => {
        console.log(`   ${admin.email} (ID: ${admin.id})`);
      });
    }

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ middleware
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ middleware –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');

    const adminAuthPath = path.join(
      process.cwd(),
      'lib',
      'middleware',
      'adminAuth.js'
    );
    const superAdminAuthPath = path.join(
      process.cwd(),
      'lib',
      'middleware',
      'superAdminAuth.js'
    );

    if (fs.existsSync(adminAuthPath)) {
      console.log('‚úÖ Middleware adminAuth.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      issues.push({
        type: 'CRITICAL',
        category: 'MIDDLEWARE',
        problem: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª lib/middleware/adminAuth.js',
        description:
          'Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        impact: '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω —Ñ—É–Ω–∫—Ü–∏—è–º',
      });
      console.log('‚ùå Middleware adminAuth.js –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢');
    }

    if (fs.existsSync(superAdminAuthPath)) {
      console.log('‚úÖ Middleware superAdminAuth.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      issues.push({
        type: 'CRITICAL',
        category: 'MIDDLEWARE',
        problem: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª lib/middleware/superAdminAuth.js',
        description:
          'Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        impact: '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω —Ñ—É–Ω–∫—Ü–∏—è–º',
      });
      console.log('‚ùå Middleware superAdminAuth.js –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢');
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ role –≤ –º–æ–¥–µ–ª–∏ User
    const schemaPath = path.join(process.cwd(), 'prisma', 'schema.prisma');
    if (fs.existsSync(schemaPath)) {
      const schemaContent = fs.readFileSync(schemaPath, 'utf8');
      if (schemaContent.includes('role') && schemaContent.includes('String')) {
        console.log('‚úÖ –ü–æ–ª–µ role —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å—Ö–µ–º–µ User');
      } else {
        issues.push({
          type: 'CRITICAL',
          category: 'DATABASE_SCHEMA',
          problem: '–ü–æ–ª–µ role –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–æ–¥–µ–ª–∏ User',
          description: '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
          impact: '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        });
        console.log('‚ùå –ü–æ–ª–µ role –ù–ï –ù–ê–ô–î–ï–ù–û –≤ —Å—Ö–µ–º–µ User');
      }

      if (schemaContent.includes('AdminActionLog')) {
        console.log('‚úÖ –ú–æ–¥–µ–ª—å AdminActionLog —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      } else {
        issues.push({
          type: 'WARNING',
          category: 'DATABASE_SCHEMA',
          problem: '–ú–æ–¥–µ–ª—å AdminActionLog –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
          description: '–ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤',
          impact: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∞—É–¥–∏—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π',
        });
        console.log('‚ö†Ô∏è –ú–æ–¥–µ–ª—å AdminActionLog –ù–ï –ù–ê–ô–î–ï–ù–ê');
      }
    } else {
      issues.push({
        type: 'CRITICAL',
        category: 'DATABASE_SCHEMA',
        problem: '–§–∞–π–ª prisma/schema.prisma –Ω–µ –Ω–∞–π–¥–µ–Ω',
        description: '–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        impact: '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö',
      });
      console.log('‚ùå –§–∞–π–ª schema.prisma –ù–ï –ù–ê–ô–î–ï–ù');
    }

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');

    const adminPagesPath = path.join(process.cwd(), 'pages', 'admin');
    if (fs.existsSync(adminPagesPath)) {
      console.log('‚úÖ –ü–∞–ø–∫–∞ /pages/admin/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      const adminFiles = fs.readdirSync(adminPagesPath);
      console.log(`üìÅ –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ admin: ${adminFiles.join(', ')}`);
    } else {
      issues.push({
        type: 'WARNING',
        category: 'ADMIN_PAGES',
        problem: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞ /pages/admin/',
        description: '–°—Ç—Ä–∞–Ω–∏—Ü—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç',
        impact: '–ù–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è',
      });
      console.log('‚ö†Ô∏è –ü–∞–ø–∫–∞ /pages/admin/ –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢');
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    console.log('\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢');
    console.log('==================');

    const criticalIssues = issues.filter((issue) => issue.type === 'CRITICAL');
    const warningIssues = issues.filter((issue) => issue.type === 'WARNING');

    console.log(`üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: ${criticalIssues.length}`);
    console.log(`‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${warningIssues.length}`);

    if (criticalIssues.length > 0) {
      console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:');
      criticalIssues.forEach((issue, index) => {
        console.log(`\n${index + 1}. ${issue.problem}`);
        console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${issue.category}`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${issue.description}`);
        console.log(`   –í–ª–∏—è–Ω–∏–µ: ${issue.impact}`);
      });
    }

    if (warningIssues.length > 0) {
      console.log('\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:');
      warningIssues.forEach((issue, index) => {
        console.log(`\n${index + 1}. ${issue.problem}`);
        console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${issue.category}`);
        console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${issue.description}`);
        console.log(`   –í–ª–∏—è–Ω–∏–µ: ${issue.impact}`);
      });
    }

    if (issues.length === 0) {
      console.log('\n‚úÖ –ü—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ! –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    }

    return {
      totalIssues: issues.length,
      criticalIssues: criticalIssues.length,
      warningIssues: warningIssues.length,
      issues: issues,
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ:', error);
    return {
      error: error.message,
      totalIssues: -1,
    };
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
if (require.main === module) {
  diagnoseAdminAccess()
    .then((result) => {
      if (result.error) {
        console.log('\nüí• –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π');
        process.exit(1);
      } else if (result.criticalIssues > 0) {
        console.log(
          '\nüö® –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è'
        );
        process.exit(1);
      } else {
        console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        process.exit(0);
      }
    })
    .catch((error) => {
      console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { diagnoseAdminAccess };
