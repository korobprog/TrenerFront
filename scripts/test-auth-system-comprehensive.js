/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */

const fs = require('fs');
const path = require('path');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  reset: '\x1b[0m',
  bold: '\x1b[1m',
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

async function testAuthSystemComprehensive() {
  log('üîç –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò', 'bold');
  log('='.repeat(60), 'blue');

  const results = {
    passed: 0,
    failed: 0,
    warnings: 0,
    details: [],
  };

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  log('\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò', 'blue');

  const configFiles = [
    { path: 'pages/api/auth/[...nextauth].js', name: 'NextAuth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è' },
    {
      path: 'pages/user/auth-settings.js',
      name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
    },
    {
      path: 'pages/api/user/auth-settings.js',
      name: 'API –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
    },
    {
      path: 'pages/auth/verify-request.js',
      name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email',
    },
    { path: 'pages/auth/signin.js', name: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞' },
    { path: 'styles/user/AuthSettings.module.css', name: 'CSS —Å—Ç–∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫' },
    { path: 'prisma/schema.prisma', name: '–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' },
  ];

  for (const file of configFiles) {
    if (fs.existsSync(file.path)) {
      log(`   ‚úÖ ${file.name}`, 'green');
      results.passed++;
    } else {
      log(`   ‚ùå ${file.name} - —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'red');
      results.failed++;
    }
    results.details.push(
      `${file.name}: ${fs.existsSync(file.path) ? 'OK' : 'MISSING'}`
    );
  }

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø', 'blue');

  const envVars = [
    { name: 'NEXTAUTH_URL', required: true },
    { name: 'NEXTAUTH_SECRET', required: true },
    { name: 'YANDEX_SMTP_HOST', required: true },
    { name: 'YANDEX_SMTP_PORT', required: true },
    { name: 'YANDEX_SMTP_USER', required: true },
    { name: 'YANDEX_SMTP_PASSWORD', required: true, sensitive: true },
    { name: 'YANDEX_EMAIL_FROM', required: true },
    { name: 'DATABASE_URL', required: true, sensitive: true },
  ];

  for (const envVar of envVars) {
    const value = process.env[envVar.name];
    if (value && !value.includes('your_') && !value.includes('_here')) {
      log(`   ‚úÖ ${envVar.name}`, 'green');
      results.passed++;
    } else if (envVar.required) {
      log(
        `   ‚ùå ${envVar.name} - –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder`,
        'red'
      );
      results.failed++;
    } else {
      log(`   ‚ö†Ô∏è  ${envVar.name} - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è, –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞`, 'yellow');
      results.warnings++;
    }
    results.details.push(
      `${envVar.name}: ${value ? (envVar.sensitive ? 'SET' : 'OK') : 'MISSING'}`
    );
  }

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã NextAuth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê NEXTAUTH –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò', 'blue');

  try {
    const nextAuthContent = fs.readFileSync(
      'pages/api/auth/[...nextauth].js',
      'utf8'
    );

    const checks = [
      { pattern: /EmailProvider/, name: 'Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä' },
      { pattern: /GoogleProvider/, name: 'Google –ø—Ä–æ–≤–∞–π–¥–µ—Ä' },
      { pattern: /GitHubProvider/, name: 'GitHub –ø—Ä–æ–≤–∞–π–¥–µ—Ä' },
      { pattern: /CredentialsProvider/, name: 'Credentials –ø—Ä–æ–≤–∞–π–¥–µ—Ä' },
      { pattern: /YANDEX_SMTP_HOST/, name: '–Ø–Ω–¥–µ–∫—Å SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' },
      {
        pattern: /checkUserAuthSettings/,
        name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      },
      {
        pattern: /handleFirstTimeUserRegistration/,
        name: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      },
      { pattern: /UserAuthSettings/, name: '–ú–æ–¥–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' },
    ];

    for (const check of checks) {
      if (check.pattern.test(nextAuthContent)) {
        log(`   ‚úÖ ${check.name}`, 'green');
        results.passed++;
      } else {
        log(`   ‚ùå ${check.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'red');
        results.failed++;
      }
      results.details.push(
        `NextAuth ${check.name}: ${
          check.pattern.test(nextAuthContent) ? 'OK' : 'MISSING'
        }`
      );
    }
  } catch (error) {
    log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è NextAuth –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`, 'red');
    results.failed++;
  }

  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  log('\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–•–ï–ú–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•', 'blue');

  try {
    const schemaContent = fs.readFileSync('prisma/schema.prisma', 'utf8');

    const dbChecks = [
      { pattern: /model UserAuthSettings/, name: '–ú–æ–¥–µ–ª—å UserAuthSettings' },
      { pattern: /enableEmailAuth.*Boolean/, name: '–ü–æ–ª–µ enableEmailAuth' },
      { pattern: /enableGoogleAuth.*Boolean/, name: '–ü–æ–ª–µ enableGoogleAuth' },
      { pattern: /enableGithubAuth.*Boolean/, name: '–ü–æ–ª–µ enableGithubAuth' },
      {
        pattern: /enableCredentialsAuth.*Boolean/,
        name: '–ü–æ–ª–µ enableCredentialsAuth',
      },
      { pattern: /requireTwoFactor.*Boolean/, name: '–ü–æ–ª–µ requireTwoFactor' },
      { pattern: /sessionTimeout.*Int/, name: '–ü–æ–ª–µ sessionTimeout' },
      {
        pattern: /authSettings.*UserAuthSettings/,
        name: '–°–≤—è–∑—å User -> UserAuthSettings',
      },
    ];

    for (const check of dbChecks) {
      if (check.pattern.test(schemaContent)) {
        log(`   ‚úÖ ${check.name}`, 'green');
        results.passed++;
      } else {
        log(`   ‚ùå ${check.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'red');
        results.failed++;
      }
      results.details.push(
        `Schema ${check.name}: ${
          check.pattern.test(schemaContent) ? 'OK' : 'MISSING'
        }`
      );
    }
  } catch (error) {
    log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${error.message}`, 'red');
    results.failed++;
  }

  // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint
  log('\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê API ENDPOINT', 'blue');

  try {
    const apiContent = fs.readFileSync(
      'pages/api/user/auth-settings.js',
      'utf8'
    );

    const apiChecks = [
      { pattern: /getServerSession/, name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏' },
      { pattern: /req\.method === 'GET'/, name: '–û–±—Ä–∞–±–æ—Ç–∫–∞ GET –∑–∞–ø—Ä–æ—Å–æ–≤' },
      { pattern: /req\.method === 'PUT'/, name: '–û–±—Ä–∞–±–æ—Ç–∫–∞ PUT –∑–∞–ø—Ä–æ—Å–æ–≤' },
      {
        pattern: /prisma\.userAuthSettings\.findUnique/,
        name: '–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫',
      },
      {
        pattern: /prisma\.userAuthSettings\.upsert/,
        name: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫',
      },
      { pattern: /typeof.*boolean/, name: '–í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö' },
      { pattern: /sessionTimeout.*1.*168/, name: '–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Å—Å–∏–∏' },
    ];

    for (const check of apiChecks) {
      if (check.pattern.test(apiContent)) {
        log(`   ‚úÖ ${check.name}`, 'green');
        results.passed++;
      } else {
        log(`   ‚ùå ${check.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'red');
        results.failed++;
      }
      results.details.push(
        `API ${check.name}: ${
          check.pattern.test(apiContent) ? 'OK' : 'MISSING'
        }`
      );
    }
  } catch (error) {
    log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è API endpoint: ${error.message}`, 'red');
    results.failed++;
  }

  // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
  log('\n6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–†–ê–ù–ò–¶–´ –ù–ê–°–¢–†–û–ï–ö', 'blue');

  try {
    const pageContent = fs.readFileSync('pages/user/auth-settings.js', 'utf8');

    const pageChecks = [
      { pattern: /useSession/, name: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏' },
      { pattern: /getServerSideProps/, name: '–°–µ—Ä–≤–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏' },
      { pattern: /enableEmailAuth/, name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Email –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' },
      { pattern: /enableGoogleAuth/, name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' },
      { pattern: /enableGithubAuth/, name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏' },
      {
        pattern: /enableCredentialsAuth/,
        name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Credentials –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
      },
      {
        pattern: /requireTwoFactor/,
        name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
      },
      { pattern: /sessionTimeout/, name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å–µ—Å—Å–∏–∏' },
    ];

    for (const check of pageChecks) {
      if (check.pattern.test(pageContent)) {
        log(`   ‚úÖ ${check.name}`, 'green');
        results.passed++;
      } else {
        log(`   ‚ùå ${check.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'red');
        results.failed++;
      }
      results.details.push(
        `Page ${check.name}: ${
          check.pattern.test(pageContent) ? 'OK' : 'MISSING'
        }`
      );
    }
  } catch (error) {
    log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫: ${error.message}`, 'red');
    results.failed++;
  }

  // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS —Å—Ç–∏–ª–µ–π
  log('\n7Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê CSS –°–¢–ò–õ–ï–ô', 'blue');

  try {
    const cssContent = fs.readFileSync(
      'styles/user/AuthSettings.module.css',
      'utf8'
    );

    const cssChecks = [
      { pattern: /\.container/, name: '–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä' },
      { pattern: /\.checkboxLabel/, name: '–°—Ç–∏–ª–∏ —á–µ–∫–±–æ–∫—Å–æ–≤' },
      { pattern: /\.saveButton/, name: '–ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è' },
      { pattern: /\.message/, name: '–°—Ç–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π' },
      { pattern: /\.error/, name: '–°—Ç–∏–ª–∏ –æ—à–∏–±–æ–∫' },
      { pattern: /@media.*max-width/, name: '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å' },
    ];

    for (const check of cssChecks) {
      if (check.pattern.test(cssContent)) {
        log(`   ‚úÖ ${check.name}`, 'green');
        results.passed++;
      } else {
        log(`   ‚ùå ${check.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω`, 'red');
        results.failed++;
      }
      results.details.push(
        `CSS ${check.name}: ${
          check.pattern.test(cssContent) ? 'OK' : 'MISSING'
        }`
      );
    }
  } catch (error) {
    log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è CSS —Ñ–∞–π–ª–∞: ${error.message}`, 'red');
    results.failed++;
  }

  // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  log('\n' + '='.repeat(60), 'blue');
  log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢', 'bold');
  log('='.repeat(60), 'blue');

  log(`\n‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${results.passed}`, 'green');
  log(
    `‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${results.failed}`,
    results.failed > 0 ? 'red' : 'green'
  );
  log(
    `‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${results.warnings}`,
    results.warnings > 0 ? 'yellow' : 'green'
  );

  const total = results.passed + results.failed + results.warnings;
  const successRate =
    total > 0 ? Math.round((results.passed / total) * 100) : 0;

  log(
    `\nüìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏: ${successRate}%`,
    successRate >= 80 ? 'green' : successRate >= 60 ? 'yellow' : 'red'
  );

  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:', 'blue');

  if (results.failed === 0 && results.warnings === 0) {
    log('   üéâ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!', 'green');
  } else {
    if (results.failed > 0) {
      log('   üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏', 'red');
    }
    if (results.warnings > 0) {
      log('   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã', 'yellow');
    }
  }

  // –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
  log('\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:', 'blue');
  log('   1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ø–Ω–¥–µ–∫—Å –ø–æ—á—Ç—ã', 'yellow');
  log('   2. –û–±–Ω–æ–≤–∏—Ç–µ YANDEX_SMTP_PASSWORD –≤ .env', 'yellow');
  log(
    '   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É email: node test-yandex-email-provider.js --send-test',
    'yellow'
  );
  log(
    '   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫: http://localhost:3000/user/auth-settings',
    'yellow'
  );
  log('   5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã', 'yellow');

  return {
    success: results.failed === 0,
    results,
  };
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
  testAuthSystemComprehensive()
    .then((result) => {
      process.exit(result.success ? 0 : 1);
    })
    .catch((error) => {
      console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { testAuthSystemComprehensive };
