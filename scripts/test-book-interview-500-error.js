/**
 * –¢–µ—Å—Ç –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è HTTP 500 –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ mock-–∏–Ω—Ç–µ—Ä–≤—å—é
 * –ò—Å–ø–æ–ª—å–∑—É–µ–º cookie –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é –ø–µ—Ä–≤–æ–≥–æ
 */

const testBookInterview500Error = async () => {
  console.log('üîç –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º HTTP 500 –æ—à–∏–±–∫—É –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é...\n');

  // ID –∏–Ω—Ç–µ—Ä–≤—å—é –∏–∑ –æ—à–∏–±–∫–∏ (—Å–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º cmb9k4mtb0000mkc4b5uwfgtz)
  const interviewId = 'cmbbur3rh0009mkcyhjmnbh5p';
  const url = `http://localhost:3000/api/mock-interviews/${interviewId}/book`;

  // Cookie –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (makstreid@yandex.ru, ID: cmbbcczhj000emkxw3fub8ld3)
  const authCookie =
    'next-auth.csrf-token=80138e765c0e3a044ba9d6d500592348beeaa8ef6d3a651dc9ba3d8fb72a0efb%7C176b223c60a29d126d9ee6af331342dab3665ca25fdfe07ef45af2838972037e; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2F; next-auth.session-token=7e18e84c-efee-467f-901e-070fe591860a';

  console.log(`üìç URL: ${url}`);
  console.log(`üìç –ú–µ—Ç–æ–¥: POST`);
  console.log(`üìç ID –∏–Ω—Ç–µ—Ä–≤—å—é: ${interviewId}`);
  console.log(`üìç –ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä: cmb9k4mtb0000mkc4b5uwfgtz (korobprog@gmail.com)`);
  console.log(
    `üìç –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è: cmbbcczhj000emkxw3fub8ld3 (makstreid@yandex.ru)`
  );
  console.log(`üìç Cookie: ${authCookie.substring(0, 100)}...`);
  console.log('');

  try {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è 500 –æ—à–∏–±–∫–∏...');

    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Cookie: authCookie,
        'User-Agent':
          'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 YaBrowser/25.4.0.0 Safari/537.36',
        Accept: 'application/json',
        Referer: 'http://localhost:3000/mock-interviews',
      },
    });

    console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å —Ç–µ–∫—Å—Ç: ${response.statusText}`);

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    console.log('\nüìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:');
    for (const [key, value] of response.headers.entries()) {
      console.log(`  ${key}: ${value}`);
    }

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
    let responseData;
    try {
      responseData = await response.json();
      console.log('\nüìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (JSON):');
      console.log(JSON.stringify(responseData, null, 2));
    } catch (jsonError) {
      console.log('\n‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞:', jsonError.message);

      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞–∫ —Ç–µ–∫—Å—Ç
      try {
        const textResponse = await response.text();
        console.log('\nüìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (—Ç–µ–∫—Å—Ç):');
        console.log(textResponse);
      } catch (textError) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', textError.message);
      }
    }

    if (!response.ok) {
      console.log(`\n‚ùå HTTP –æ—à–∏–±–∫–∞: ${response.status}`);
      if (responseData) {
        console.log(
          'üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:',
          responseData.message || responseData.error
        );
      }

      // –ï—Å–ª–∏ —ç—Ç–æ 500 –æ—à–∏–±–∫–∞, —Ç–æ –º—ã –Ω–∞—à–ª–∏ –ø—Ä–æ–±–ª–µ–º—É!
      if (response.status === 500) {
        console.log('\nüéØ –ù–ê–ô–î–ï–ù–ê HTTP 500 –û–®–ò–ë–ö–ê!');
        console.log(
          'üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è stack trace'
        );
        console.log('üí° –≠—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–∞ –æ—à–∏–±–∫–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã –∏—â–µ–º!');
      }
    } else {
      console.log('\n‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    }
  } catch (error) {
    console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:');
    console.error('–¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
    console.error('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    console.error('Stack trace:', error.stack);
  }

  console.log('\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  console.log(
    'üìù –û–∂–∏–¥–∞–µ–º —É–≤–∏–¥–µ—Ç—å HTTP 500 –æ—à–∏–±–∫—É –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–ª–µ–º points –≤ –º–æ–¥–µ–ª–∏ User'
  );
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBookInterview500Error().catch(console.error);
