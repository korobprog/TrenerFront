/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö API
 */

async function testStatisticsAPI() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê API –°–¢–ê–¢–ò–°–¢–ò–ö–ò');
  console.log('================================');

  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ /api/admin/statistics...');

    const response = await fetch('http://localhost:3000/api/admin/statistics', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        Cookie: 'next-auth.session-token=test',
      },
    });

    console.log('üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
    console.log(
      'üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:',
      Object.fromEntries(response.headers.entries())
    );

    if (!response.ok) {
      const errorText = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞ API:', errorText);
      return;
    }

    const data = await response.json();
    console.log('‚úÖ –û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('üìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:');
    console.log(JSON.stringify(data, null, 2));

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –î–ê–ù–ù–´–•:');
    console.log('================================');

    console.log('üî∏ –ï—Å—Ç—å –ª–∏ data.success?', 'success' in data);
    console.log('üî∏ –ï—Å—Ç—å –ª–∏ data.data?', 'data' in data);

    if (data.data) {
      console.log('üî∏ –ï—Å—Ç—å –ª–∏ data.data.users?', 'users' in data.data);
      console.log(
        'üî∏ –ï—Å—Ç—å –ª–∏ data.data.interviews?',
        'interviews' in data.data
      );
      console.log('üî∏ –ï—Å—Ç—å –ª–∏ data.data.points?', 'points' in data.data);
      console.log(
        'üî∏ –ï—Å—Ç—å –ª–∏ data.data.adminActivity?',
        'adminActivity' in data.data
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–∂–∏–¥–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    console.log('\nüéØ –ß–¢–û –û–ñ–ò–î–ê–ï–¢ –§–†–û–ù–¢–ï–ù–î:');
    console.log('================================');
    console.log('üî∏ data.summary.users.total');
    console.log('üî∏ data.summary.interviews.total');
    console.log('üî∏ data.summary.interviews.pending');
    console.log('üî∏ data.summary.interviews.booked');
    console.log('üî∏ data.summary.interviews.noShow');
    console.log('üî∏ data.recentLogs');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API
    console.log('\nüì§ –ß–¢–û –§–ê–ö–¢–ò–ß–ï–°–ö–ò –í–û–ó–í–†–ê–©–ê–ï–¢ API:');
    console.log('================================');
    if (data.data) {
      console.log('üî∏ data.data.users.total:', data.data.users?.total);
      console.log(
        'üî∏ data.data.interviews.active:',
        data.data.interviews?.active
      );
      console.log(
        'üî∏ data.data.interviews.byStatus:',
        data.data.interviews?.byStatus
      );
      console.log('üî∏ data.data.points:', data.data.points);
      console.log('üî∏ data.data.adminActivity:', data.data.adminActivity);
    }

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    console.log('\nüí• –°–ò–ú–£–õ–Ø–¶–ò–Ø –û–®–ò–ë–ö–ò –§–†–û–ù–¢–ï–ù–î–ê:');
    console.log('================================');
    try {
      // –≠—Ç–æ —Ç–æ, —á—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
      const usersCount = data.summary.users.total;
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ usersCount:', usersCount);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–ª—É—á–∏—Ç—å data.summary.users.total:');
      console.log('   ', error.message);
      console.log('   –¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
    }
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testStatisticsAPI();
