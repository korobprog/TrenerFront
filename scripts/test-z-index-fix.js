/**
 * –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å z-index
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–≤–µ—Ä—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ z-index —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function checkZIndexHierarchy() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ z-index...');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  const rootStyles = getComputedStyle(document.documentElement);
  const userModalZIndex = rootStyles.getPropertyValue('--z-user-modal').trim();
  const userModalHeaderZIndex = rootStyles
    .getPropertyValue('--z-user-modal-header')
    .trim();

  console.log('üìä CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ z-index:');
  console.log(`  --z-user-modal: ${userModalZIndex || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
  console.log(
    `  --z-user-modal-header: ${userModalHeaderZIndex || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`
  );

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const mainGrid = document.querySelector('[class*="mainGrid"]');
  const heroTitle = document.querySelector('[class*="heroTitle"]');
  const heroSubtitle = document.querySelector('[class*="heroSubtitle"]');

  if (mainGrid) {
    const mainGridZIndex = getComputedStyle(mainGrid).zIndex;
    console.log(`üìÑ mainGrid z-index: ${mainGridZIndex}`);
  }

  if (heroTitle) {
    const heroTitleZIndex = getComputedStyle(heroTitle).zIndex;
    console.log(`üè∑Ô∏è heroTitle z-index: ${heroTitleZIndex}`);
  }

  if (heroSubtitle) {
    const heroSubtitleZIndex = getComputedStyle(heroSubtitle).zIndex;
    console.log(`üìù heroSubtitle z-index: ${heroSubtitleZIndex}`);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ (–µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ)
  const modalOverlay = document.querySelector('[class*="overlay"]');
  const modalHeader = document.querySelector('[class*="header"]');

  if (modalOverlay) {
    const overlayZIndex = getComputedStyle(modalOverlay).zIndex;
    console.log(`üî≤ Modal overlay z-index: ${overlayZIndex}`);
  }

  if (modalHeader) {
    const headerZIndex = getComputedStyle(modalHeader).zIndex;
    console.log(`üìã Modal header z-index: ${headerZIndex}`);
  }

  return {
    userModalZIndex,
    userModalHeaderZIndex,
    mainGridZIndex: mainGrid ? getComputedStyle(mainGrid).zIndex : '–Ω–µ –Ω–∞–π–¥–µ–Ω',
    modalOverlayZIndex: modalOverlay
      ? getComputedStyle(modalOverlay).zIndex
      : '–Ω–µ –Ω–∞–π–¥–µ–Ω',
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function simulateModalOpen() {
  console.log('üé≠ –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const overlay = document.createElement('div');
  overlay.className = 'test-modal-overlay';
  overlay.style.cssText = `
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.6);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: var(--z-user-modal, 9999);
    backdrop-filter: blur(4px);
  `;

  const modal = document.createElement('div');
  modal.className = 'test-modal';
  modal.style.cssText = `
    background: white;
    border-radius: 16px;
    padding: 2rem;
    max-width: 500px;
    width: 90%;
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    position: relative;
  `;

  const header = document.createElement('div');
  header.className = 'test-modal-header';
  header.style.cssText = `
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    z-index: var(--z-user-modal-header, 10000);
    position: relative;
  `;

  const title = document.createElement('h2');
  title.textContent = '–¢–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ';
  title.style.cssText = `
    margin: 0;
    color: #2d3748;
    font-size: 1.5rem;
  `;

  const closeButton = document.createElement('button');
  closeButton.textContent = '‚úï';
  closeButton.style.cssText = `
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 4px;
  `;

  const content = document.createElement('div');
  content.innerHTML = `
    <p style="margin: 0; color: #4a5568; line-height: 1.6;">
      –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ z-index. 
      –û–Ω–æ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, 
      –≤–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–æ–∫ "SuperMock" –∏ –æ–ø–∏—Å–∞–Ω–∏–µ.
    </p>
    <div style="margin-top: 1rem; padding: 1rem; background: #f7fafc; border-radius: 8px;">
      <strong>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:</strong>
      <ul style="margin: 0.5rem 0 0 1rem; color: #4a5568;">
        <li>–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤–∏–¥–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é</li>
        <li>–ó–∞–≥–æ–ª–æ–≤–æ–∫ "SuperMock" –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</li>
        <li>–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</li>
        <li>–§–æ–Ω —Ä–∞–∑–º—ã—Ç –∏ –∑–∞—Ç–µ–º–Ω–µ–Ω</li>
      </ul>
    </div>
  `;

  // –°–æ–±–∏—Ä–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  header.appendChild(title);
  header.appendChild(closeButton);
  modal.appendChild(header);
  modal.appendChild(content);
  overlay.appendChild(modal);

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  closeButton.addEventListener('click', () => {
    document.body.removeChild(overlay);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
  });

  overlay.addEventListener('click', (e) => {
    if (e.target === overlay) {
      document.body.removeChild(overlay);
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ (–∫–ª–∏–∫ –ø–æ overlay)');
    }
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  document.body.appendChild(overlay);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º z-index –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    const overlayZIndex = getComputedStyle(overlay).zIndex;
    const headerZIndex = getComputedStyle(header).zIndex;

    console.log('üìä Z-index —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:');
    console.log(`  Overlay: ${overlayZIndex}`);
    console.log(`  Header: ${headerZIndex}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã—à–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const mainGrid = document.querySelector('[class*="mainGrid"]');
    if (mainGrid) {
      const mainGridZIndex = getComputedStyle(mainGrid).zIndex;
      const isAbove = parseInt(overlayZIndex) > parseInt(mainGridZIndex);
      console.log(
        `üîç –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã—à–µ mainGrid: ${isAbove ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`
      );
    }
  }, 100);

  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
function checkCSSVariables() {
  console.log('üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö...');

  const rootStyles = getComputedStyle(document.documentElement);
  const variables = [
    '--z-base',
    '--z-content',
    '--z-header',
    '--z-user-modal',
    '--z-user-modal-header',
    '--z-critical',
    '--z-emergency',
  ];

  variables.forEach((variable) => {
    const value = rootStyles.getPropertyValue(variable).trim();
    console.log(`  ${variable}: ${value || '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function runZIndexTest() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ z-index –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...');
  console.log('=====================================');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  checkCSSVariables();
  console.log('');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –∏–µ—Ä–∞—Ä—Ö–∏—é
  const hierarchy = checkZIndexHierarchy();
  console.log('');

  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const testButton = document.createElement('button');
  testButton.textContent = 'üß™ –û—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ';
  testButton.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    z-index: 1000;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.2s ease;
  `;

  testButton.addEventListener('click', simulateModalOpen);
  testButton.addEventListener('mouseenter', () => {
    testButton.style.transform = 'translateY(-2px)';
    testButton.style.boxShadow = '0 8px 20px rgba(0, 0, 0, 0.2)';
  });
  testButton.addEventListener('mouseleave', () => {
    testButton.style.transform = 'translateY(0)';
    testButton.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';
  });

  document.body.appendChild(testButton);

  console.log(
    '‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞.'
  );

  return hierarchy;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', runZIndexTest);
} else {
  runZIndexTest();
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.zIndexTest = {
  run: runZIndexTest,
  checkHierarchy: checkZIndexHierarchy,
  simulateModal: simulateModalOpen,
  checkVariables: checkCSSVariables,
};

console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
console.log('  zIndexTest.run() - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ—Å—Ç');
console.log('  zIndexTest.checkHierarchy() - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–µ—Ä–∞—Ä—Ö–∏—é z-index');
console.log('  zIndexTest.simulateModal() - –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
console.log('  zIndexTest.checkVariables() - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ');
