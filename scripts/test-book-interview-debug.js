/**
 * –¢–µ—Å—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ HTTP 500 –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ mock-–∏–Ω—Ç–µ—Ä–≤—å—é
 */

const testBookInterview = async () => {
  console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é...\n');

  // ID –∏–Ω—Ç–µ—Ä–≤—å—é –∏–∑ –æ—à–∏–±–∫–∏
  const interviewId = 'cmbbur3rh0009mkcyhjmnbh5p';
  const url = `http://localhost:3000/api/mock-interviews/${interviewId}/book`;

  console.log(`üìç URL: ${url}`);
  console.log(`üìç –ú–µ—Ç–æ–¥: POST`);
  console.log(`üìç ID –∏–Ω—Ç–µ—Ä–≤—å—é: ${interviewId}\n`);

  try {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å...');

    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        // –î–æ–±–∞–≤–ª—è–µ–º cookie –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        Cookie: process.env.TEST_COOKIE || '',
      },
    });

    console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å —Ç–µ–∫—Å—Ç: ${response.statusText}`);

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    console.log('\nüìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:');
    for (const [key, value] of response.headers.entries()) {
      console.log(`  ${key}: ${value}`);
    }

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
    let responseData;
    try {
      responseData = await response.json();
      console.log('\nüìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (JSON):');
      console.log(JSON.stringify(responseData, null, 2));
    } catch (jsonError) {
      console.log('\n‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞:', jsonError.message);

      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞–∫ —Ç–µ–∫—Å—Ç
      try {
        const textResponse = await response.text();
        console.log('\nüìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (—Ç–µ–∫—Å—Ç):');
        console.log(textResponse);
      } catch (textError) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', textError.message);
      }
    }

    if (!response.ok) {
      console.log(`\n‚ùå HTTP –æ—à–∏–±–∫–∞: ${response.status}`);
      if (responseData) {
        console.log(
          'üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:',
          responseData.message || responseData.error
        );
      }
    } else {
      console.log('\n‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    }
  } catch (error) {
    console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:');
    console.error('–¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
    console.error('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    console.error('Stack trace:', error.stack);
  }

  console.log('\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBookInterview().catch(console.error);
