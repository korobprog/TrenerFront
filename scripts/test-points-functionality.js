/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –ó–∞–ø—É—Å–∫: node test-points-functionality.js
 */

const puppeteer = require('puppeteer');

async function testPointsFunctionality() {
  console.log(
    'üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤...\n'
  );

  let browser;
  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    browser = await puppeteer.launch({
      headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
      defaultViewport: { width: 1280, height: 720 },
      args: ['--no-sandbox', '--disable-setuid-sandbox'],
    });

    const page = await browser.newPage();

    // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    page.on('console', (msg) => {
      console.log(`üåê Browser Console [${msg.type()}]:`, msg.text());
    });

    // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    page.on('response', (response) => {
      if (
        response.url().includes('/api/admin/users/') &&
        response.url().includes('/points')
      ) {
        console.log(`üì° API Response: ${response.status()} ${response.url()}`);
      }
    });

    console.log('1Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    await page.goto(
      'http://localhost:3000/admin/users/cmb9k4mtb0000mkc4b5uwfgtz',
      {
        waitUntil: 'networkidle2',
      }
    );

    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForTimeout(2000);

    console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å...');
    const pageTitle = await page.title();
    console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageTitle}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try {
      await page.waitForSelector('h2', { timeout: 5000 });
      const userName = await page.$eval('h2', (el) => el.textContent);
      console.log(`   –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userName}`);
    } catch (error) {
      console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

    console.log('3Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ë–∞–ª–ª—ã –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"...');
    try {
      // –ò—â–µ–º –∏ –∫–ª–∏–∫–∞–µ–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –±–∞–ª–ª–æ–≤
      await page.waitForSelector('button:has-text("–ë–∞–ª–ª—ã –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")', {
        timeout: 5000,
      });
      await page.click('button:has-text("–ë–∞–ª–ª—ã –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")');
      await page.waitForTimeout(1000);
      console.log('   ‚úÖ –í–∫–ª–∞–¥–∫–∞ "–ë–∞–ª–ª—ã –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏" –æ—Ç–∫—Ä—ã—Ç–∞');
    } catch (error) {
      console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∫–ª–∞–¥–∫—É "–ë–∞–ª–ª—ã –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"');
      // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
      try {
        const tabs = await page.$$('button[class*="tabButton"]');
        for (let tab of tabs) {
          const text = await tab.evaluate((el) => el.textContent);
          if (text.includes('–ë–∞–ª–ª—ã') || text.includes('—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏')) {
            await tab.click();
            console.log('   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏ –Ω–∞–∂–∞—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –±–∞–ª–ª–æ–≤');
            break;
          }
        }
      } catch (altError) {
        console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∫–ª–∞–¥–∫—É –±–∞–ª–ª–æ–≤');
      }
    }

    console.log('4Ô∏è‚É£ –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–ª—ã"...');
    try {
      await page.waitForSelector('button:has-text("–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–ª—ã")', {
        timeout: 5000,
      });
      console.log('   ‚úÖ –ö–Ω–æ–ø–∫–∞ "–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–ª—ã" –Ω–∞–π–¥–µ–Ω–∞');

      console.log('5Ô∏è‚É£ –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–ª—ã"...');
      await page.click('button:has-text("–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–ª—ã")');
      await page.waitForTimeout(1000);

      console.log('6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã–ª–æ—Å—å...');
      await page.waitForSelector('[class*="modal"]', { timeout: 5000 });
      console.log('   ‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ');

      console.log('7Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤...');

      // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∞–ª–ª–æ–≤
      await page.fill('input[name="amount"]', '50');
      console.log('   ‚úÖ –í–≤–µ–¥–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤: 50');

      // –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
      await page.selectOption('select[name="type"]', 'bonus');
      console.log('   ‚úÖ –í—ã–±—Ä–∞–Ω —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏: bonus');

      // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
      await page.fill(
        'textarea[name="description"]',
        '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä'
      );
      console.log('   ‚úÖ –í–≤–µ–¥–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏');

      console.log('8Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É...');
      await page.click('button[type="submit"]');

      // –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
      await page.waitForTimeout(3000);

      console.log('9Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫—Ä—ã–ª–æ—Å—å –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      const modalExists = await page.$('[class*="modal"]');
      if (!modalExists) {
        console.log('   ‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–ª–æ—Å—å –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏');
      } else {
        console.log('   ‚ö†Ô∏è –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Å–µ –µ—â–µ –æ—Ç–∫—Ä—ã—Ç–æ');
      }
    } catch (error) {
      console.log(
        '   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–ª—ã":',
        error.message
      );

      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
      try {
        const buttons = await page.$$('button');
        for (let button of buttons) {
          const text = await button.evaluate((el) => el.textContent);
          if (text.includes('–ò–∑–º–µ–Ω–∏—Ç—å') && text.includes('–±–∞–ª–ª—ã')) {
            console.log(
              '   ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º'
            );
            await button.click();
            break;
          }
        }
      } catch (altError) {
        console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–ª–æ–≤');
      }
    }

    console.log('üîü –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–ª–ª–æ–≤...');
    try {
      // –ò—â–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –±–∞–ª–ª–æ–≤
      const pointsElements = await page.$$(
        '[class*="pointsValue"], [class*="infoValue"]'
      );
      for (let element of pointsElements) {
        const text = await element.evaluate((el) => el.textContent);
        if (text.match(/\d+/)) {
          console.log(`   üí∞ –ù–∞–π–¥–µ–Ω—ã –±–∞–ª–ª—ã: ${text}`);
        }
      }
    } catch (error) {
      console.log('   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤');
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testPointsFunctionality().catch(console.error);
