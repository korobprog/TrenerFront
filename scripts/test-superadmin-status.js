const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkSuperadminStatus() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤...\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è korobprog@gmail.com
    console.log('üìß –ü—Ä–æ–≤–µ—Ä–∫–∞ korobprog@gmail.com:');
    const korobprog = await prisma.user.findUnique({
      where: { email: 'korobprog@gmail.com' },
      select: {
        id: true,
        email: true,
        role: true,
        name: true,
        createdAt: true,
        updatedAt: true,
      },
    });

    if (korobprog) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:`);
      console.log(`   ID: ${korobprog.id}`);
      console.log(`   Email: ${korobprog.email}`);
      console.log(`   –ò–º—è: ${korobprog.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      console.log(`   –†–æ–ª—å: ${korobprog.role}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${korobprog.createdAt}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${korobprog.updatedAt}`);

      if (korobprog.role === 'superadmin') {
        console.log('‚úÖ –†–æ–ª—å superadmin –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞');
      } else {
        console.log(`‚ùå –†–æ–ª—å –ù–ï superadmin (—Ç–µ–∫—É—â–∞—è: ${korobprog.role})`);
      }
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å korobprog@gmail.com –ù–ï –ù–ê–ô–î–ï–ù');
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è makstreid@yandex.ru
    console.log('üìß –ü—Ä–æ–≤–µ—Ä–∫–∞ makstreid@yandex.ru:');
    const makstreid = await prisma.user.findUnique({
      where: { email: 'makstreid@yandex.ru' },
      select: {
        id: true,
        email: true,
        role: true,
        name: true,
        createdAt: true,
        updatedAt: true,
      },
    });

    if (makstreid) {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:`);
      console.log(`   ID: ${makstreid.id}`);
      console.log(`   Email: ${makstreid.email}`);
      console.log(`   –ò–º—è: ${makstreid.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
      console.log(`   –†–æ–ª—å: ${makstreid.role}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${makstreid.createdAt}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${makstreid.updatedAt}`);

      if (makstreid.role === 'superadmin') {
        console.log('‚úÖ –†–æ–ª—å superadmin –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞');
      } else {
        console.log(`‚ùå –†–æ–ª—å –ù–ï superadmin (—Ç–µ–∫—É—â–∞—è: ${makstreid.role})`);
      }
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å makstreid@yandex.ru –ù–ï –ù–ê–ô–î–ï–ù');
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ ID
    console.log('üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º ID:');

    const korobprogById = await prisma.user.findUnique({
      where: { id: 'cmb9k4mtb0000mkc4b5uwfgtz' },
      select: {
        id: true,
        email: true,
        role: true,
        name: true,
      },
    });

    if (korobprogById) {
      console.log(
        `üìß ID cmb9k4mtb0000mkc4b5uwfgtz –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç: ${korobprogById.email}`
      );
      console.log(`   –†–æ–ª—å: ${korobprogById.role}`);
    } else {
      console.log('‚ùå ID cmb9k4mtb0000mkc4b5uwfgtz –ù–ï –ù–ê–ô–î–ï–ù');
    }

    const makstreidById = await prisma.user.findUnique({
      where: { id: 'cmbbcczhj000emkxw3fub8ld3' },
      select: {
        id: true,
        email: true,
        role: true,
        name: true,
      },
    });

    if (makstreidById) {
      console.log(
        `üìß ID cmbbcczhj000emkxw3fub8ld3 –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç: ${makstreidById.email}`
      );
      console.log(`   –†–æ–ª—å: ${makstreidById.role}`);
    } else {
      console.log('‚ùå ID cmbbcczhj000emkxw3fub8ld3 –ù–ï –ù–ê–ô–î–ï–ù');
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    console.log('üëë –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é superadmin:');
    const allSuperadmins = await prisma.user.findMany({
      where: { role: 'superadmin' },
      select: {
        id: true,
        email: true,
        name: true,
        createdAt: true,
      },
    });

    if (allSuperadmins.length > 0) {
      allSuperadmins.forEach((admin, index) => {
        console.log(`${index + 1}. ${admin.email} (ID: ${admin.id})`);
        console.log(`   –ò–º—è: ${admin.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log(`   –°–æ–∑–¥–∞–Ω: ${admin.createdAt}`);
        console.log('');
      });
    } else {
      console.log('‚ùå –ù–ï–¢ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é superadmin');
    }

    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
    console.log('='.repeat(30));

    const korobprogStatus =
      korobprog?.role === 'superadmin' ? '‚úÖ SUPERADMIN' : '‚ùå –ù–ï SUPERADMIN';
    const makstreidStatus =
      makstreid?.role === 'superadmin' ? '‚úÖ SUPERADMIN' : '‚ùå –ù–ï SUPERADMIN';

    console.log(`korobprog@gmail.com: ${korobprogStatus}`);
    console.log(`makstreid@yandex.ru: ${makstreidStatus}`);
    console.log(`–í—Å–µ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${allSuperadmins.length}`);

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    if (korobprog?.role !== 'superadmin') {
      console.log(
        '- –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–ª—å superadmin –¥–ª—è korobprog@gmail.com'
      );
    }
    if (makstreid?.role !== 'superadmin') {
      console.log(
        '- –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–æ–ª—å superadmin –¥–ª—è makstreid@yandex.ru'
      );
    }
    if (korobprog?.role === 'superadmin' && makstreid?.role === 'superadmin') {
      console.log(
        '- –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–æ–ª–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤'
      );
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkSuperadminStatus();
