/**
 * –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ê –ö –ö–ê–ë–ò–ù–ï–¢–£ –°–£–ü–ï–† –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * 1. API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
 * 3. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å middleware
 * 4. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */

const fetch = require('node-fetch');
const BASE_URL = 'http://localhost:3000';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
async function makeRequest(url, options = {}) {
  try {
    const response = await fetch(url, {
      headers: {
        'Content-Type': 'application/json',
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36',
        ...options.headers,
      },
      ...options,
    });

    let data;
    try {
      data = await response.json();
    } catch (e) {
      data = await response.text();
    }

    return {
      status: response.status,
      ok: response.ok,
      data,
      headers: Object.fromEntries(response.headers.entries()),
    };
  } catch (error) {
    return {
      status: 0,
      ok: false,
      error: error.message,
    };
  }
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
async function testUnauthorizedAccess() {
  console.log('üö´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ê –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò');
  console.log('=' * 50);

  const endpoints = [
    '/api/admin/statistics',
    '/api/admin/users',
    '/api/admin/logs',
    '/api/admin/interviews',
  ];

  const results = [];

  for (const endpoint of endpoints) {
    console.log(`\nüì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ${endpoint}`);

    const result = await makeRequest(`${BASE_URL}${endpoint}`);
    console.log(`   –°—Ç–∞—Ç—É—Å: ${result.status}`);

    if (result.status === 401) {
      console.log(`   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ: –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è`);
      results.push({
        endpoint,
        status: 'PASS',
        reason: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é',
      });
    } else if (result.status === 403) {
      console.log(`   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤`);
      results.push({
        endpoint,
        status: 'PASS',
        reason: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞',
      });
    } else if (result.status === 404) {
      console.log(`   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞: –≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      results.push({ endpoint, status: 'FAIL', reason: '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
    } else {
      console.log(`   ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${result.status}`);
      console.log(`   –û—Ç–≤–µ—Ç:`, result.data);
      results.push({
        endpoint,
        status: 'UNEXPECTED',
        reason: `–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${result.status}`,
      });
    }
  }

  return results;
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ middleware
async function testMiddleware() {
  console.log('\nüõ°Ô∏è  –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï MIDDLEWARE');
  console.log('=' * 50);

  const testCases = [
    {
      name: '–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç',
      url: '/api/admin/nonexistent',
      expectedStatus: [404, 401, 403],
    },
    {
      name: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥ POST',
      url: '/api/admin/statistics',
      method: 'POST',
      expectedStatus: [405, 401, 403],
    },
    {
      name: '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥ PUT',
      url: '/api/admin/logs',
      method: 'PUT',
      expectedStatus: [405, 401, 403],
    },
  ];

  const results = [];

  for (const testCase of testCases) {
    console.log(`\nüß™ –¢–µ—Å—Ç: ${testCase.name}`);
    console.log(`   URL: ${testCase.url}`);

    const result = await makeRequest(`${BASE_URL}${testCase.url}`, {
      method: testCase.method || 'GET',
    });

    console.log(`   –°—Ç–∞—Ç—É—Å: ${result.status}`);

    if (testCase.expectedStatus.includes(result.status)) {
      console.log(`   ‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç`);
      results.push({
        ...testCase,
        status: 'PASS',
        actualStatus: result.status,
        reason: '–ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞',
      });
    } else {
      console.log(`   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å`);
      console.log(`   –û–∂–∏–¥–∞–ª—Å—è –æ–¥–∏–Ω –∏–∑: ${testCase.expectedStatus.join(', ')}`);
      results.push({
        ...testCase,
        status: 'FAIL',
        actualStatus: result.status,
        reason: `–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${result.status}`,
      });
    }
  }

  return results;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
async function checkSuperAdmins() {
  console.log('\nüë• –ü–†–û–í–ï–†–ö–ê –°–£–ü–ï–†-–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–í');
  console.log('=' * 50);

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ API –ø—Ä–æ—Ñ–∏–ª—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    const profileResult = await makeRequest(`${BASE_URL}/api/user/profile`);

    if (profileResult.ok && profileResult.data) {
      console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:');
      console.log(`   üìß Email: ${profileResult.data.email}`);
      console.log(`   üîë –†–æ–ª—å: ${profileResult.data.role}`);
      console.log(`   üÜî ID: ${profileResult.data.id}`);

      return {
        status: 'SUCCESS',
        user: profileResult.data,
        isSuperAdmin: profileResult.data.role === 'superadmin',
      };
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
      console.log(`   –°—Ç–∞—Ç—É—Å: ${profileResult.status}`);

      return {
        status: 'NO_SESSION',
        reason: '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏',
      };
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
    return {
      status: 'ERROR',
      reason: error.message,
    };
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
function generateReport(unauthorizedResults, middlewareResults, userCheck) {
  console.log('\nüìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
  console.log('=' * 60);

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  console.log('\nüîê –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï:');
  if (userCheck.status === 'SUCCESS') {
    console.log(`   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userCheck.user.email}`);
    console.log(`   üîë –†–æ–ª—å: ${userCheck.user.role}`);
    console.log(
      `   üéØ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${userCheck.isSuperAdmin ? '–î–ê' : '–ù–ï–¢'}`
    );
  } else {
    console.log(`   ‚ùå –°—Ç–∞—Ç—É—Å: ${userCheck.status}`);
    console.log(`   üìù –ü—Ä–∏—á–∏–Ω–∞: ${userCheck.reason}`);
  }

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  console.log('\nüö´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:');
  const unauthorizedPassed = unauthorizedResults.filter(
    (r) => r.status === 'PASS'
  ).length;
  console.log(
    `   ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${unauthorizedPassed}/${unauthorizedResults.length}`
  );

  if (unauthorizedPassed === unauthorizedResults.length) {
    console.log(`   üéØ –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é`);
  } else {
    console.log(`   ‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π`);
    unauthorizedResults
      .filter((r) => r.status !== 'PASS')
      .forEach((result) => {
        console.log(`      - ${result.endpoint}: ${result.reason}`);
      });
  }

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è middleware
  console.log('\nüõ°Ô∏è  –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï MIDDLEWARE:');
  const middlewarePassed = middlewareResults.filter(
    (r) => r.status === 'PASS'
  ).length;
  console.log(
    `   ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${middlewarePassed}/${middlewareResults.length}`
  );

  if (middlewarePassed === middlewareResults.length) {
    console.log(`   üéØ Middleware —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
  } else {
    console.log(`   ‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å middleware`);
    middlewareResults
      .filter((r) => r.status !== 'PASS')
      .forEach((result) => {
        console.log(`      - ${result.name}: ${result.reason}`);
      });
  }

  // –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('\nüéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
  const totalTests = unauthorizedResults.length + middlewareResults.length;
  const totalPassed = unauthorizedPassed + middlewarePassed;

  console.log(`   üìä –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: ${totalPassed}/${totalTests}`);
  console.log(
    `   üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${Math.round((totalPassed / totalTests) * 100)}%`
  );

  // –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
  console.log('\nüè• –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:');

  const hasSuper = userCheck.status === 'SUCCESS' && userCheck.isSuperAdmin;
  const authWorks = unauthorizedPassed === unauthorizedResults.length;
  const middlewareWorks = middlewarePassed === middlewareResults.length;

  if (hasSuper && authWorks && middlewareWorks) {
    console.log('   ‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï');
    console.log('   üéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('   üîë –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏–º–µ—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞');
    console.log('   üõ°Ô∏è  –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –æ–±–µ—Å–ø–µ—á–µ–Ω–∞');
  } else {
    console.log('   ‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢–°–Ø –í–ù–ò–ú–ê–ù–ò–ï');
    if (!hasSuper) console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∞–≤–∞–º–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    if (!authWorks) console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π');
    if (!middlewareWorks) console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å middleware');
  }

  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  if (userCheck.status === 'NO_SESSION') {
    console.log(
      '   üîê –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
    );
  }
  if (totalPassed === totalTests) {
    console.log(
      '   üöÄ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ'
    );
    console.log('   üì± –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏');
  } else {
    console.log('   üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã');
  }

  console.log('\n' + '=' * 60);
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runTests() {
  console.log('üîç –ó–ê–ü–£–°–ö –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò');
  console.log('–î–∞—Ç–∞: ' + new Date().toLocaleString('ru-RU'));
  console.log('=' * 60);

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userCheck = await checkSuperAdmins();

    // 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const unauthorizedResults = await testUnauthorizedAccess();

    // 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ middleware
    const middlewareResults = await testMiddleware();

    // 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    generateReport(unauthorizedResults, middlewareResults, userCheck);
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.error(`   üí• –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    console.error(`   üìç –°—Ç–µ–∫: ${error.stack}`);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
runTests()
  .then(() => {
    console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤:', error.message);
    process.exit(1);
  });
