#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö TrenerFront
# –ê–≤—Ç–æ—Ä: –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
# –î–∞—Ç–∞: $(date)

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö TrenerFront..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose
if ! command -v docker-compose &> /dev/null; then
    log_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    log_error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js –∏ npm
if ! command -v node &> /dev/null; then
    log_error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

if ! command -v npm &> /dev/null; then
    log_error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm —Å–Ω–∞—á–∞–ª–∞."
    exit 1
fi

log_info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down || true

log_info "–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ volumes (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
docker volume rm trenerfront_postgres_data 2>/dev/null || true
docker volume rm trenerfront_pgadmin_data 2>/dev/null || true

log_info "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
mkdir -p backups

log_info "–ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
docker-compose up -d postgres

log_info "–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å PostgreSQL
max_attempts=30
attempt=1
while [ $attempt -le $max_attempts ]; do
    if docker-compose exec -T postgres pg_isready -U trenerfront_user -d interview_prep &> /dev/null; then
        log_success "PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        break
    fi
    
    if [ $attempt -eq $max_attempts ]; then
        log_error "PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
        exit 1
    fi
    
    log_info "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: –æ–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
    sleep 2
    ((attempt++))
done

log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Node.js..."
npm install

log_info "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma –∫–ª–∏–µ–Ω—Ç..."
npx prisma generate

log_info "–ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ Prisma..."
npx prisma migrate deploy

log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
if npx prisma db pull &> /dev/null; then
    log_success "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!"
else
    log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    exit 1
fi

log_info "–ó–∞–ø—É—Å–∫–∞–µ–º PgAdmin..."
docker-compose up -d pgadmin

log_success "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–µ:"
echo "   PostgreSQL: localhost:5432"
echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: trenerfront_user"
echo "   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: interview_prep"
echo "   PgAdmin: http://localhost:8080"
echo "   Email PgAdmin: admin@trenerfront.local"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo "   –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: ./scripts/backup-database.sh"
echo ""
log_warning "–ü–∞—Ä–æ–ª–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ .env —Ñ–∞–π–ª–µ. –•—Ä–∞–Ω–∏—Ç–µ –∏—Ö –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!"