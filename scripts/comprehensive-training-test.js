const fetch = require('node-fetch');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const BASE_URL = 'http://localhost:3000';
const TEST_SESSION_TOKEN =
  'eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..ClkIU_hh9xrwKUbi.oFZ5B1DQ62DsXxVZyGROBXsd2B8dCpUNYs896689ZSPlVAUtv1dAj9YAxCAv_QVnUHhaSYmr5ZW8c7eKKol-_J7kTXeeZrpYhKCwubRTSP6Qx6oXwqsAEognIw3ChTayNIsvMPs74Vr3vmffmBgc_2rB_9I3lxKsPkCAurTyeezjXptyLQL_92DmVMyQSTzRd-mhodf812YRrH-_uD8d_1tu8Wi4VsJDuL0jo2NO4xQk-qMJaXcxv6jebQU4GNSJQCrweVaCy9uuSzC17yQgc7usTZiBn69zG4BYI3O7ETPx_Z4XI0LSBd4m6XUrhOTQbVrSj_BvPydTt28Nc9Jzmv0c7eNc63FoaKoNFIv2aOBk-4HcLKpMFTAVqi9w31p6LNjuQyFUm2_H7_vPLiHfosdNRbGjZwD4tGjv99xo_fHjZcEIgTtDhwybgzRwbAFx7W14rY4F0swLaipxT_0DJoLM6tYbtRPI1767p2QxcLZ8K2D4KyXlRLyiyQTmjFOa7LNyhbzXfdDFt3O8Pow5Ocs.kNYjEQ5XwRdz0Q_jR3BfeQ';

// –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
const getHeaders = () => ({
  'Content-Type': 'application/json',
  Cookie: `next-auth.session-token=${TEST_SESSION_TOKEN}`,
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
async function makeRequest(url, options = {}) {
  try {
    const response = await fetch(url, {
      headers: getHeaders(),
      ...options,
    });

    const data = await response.json();
    return {
      status: response.status,
      ok: response.ok,
      data,
    };
  } catch (error) {
    return {
      status: 0,
      ok: false,
      error: error.message,
    };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function logResult(testName, result, expected = null) {
  const status = result.ok ? '‚úÖ' : '‚ùå';
  console.log(`${status} ${testName}`);

  if (!result.ok) {
    console.log(`   –°—Ç–∞—Ç—É—Å: ${result.status}`);
    console.log(
      `   –û—à–∏–±–∫–∞: ${
        result.error || result.data?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      }`
    );
  } else if (expected) {
    console.log(`   ${expected}`);
  }

  console.log('');
}

async function testTrainingAPI() {
  console.log('üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –¢–†–ï–ù–ò–†–û–í–û–ö\n');
  console.log('=' * 60);

  // 1. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/questions
  console.log('\nüìã 1. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/questions\n');

  // 1.1 –ë–∞–∑–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  console.log('1.1 –ë–∞–∑–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤:');
  const basicQuestions = await makeRequest(
    `${BASE_URL}/api/training/questions`
  );
  logResult(
    '–ë–∞–∑–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤',
    basicQuestions,
    basicQuestions.ok
      ? `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${basicQuestions.data.questions?.length || 0} –≤–æ–ø—Ä–æ—Å–æ–≤`
      : null
  );

  // 1.2 –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
  console.log('1.2 –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É:');
  const searchQuestions = await makeRequest(
    `${BASE_URL}/api/training/questions?search=—á—Ç–æ`
  );
  logResult(
    '–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É "—á—Ç–æ"',
    searchQuestions,
    searchQuestions.ok
      ? `–ù–∞–π–¥–µ–Ω–æ ${searchQuestions.data.questions?.length || 0} –≤–æ–ø—Ä–æ—Å–æ–≤`
      : null
  );

  // 1.3 –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–µ–º–∞–º
  console.log('1.3 –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–µ–º–∞–º:');
  const topicQuestions = await makeRequest(
    `${BASE_URL}/api/training/questions?topic=JavaScript`
  );
  logResult(
    '–§–∏–ª—å—Ç—Ä –ø–æ —Ç–µ–º–µ JavaScript',
    topicQuestions,
    topicQuestions.ok
      ? `–ù–∞–π–¥–µ–Ω–æ ${
          topicQuestions.data.questions?.length || 0
        } –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ JavaScript`
      : null
  );

  // 1.4 –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  console.log('1.4 –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:');
  const difficultyQuestions = await makeRequest(
    `${BASE_URL}/api/training/questions?difficulty=medium`
  );
  logResult(
    '–§–∏–ª—å—Ç—Ä –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ medium',
    difficultyQuestions,
    difficultyQuestions.ok
      ? `–ù–∞–π–¥–µ–Ω–æ ${
          difficultyQuestions.data.questions?.length || 0
        } –≤–æ–ø—Ä–æ—Å–æ–≤ —Å—Ä–µ–¥–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏`
      : null
  );

  // 1.5 –ü–∞–≥–∏–Ω–∞—Ü–∏—è
  console.log('1.5 –ü–∞–≥–∏–Ω–∞—Ü–∏—è:');
  const paginatedQuestions = await makeRequest(
    `${BASE_URL}/api/training/questions?page=1&limit=5`
  );
  logResult(
    '–ü–∞–≥–∏–Ω–∞—Ü–∏—è (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ 1, –ª–∏–º–∏—Ç 5)',
    paginatedQuestions,
    paginatedQuestions.ok
      ? `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${
          paginatedQuestions.data.questions?.length || 0
        } –≤–æ–ø—Ä–æ—Å–æ–≤, –≤—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${
          paginatedQuestions.data.pagination?.totalPages || 0
        }`
      : null
  );

  // 1.6 –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
  console.log('1.6 –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:');
  const combinedQuestions = await makeRequest(
    `${BASE_URL}/api/training/questions?topic=JavaScript&difficulty=medium&search=—á—Ç–æ`
  );
  logResult(
    '–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã',
    combinedQuestions,
    combinedQuestions.ok
      ? `–ù–∞–π–¥–µ–Ω–æ ${combinedQuestions.data.questions?.length || 0} –≤–æ–ø—Ä–æ—Å–æ–≤`
      : null
  );

  // 2. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/stats
  console.log('\nüìä 2. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/stats\n');

  const stats = await makeRequest(`${BASE_URL}/api/training/stats`);
  logResult(
    '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',
    stats,
    stats.ok
      ? `–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${
          stats.data.overall?.answeredQuestions || 0
        } –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –∏–∑ ${stats.data.overall?.totalQuestions || 0} –≤–æ–ø—Ä–æ—Å–æ–≤`
      : null
  );

  if (stats.ok && stats.data.byTopic) {
    console.log('   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–º–∞–º:');
    Object.entries(stats.data.byTopic).forEach(([topic, data]) => {
      console.log(
        `     - ${topic}: ${data.answered}/${data.total} (${data.accuracy}% —Ç–æ—á–Ω–æ—Å—Ç—å)`
      );
    });
    console.log('');
  }

  // 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/topics
  console.log('\nüè∑Ô∏è 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/topics\n');

  const topics = await makeRequest(`${BASE_URL}/api/training/topics`);
  logResult(
    '–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–º',
    topics,
    topics.ok ? `–ù–∞–π–¥–µ–Ω–æ ${topics.data.topics?.length || 0} —Ç–µ–º` : null
  );

  if (topics.ok && topics.data.topics) {
    console.log('   –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã:');
    topics.data.topics.forEach((topic) => {
      console.log(
        `     - ${topic.topic}: ${topic.answeredQuestions}/${topic.totalQuestions} (${topic.accuracy}% —Ç–æ—á–Ω–æ—Å—Ç—å, ${topic.completion}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ)`
      );
    });
    console.log('');
  }

  // 4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/favorites
  console.log('\n‚≠ê 4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï /api/training/favorites\n');

  // 4.1 –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
  console.log('4.1 –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö:');
  const favorites = await makeRequest(`${BASE_URL}/api/training/favorites`);
  logResult(
    '–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤',
    favorites,
    favorites.ok
      ? `–ù–∞–π–¥–µ–Ω–æ ${favorites.data.questions?.length || 0} –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤`
      : null
  );

  // 4.2 –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã)
  if (basicQuestions.ok && basicQuestions.data.questions?.length > 0) {
    const firstQuestionId = basicQuestions.data.questions[0].id;

    console.log('4.2 –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:');
    const addFavorite = await makeRequest(
      `${BASE_URL}/api/training/favorites`,
      {
        method: 'POST',
        body: JSON.stringify({
          questionId: firstQuestionId,
          action: 'add',
        }),
      }
    );
    logResult(`–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ ${firstQuestionId} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ`, addFavorite);

    // 4.3 –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    console.log('4.3 –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:');
    const removeFavorite = await makeRequest(
      `${BASE_URL}/api/training/favorites`,
      {
        method: 'POST',
        body: JSON.stringify({
          questionId: firstQuestionId,
          action: 'remove',
        }),
      }
    );
    logResult(
      `–£–¥–∞–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ ${firstQuestionId} –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ`,
      removeFavorite
    );
  }

  // 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–®–ò–ë–û–ß–ù–´–• –ó–ê–ü–†–û–°–û–í
  console.log('\nüö´ 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–®–ò–ë–û–ß–ù–´–• –ó–ê–ü–†–û–°–û–í\n');

  // 5.1 –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
  console.log('5.1 –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å:');
  const unauthorizedRequest = await fetch(`${BASE_URL}/api/training/questions`);
  const unauthorizedResult = {
    status: unauthorizedRequest.status,
    ok: unauthorizedRequest.status === 401,
    data: await unauthorizedRequest.json(),
  };
  logResult('–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å (–æ–∂–∏–¥–∞–µ—Ç—Å—è 401)', unauthorizedResult);

  // 5.2 –ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Ç–æ–¥
  console.log('5.2 –ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Ç–æ–¥:');
  const wrongMethod = await makeRequest(`${BASE_URL}/api/training/questions`, {
    method: 'DELETE',
  });
  logResult('–ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Ç–æ–¥ DELETE (–æ–∂–∏–¥–∞–µ—Ç—Å—è 405)', {
    ...wrongMethod,
    ok: wrongMethod.status === 405,
  });

  // 5.3 –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  console.log('5.3 –ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:');
  const invalidFavorite = await makeRequest(
    `${BASE_URL}/api/training/favorites`,
    {
      method: 'POST',
      body: JSON.stringify({
        questionId: 'invalid',
        action: 'invalid',
      }),
    }
  );
  logResult('–ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–æ–∂–∏–¥–∞–µ—Ç—Å—è 400)', {
    ...invalidFavorite,
    ok: invalidFavorite.status === 400,
  });

  // 6. –†–ï–ó–Æ–ú–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
  console.log('\nüìã 6. –†–ï–ó–Æ–ú–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø\n');
  console.log('=' * 60);
  console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
  console.log('   - –ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏');
  console.log('   - –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É');
  console.log('   - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–µ–º–∞–º –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏');
  console.log('   - –ü–∞–≥–∏–Ω–∞—Ü–∏—è');
  console.log('   - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
  console.log('   - –†–∞–±–æ—Ç–∞ —Å —Ç–µ–º–∞–º–∏');
  console.log('   - CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º–∏');
  console.log('   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤');
  console.log('');
  console.log('üéØ –í—Å–µ API endpoints —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  console.log('üéØ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!');
  console.log('üéØ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
  console.log('üéØ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç!');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testTrainingAPI().catch(console.error);
