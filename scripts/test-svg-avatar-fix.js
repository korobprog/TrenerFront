/**
 * –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SVG —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ AuthButton
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å SVG –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ –≤ –∞–≤–∞—Ç–∞—Ä–∞—Ö
 */

const testSVGAvatarFix = () => {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SVG —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞...\n');

  // –°–∏–º—É–ª—è—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ getDefaultAvatar –∏–∑ AuthButton
  const getDefaultAvatar = (name) => {
    if (!name) {
      return '/default-avatar.svg';
    }

    const initials = name
      .split(' ')
      .map((word) => word.charAt(0))
      .join('')
      .toUpperCase()
      .slice(0, 2);

    // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π SVG —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
    const svg = `
      <svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="avatarGradient${initials}" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" style="stop-color:#667eea;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#764ba2;stop-opacity:1" />
          </linearGradient>
        </defs>
        <circle cx="20" cy="20" r="20" fill="url(#avatarGradient${initials})"/>
        <text x="20" y="26" text-anchor="middle" fill="white" font-family="Arial, sans-serif" font-size="14" font-weight="600">${initials}</text>
      </svg>
    `;

    return `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`;
  };

  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SVG —Å –∏–Ω–∏—Ü–∏–∞–ª–∞–º–∏
  console.log('üìã –¢–µ—Å—Ç 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SVG –∞–≤–∞—Ç–∞—Ä–∞ —Å –∏–Ω–∏—Ü–∏–∞–ª–∞–º–∏');
  try {
    const testName = '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤';
    const avatar = getDefaultAvatar(testName);

    console.log(`   –ò–º—è: ${testName}`);
    console.log(`   –û–∂–∏–¥–∞–µ–º—ã–µ –∏–Ω–∏—Ü–∏–∞–ª—ã: –ò–ü`);

    // –î–µ–∫–æ–¥–∏—Ä—É–µ–º SVG –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const decodedSVG = decodeURIComponent(
      avatar.replace('data:image/svg+xml;charset=utf-8,', '')
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const hasDefsSection = decodedSVG.includes('<defs>');
    const hasLinearGradient = decodedSVG.includes('<linearGradient');
    const hasGradientId = decodedSVG.includes('id="avatarGradient–ò–ü"');
    const hasUrlReference = decodedSVG.includes(
      'fill="url(#avatarGradient–ò–ü)"'
    );
    const hasStopElements = decodedSVG.includes('<stop');
    const hasInitials = decodedSVG.includes('–ò–ü');

    console.log(`   ‚úì –°–µ–∫—Ü–∏—è <defs>: ${hasDefsSection ? '‚úÖ' : '‚ùå'}`);
    console.log(
      `   ‚úì –≠–ª–µ–º–µ–Ω—Ç <linearGradient>: ${hasLinearGradient ? '‚úÖ' : '‚ùå'}`
    );
    console.log(`   ‚úì –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞: ${hasGradientId ? '‚úÖ' : '‚ùå'}`);
    console.log(
      `   ‚úì –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ url(): ${hasUrlReference ? '‚úÖ' : '‚ùå'}`
    );
    console.log(`   ‚úì –≠–ª–µ–º–µ–Ω—Ç—ã <stop>: ${hasStopElements ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚úì –ò–Ω–∏—Ü–∏–∞–ª—ã –≤ —Ç–µ–∫—Å—Ç–µ: ${hasInitials ? '‚úÖ' : '‚ùå'}`);

    if (
      hasDefsSection &&
      hasLinearGradient &&
      hasGradientId &&
      hasUrlReference &&
      hasStopElements &&
      hasInitials
    ) {
      console.log('   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: SVG —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω\n');
    } else {
      console.log(
        '   ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å SVG —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º\n'
      );
      console.log('   –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SVG:');
      console.log(decodedSVG);
    }
  } catch (error) {
    console.log(
      `   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SVG: ${error.message}\n`
    );
  }

  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—É—Å—Ç–æ–≥–æ –∏–º–µ–Ω–∏
  console.log('üìã –¢–µ—Å—Ç 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É—Å—Ç–æ–≥–æ –∏–º–µ–Ω–∏');
  try {
    const avatar = getDefaultAvatar('');
    console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –∏–º–µ–Ω–∏: ${avatar}`);

    if (avatar === '/default-avatar.svg') {
      console.log('   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –ø—É—Å—Ç–æ–µ –∏–º—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n');
    } else {
      console.log(
        '   ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –∏–º–µ–Ω–∏\n'
      );
    }
  } catch (error) {
    console.log(
      `   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—É—Å—Ç–æ–≥–æ –∏–º–µ–Ω–∏: ${error.message}\n`
    );
  }

  // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤
  console.log('üìã –¢–µ—Å—Ç 3: –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤');
  try {
    const avatar1 = getDefaultAvatar('–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞');
    const avatar2 = getDefaultAvatar('–ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤');

    const svg1 = decodeURIComponent(
      avatar1.replace('data:image/svg+xml;charset=utf-8,', '')
    );
    const svg2 = decodeURIComponent(
      avatar2.replace('data:image/svg+xml;charset=utf-8,', '')
    );

    const id1Match = svg1.match(/id="avatarGradient([^"]+)"/);
    const id2Match = svg2.match(/id="avatarGradient([^"]+)"/);

    if (id1Match && id2Match) {
      const id1 = id1Match[1];
      const id2 = id2Match[1];

      console.log(`   ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ 1: avatarGradient${id1}`);
      console.log(`   ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ 2: avatarGradient${id2}`);

      if (id1 !== id2) {
        console.log('   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã\n');
      } else {
        console.log('   ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã\n');
      }
    } else {
      console.log('   ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤\n');
    }
  } catch (error) {
    console.log(
      `   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ ID: ${error.message}\n`
    );
  }

  // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ SVG
  console.log('üìã –¢–µ—Å—Ç 4: –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å SVG —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');
  try {
    const avatar = getDefaultAvatar('–¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤');
    const svg = decodeURIComponent(
      avatar.replace('data:image/svg+xml;charset=utf-8,', '')
    );

    // –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã SVG
    const hasOpeningSvg = svg.includes('<svg');
    const hasClosingSvg = svg.includes('</svg>');
    const hasViewBox = svg.includes('viewBox="0 0 40 40"');
    const hasNamespace = svg.includes('xmlns="http://www.w3.org/2000/svg"');
    const hasCircle = svg.includes('<circle');
    const hasText = svg.includes('<text');

    console.log(`   ‚úì –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ <svg>: ${hasOpeningSvg ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚úì –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ </svg>: ${hasClosingSvg ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚úì –ê—Ç—Ä–∏–±—É—Ç viewBox: ${hasViewBox ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚úì Namespace SVG: ${hasNamespace ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚úì –≠–ª–µ–º–µ–Ω—Ç circle: ${hasCircle ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ‚úì –≠–ª–µ–º–µ–Ω—Ç text: ${hasText ? '‚úÖ' : '‚ùå'}`);

    if (
      hasOpeningSvg &&
      hasClosingSvg &&
      hasViewBox &&
      hasNamespace &&
      hasCircle &&
      hasText
    ) {
      console.log('   ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: SVG —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∞–ª–∏–¥–Ω–∞\n');
    } else {
      console.log('   ‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π SVG\n');
    }
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ SVG: ${error.message}\n`);
  }

  console.log('üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SVG —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  console.log('\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
  console.log('   - CSS –≥—Ä–∞–¥–∏–µ–Ω—Ç –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π SVG –≥—Ä–∞–¥–∏–µ–Ω—Ç');
  console.log('   - –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–µ–∫—Ü–∏—è <defs> —Å <linearGradient>');
  console.log('   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å url(#gradientId)');
  console.log('   - ID –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞');
  console.log('   - SVG —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∞–ª–∏–¥–Ω–∞');
  console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SVG —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
};

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (typeof window === 'undefined') {
  // Node.js –æ–∫—Ä—É–∂–µ–Ω–∏–µ
  testSVGAvatarFix();
} else {
  // –ë—Ä–∞—É–∑–µ—Ä–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
  testSVGAvatarFix();
}

module.exports = { testSVGAvatarFix };
