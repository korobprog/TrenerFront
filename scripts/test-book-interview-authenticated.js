/**
 * –¢–µ—Å—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ HTTP 500 –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ mock-–∏–Ω—Ç–µ—Ä–≤—å—é —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
 */

const testBookInterviewAuthenticated = async () => {
  console.log(
    'üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π...\n'
  );

  // ID –∏–Ω—Ç–µ—Ä–≤—å—é –∏–∑ –æ—à–∏–±–∫–∏
  const interviewId = 'cmbbur3rh0009mkcyhjmnbh5p';
  const url = `http://localhost:3000/api/mock-interviews/${interviewId}/book`;

  // Cookie –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞ (–Ω—É–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑ DevTools)
  const authCookie =
    'next-auth.csrf-token=7c040149f8f8c461298f65bcdda923027ec6f4a5eacf7f4208e646bb78b7400e%7C4f6fcff4d02c3f1ecd8d61ceeb691ef076eab85aa4a8fffbe96e962472265c46; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2F; next-auth.session-token=3621ebb0-8151-4e84-9b65-7e6ec958852a';

  console.log(`üìç URL: ${url}`);
  console.log(`üìç –ú–µ—Ç–æ–¥: POST`);
  console.log(`üìç ID –∏–Ω—Ç–µ—Ä–≤—å—é: ${interviewId}`);
  console.log(`üìç Cookie: ${authCookie.substring(0, 100)}...`);
  console.log('');

  try {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π...');

    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Cookie: authCookie,
        'User-Agent':
          'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
        Accept: 'application/json',
        Referer: 'http://localhost:3000/mock-interviews',
      },
    });

    console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log(`üìä –°—Ç–∞—Ç—É—Å —Ç–µ–∫—Å—Ç: ${response.statusText}`);

    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    console.log('\nüìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:');
    for (const [key, value] of response.headers.entries()) {
      console.log(`  ${key}: ${value}`);
    }

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
    let responseData;
    try {
      responseData = await response.json();
      console.log('\nüìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (JSON):');
      console.log(JSON.stringify(responseData, null, 2));
    } catch (jsonError) {
      console.log('\n‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞:', jsonError.message);

      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞–∫ —Ç–µ–∫—Å—Ç
      try {
        const textResponse = await response.text();
        console.log('\nüìÑ –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (—Ç–µ–∫—Å—Ç):');
        console.log(textResponse);
      } catch (textError) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', textError.message);
      }
    }

    if (!response.ok) {
      console.log(`\n‚ùå HTTP –æ—à–∏–±–∫–∞: ${response.status}`);
      if (responseData) {
        console.log(
          'üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:',
          responseData.message || responseData.error
        );
      }

      // –ï—Å–ª–∏ —ç—Ç–æ 500 –æ—à–∏–±–∫–∞, —Ç–æ –º—ã –Ω–∞—à–ª–∏ –ø—Ä–æ–±–ª–µ–º—É!
      if (response.status === 500) {
        console.log('\nüéØ –ù–ê–ô–î–ï–ù–ê HTTP 500 –û–®–ò–ë–ö–ê!');
        console.log(
          'üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è stack trace'
        );
      }
    } else {
      console.log('\n‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    }
  } catch (error) {
    console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞:');
    console.error('–¢–∏–ø –æ—à–∏–±–∫–∏:', error.constructor.name);
    console.error('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    console.error('Stack trace:', error.stack);
  }

  console.log('\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBookInterviewAuthenticated().catch(console.error);
