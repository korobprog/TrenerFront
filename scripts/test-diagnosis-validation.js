// –¢–µ—Å—Ç –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –∏ –∞–≤–∞—Ç–∞—Ä–∞–º–∏

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú - –í–ê–õ–ò–î–ê–¶–ò–Ø');
console.log('=====================================');

// 1. –ü–†–û–í–ï–†–ö–ê API ENDPOINT –î–õ–Ø –ó–ê–ü–ò–°–ò –ù–ê –°–û–ë–ï–°–ï–î–û–í–ê–ù–ò–Ø
console.log('\n1. –ü–†–û–í–ï–†–ö–ê API ENDPOINT /api/mock-interviews/[id]/book');
console.log('-------------------------------------------------------');

async function testBookingEndpoint() {
  try {
    const testId = 'test-interview-id';
    const response = await fetch(`/api/mock-interviews/${testId}/book`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê: Endpoint /book –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢');
    console.log(`–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
    console.log(`–û–∂–∏–¥–∞–µ–º—ã–π —Å—Ç–∞—Ç—É—Å: 404 (Not Found)`);

    if (response.status === 404) {
      console.log('‚úÖ –î–∏–∞–≥–Ω–æ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: API endpoint –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ endpoint:', error.message);
  }
}

// 2. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ë–õ–ï–ú –° SVG –ê–í–ê–¢–ê–†–ê–ú–ò
console.log('\n2. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ë–õ–ï–ú –° SVG –ê–í–ê–¢–ê–†–ê–ú–ò');
console.log('-----------------------------------');

function testSVGAvatarGeneration() {
  console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SVG –∞–≤–∞—Ç–∞—Ä–∞ –∏–∑ AuthButton...');

  // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –ª–æ–≥–∏–∫—É –∏–∑ AuthButton.js —Å—Ç—Ä–æ–∫–∞ 52
  const name = '–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  const initials = name
    .split(' ')
    .map((word) => word.charAt(0))
    .join('')
    .toUpperCase()
    .slice(0, 2);

  console.log(`–ò–Ω–∏—Ü–∏–∞–ª—ã: ${initials}`);

  // –ü–†–û–ë–õ–ï–ú–ù–´–ô SVG –∏–∑ AuthButton.js:52
  const problematicSVG = `
    <svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
      <circle cx="20" cy="20" r="20" fill="linear-gradient(135deg, #667eea 0%, #764ba2 100%)"/>
      <text x="20" y="26" text-anchor="middle" fill="white" font-family="Arial, sans-serif" font-size="14" font-weight="600">${initials}</text>
    </svg>
  `;

  console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π SVG –≥—Ä–∞–¥–∏–µ–Ω—Ç');
  console.log('–ü–†–û–ë–õ–ï–ú–ê: fill="linear-gradient(...)" - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å');
  console.log('–ü–†–ê–í–ò–õ–¨–ù–û: –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <defs> –∏ url(#gradientId)');

  // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π SVG
  const correctSVG = `
    <svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <linearGradient id="avatarGradient" x1="0%" y1="0%" x2="100%" y2="100%">
          <stop offset="0%" style="stop-color:#667eea;stop-opacity:1" />
          <stop offset="100%" style="stop-color:#764ba2;stop-opacity:1" />
        </linearGradient>
      </defs>
      <circle cx="20" cy="20" r="20" fill="url(#avatarGradient)"/>
      <text x="20" y="26" text-anchor="middle" fill="white" font-family="Arial, sans-serif" font-size="14" font-weight="600">${initials}</text>
    </svg>
  `;

  console.log('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô SVG –≥–æ—Ç–æ–≤');

  return {
    problematic: problematicSVG,
    correct: correctSVG,
    initials: initials,
  };
}

// 3. –ü–†–û–í–ï–†–ö–ê FALLBACK –ê–í–ê–¢–ê–†–ê
console.log('\n3. –ü–†–û–í–ï–†–ö–ê FALLBACK –ê–í–ê–¢–ê–†–ê');
console.log('-----------------------------');

async function testFallbackAvatar() {
  try {
    const response = await fetch('/default-avatar.svg');
    console.log(`–°—Ç–∞—Ç—É—Å fallback –∞–≤–∞—Ç–∞—Ä–∞: ${response.status}`);

    if (response.ok) {
      console.log('‚úÖ Fallback –∞–≤–∞—Ç–∞—Ä /default-avatar.svg —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.log('‚ùå Fallback –∞–≤–∞—Ç–∞—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ fallback –∞–≤–∞—Ç–∞—Ä–∞:', error.message);
  }
}

// 4. –ü–†–û–í–ï–†–ö–ê –í–ù–ï–®–ù–ò–• API –î–õ–Ø –ê–í–ê–¢–ê–†–û–í
console.log('\n4. –ü–†–û–í–ï–†–ö–ê –í–ù–ï–®–ù–ò–• API –î–õ–Ø –ê–í–ê–¢–ê–†–û–í');
console.log('------------------------------------');

async function testExternalAvatarAPI() {
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º DiceBear API –∏–∑ avatar.js:103
    const testUrl =
      'https://api.dicebear.com/7.x/initials/svg?seed=–¢–ü&backgroundColor=3b82f6&textColor=ffffff';
    const response = await fetch(testUrl);

    console.log(`DiceBear API —Å—Ç–∞—Ç—É—Å: ${response.status}`);

    if (response.ok) {
      console.log('‚úÖ DiceBear API –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      console.log(
        '‚ùå DiceBear API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–æ–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤'
      );
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ DiceBear API:', error.message);
    console.log(
      'üîç –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞: –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API'
    );
  }
}

// –ó–ê–ü–£–°–ö –í–°–ï–• –¢–ï–°–¢–û–í
async function runDiagnostics() {
  console.log('\nüöÄ –ó–ê–ü–£–°–ö –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–• –¢–ï–°–¢–û–í');
  console.log('=================================');

  // –¢–µ—Å—Ç 1: API endpoint
  await testBookingEndpoint();

  // –¢–µ—Å—Ç 2: SVG –∞–≤–∞—Ç–∞—Ä—ã
  const svgTest = testSVGAvatarGeneration();

  // –¢–µ—Å—Ç 3: Fallback –∞–≤–∞—Ç–∞—Ä
  await testFallbackAvatar();

  // –¢–µ—Å—Ç 4: –í–Ω–µ—à–Ω–∏–µ API
  await testExternalAvatarAPI();

  console.log('\nüìã –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó');
  console.log('==================');
  console.log(
    '1. ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç API endpoint /api/mock-interviews/[id]/book'
  );
  console.log(
    '2. ‚ùå –ü–†–û–ë–õ–ï–ú–ê SVG: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ –≤ AuthButton.js:52'
  );
  console.log('3. ‚úÖ Fallback –∞–≤–∞—Ç–∞—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  console.log('4. ‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–Ω–µ—à–Ω–∏–º–∏ API (DiceBear)');

  console.log('\nüéØ –ö–û–†–ù–ï–í–´–ï –ü–†–ò–ß–ò–ù–´:');
  console.log('1. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è');
  console.log(
    '2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π SVG —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∞–≤–∞—Ç–∞—Ä–æ–≤'
  );

  return {
    bookingEndpointMissing: true,
    svgSyntaxError: true,
    fallbackAvatarExists: true,
    externalAPIIssues: 'unknown',
  };
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
if (typeof window !== 'undefined') {
  window.runDiagnostics = runDiagnostics;
  window.testSVGAvatarGeneration = testSVGAvatarGeneration;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è Node.js
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    runDiagnostics,
    testSVGAvatarGeneration,
    testBookingEndpoint,
    testFallbackAvatar,
    testExternalAvatarAPI,
  };
}

console.log('\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ó–ê–ü–£–°–ö–ê:');
console.log('–í –±—Ä–∞—É–∑–µ—Ä–µ: window.runDiagnostics()');
console.log('–í Node.js: node test-diagnosis-validation.js');
