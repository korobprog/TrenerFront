/**
 * –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ middleware
 */

const fs = require('fs');
const path = require('path');

console.log(
  'üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ middleware superAdminAuth.js'
);
console.log('');

try {
  // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
  const filePath = path.join(
    __dirname,
    'lib',
    'middleware',
    'superAdminAuth.js'
  );
  const content = fs.readFileSync(filePath, 'utf8');

  console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ withPrisma –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  const hasWithPrismaImport = content.includes('import { withPrisma }');
  const hasWithPrismaUsage = content.includes('withPrisma(');

  console.log('');
  console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
  console.log(
    '- –ò–º–ø–æ—Ä—Ç withPrisma —É–¥–∞–ª–µ–Ω:',
    !hasWithPrismaImport ? '‚úÖ' : '‚ùå'
  );
  console.log(
    '- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ withPrisma —É–¥–∞–ª–µ–Ω–æ:',
    !hasWithPrismaUsage ? '‚úÖ' : '‚ùå'
  );

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç prisma
  const hasPrismaImport = content.includes('import { prisma }');
  console.log('- –ò–º–ø–æ—Ä—Ç prisma –¥–æ–±–∞–≤–ª–µ–Ω:', hasPrismaImport ? '‚úÖ' : '‚ùå');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ prisma
  const hasDirectPrismaUsage = content.includes('prisma.user.findUnique');
  const hasDirectAdminLogUsage = content.includes(
    'prisma.adminActionLog.create'
  );
  console.log(
    '- –ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ prisma.user.findUnique:',
    hasDirectPrismaUsage ? '‚úÖ' : '‚ùå'
  );
  console.log(
    '- –ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ prisma.adminActionLog.create:',
    hasDirectAdminLogUsage ? '‚úÖ' : '‚ùå'
  );

  console.log('');

  if (
    !hasWithPrismaImport &&
    !hasWithPrismaUsage &&
    hasPrismaImport &&
    hasDirectPrismaUsage &&
    hasDirectAdminLogUsage
  ) {
    console.log('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    console.log('');
    console.log('üìù –ß—Ç–æ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:');
    console.log(
      '1. ‚ùå import { withPrisma } from "../prisma" ‚Üí ‚úÖ import { prisma } from "../prisma"'
    );
    console.log(
      '2. ‚ùå await withPrisma(async (prisma) => { ... }) ‚Üí ‚úÖ await prisma.user.findUnique(...)'
    );
    console.log(
      '3. ‚ùå await withPrisma(async (prisma) => { ... }) ‚Üí ‚úÖ await prisma.adminActionLog.create(...)'
    );
    console.log('');
    console.log(
      '‚ú® Middleware —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ –ø–∞—Ç—Ç–µ—Ä–Ω, —á—Ç–æ –∏ –¥—Ä—É–≥–∏–µ API —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ'
    );
  } else {
    console.log(
      '‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞.'
    );
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–∞:', error.message);
}
