#!/usr/bin/env node

/**
 * –°–∏–º—É–ª—è—Ü–∏—è –æ—à–∏–±–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã mock-interviews
 */

const http = require('http');

const BASE_URL = 'http://localhost:3000';

function makeRequest(url, options = {}) {
  return new Promise((resolve, reject) => {
    const req = http.request(
      url,
      {
        method: options.method || 'GET',
        headers: {
          'Content-Type': 'application/json',
          'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36',
          Accept: 'application/json, text/plain, */*',
          'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
          ...options.headers,
        },
      },
      (res) => {
        let data = '';

        res.on('data', (chunk) => {
          data += chunk;
        });

        res.on('end', () => {
          resolve({
            status: res.statusCode,
            statusText: res.statusMessage,
            headers: res.headers,
            body: data,
            contentType: res.headers['content-type'] || 'unknown',
          });
        });
      }
    );

    req.on('error', (error) => {
      reject(error);
    });

    if (options.body) {
      req.write(JSON.stringify(options.body));
    }

    req.end();
  });
}

async function simulateBrowserBehavior() {
  console.log('üåê –°–ò–ú–£–õ–Ø–¶–ò–Ø –ü–û–í–ï–î–ï–ù–ò–Ø –ë–†–ê–£–ó–ï–†–ê');
  console.log('='.repeat(60));

  console.log('\n1Ô∏è‚É£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É /mock-interviews');
  try {
    const pageResponse = await makeRequest(`${BASE_URL}/mock-interviews`);
    console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: ${pageResponse.status}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ JavaScript –∫–æ–¥ –¥–ª—è API –≤—ã–∑–æ–≤–æ–≤
    const hasApiCalls =
      pageResponse.body.includes('fetch') &&
      pageResponse.body.includes('/api/mock-interviews');

    if (hasApiCalls) {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç JavaScript –∫–æ–¥ –¥–ª—è API –≤—ã–∑–æ–≤–æ–≤');
    } else {
      console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã–π JavaScript –∫–æ–¥');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ React/Next.js
    const hasReact =
      pageResponse.body.includes('_next') ||
      pageResponse.body.includes('__NEXT_DATA__');

    if (hasReact) {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º');
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${error.message}`);
    return;
  }

  console.log('\n2Ô∏è‚É£ JavaScript –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ –¥–µ–ª–∞–µ—Ç API –∑–∞–ø—Ä–æ—Å—ã');

  // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞–µ—Ç JavaScript –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const apiCalls = [
    {
      name: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π',
      url: '/api/mock-interviews?status=active',
      expectedInCode: 'fetchInterviews',
    },
    {
      name: '–ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
      url: '/api/user/points',
      expectedInCode: 'fetchUserPoints',
    },
  ];

  for (const apiCall of apiCalls) {
    console.log(`\nüì° ${apiCall.name}: ${apiCall.url}`);

    try {
      const response = await makeRequest(`${BASE_URL}${apiCall.url}`);

      console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status} ${response.statusText}`);
      console.log(`   Content-Type: ${response.contentType}`);

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
      if (response.status === 401) {
        console.log(
          '   ‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 401 Unauthorized (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)'
        );

        try {
          const errorData = JSON.parse(response.body);
          console.log(
            `   üìã –°–æ–æ–±—â–µ–Ω–∏–µ: ${errorData.message || errorData.error}`
          );
        } catch (e) {
          console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –æ—Ç–≤–µ—Ç');
        }
      } else if (response.status === 404) {
        console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: 404 Not Found - API —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –ª–∏ HTML
        if (
          response.body.includes('<!DOCTYPE') ||
          response.body.includes('<html')
        ) {
          console.log(
            '   ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML –≤–º–µ—Å—Ç–æ JSON!'
          );
          console.log('   üîç –≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É "Unexpected token \'<\'"');
        }
      } else if (response.status === 500) {
        console.log('   ‚ùå –ü–†–û–ë–õ–ï–ú–ê: 500 Internal Server Error');
      } else if (response.status === 200) {
        console.log('   ‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç');

        try {
          const data = JSON.parse(response.body);
          console.log(`   üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: ${Object.keys(data).join(', ')}`);
        } catch (e) {
          console.log('   ‚ùå –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON');
        }
      }
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}`);
    }
  }
}

async function analyzeUserExperience() {
  console.log('\nüë§ –ê–ù–ê–õ–ò–ó –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ì–û –û–ü–´–¢–ê');
  console.log('='.repeat(60));

  console.log('\nüîç –ß–¢–û –í–ò–î–ò–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨:');
  console.log('1. –°—Ç—Ä–∞–Ω–∏—Ü–∞ /mock-interviews –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ');
  console.log('2. JavaScript –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ –¥–µ–ª–∞–µ—Ç API –∑–∞–ø—Ä–æ—Å—ã');
  console.log(
    '3. API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 401 Unauthorized (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)'
  );
  console.log(
    '4. –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å 401 –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'
  );

  console.log('\n‚ùì –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –û–®–ò–ë–û–ö –í –ë–†–ê–£–ó–ï–†–ï:');
  console.log('1. –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç 401 –æ—à–∏–±–∫–∏');
  console.log(
    '2. JavaScript –ø—ã—Ç–∞–µ—Ç—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON'
  );
  console.log('3. –ü—Ä–æ–±–ª–µ–º—ã —Å CORS –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏');
  console.log('4. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('5. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Å—Å–∏—è–º–∏/cookies –≤ –±—Ä–∞—É–∑–µ—Ä–µ');

  console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –î–ê–õ–¨–ù–ï–ô–®–ï–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');
  console.log('1. –û—Ç–∫—Ä—ã—Ç—å DevTools –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F12)');
  console.log('2. –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Network');
  console.log('3. –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É /mock-interviews');
  console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã API –∑–∞–ø—Ä–æ—Å–æ–≤');
  console.log('5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Console –Ω–∞ –Ω–∞–ª–∏—á–∏–µ JavaScript –æ—à–∏–±–æ–∫');
  console.log('6. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è');
}

async function runSimulation() {
  await simulateBrowserBehavior();
  await analyzeUserExperience();

  console.log('\n' + '='.repeat(60));
  console.log('üéØ –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó:');
  console.log('');
  console.log('‚úÖ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('‚úÖ Next.js —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç');
  console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ mock-interviews –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è');
  console.log('‚úÖ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON (–Ω–µ HTML)');
  console.log('');
  console.log('‚ùó –û–°–ù–û–í–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê:');
  console.log(
    'API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 401 Unauthorized –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.'
  );
  console.log('–≠—Ç–æ –ù–û–†–ú–ê–õ–¨–ù–û–ï –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –Ω–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ–ª–∂–µ–Ω —ç—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.');
  console.log('');
  console.log('üîç –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–û–ï –û–ü–ò–°–ê–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ –ù–ï–¢–û–ß–ù–û:');
  console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–æ–±—â–∏–ª –æ–± –æ—à–∏–±–∫–µ "Unexpected token \'<\'"');
  console.log(
    '–ù–æ –Ω–∞—à–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON, –∞ –Ω–µ HTML.'
  );
  console.log('');
  console.log('üí° –í–û–ó–ú–û–ñ–ù–´–ï –û–ë–™–Ø–°–ù–ï–ù–ò–Ø:');
  console.log('1. –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π');
  console.log('2. –ü—Ä–æ–±–ª–µ–º–∞ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö');
  console.log('3. –ü—Ä–æ–±–ª–µ–º–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('4. –ü—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
}

runSimulation().catch(console.error);
