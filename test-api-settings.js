/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ä–æ—É—Ç–∞ /api/user/api-settings
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ API –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */

const testApiSettings = async () => {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...\n');

  const baseUrl = 'http://localhost:3000';

  try {
    // –¢–µ—Å—Ç 1: GET –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 401)
    console.log('üìã –¢–µ—Å—Ç 1: GET –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    try {
      const response = await fetch(`${baseUrl}/api/user/api-settings`);
      const data = await response.json();

      if (response.status === 401) {
        console.log(
          '‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 401 –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        );
        console.log(
          `   –°—Ç–∞—Ç—É—Å: ${response.status}, –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.error}\n`
        );
      } else {
        console.log('‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 401');
        console.log(`   –ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å: ${response.status}\n`);
      }
    } catch (error) {
      console.log('‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞');
      console.log(`   –û—à–∏–±–∫–∞: ${error.message}\n`);
    }

    // –¢–µ—Å—Ç 2: POST –∑–∞–ø—Ä–æ—Å (–Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥)
    console.log('üìã –¢–µ—Å—Ç 2: POST –∑–∞–ø—Ä–æ—Å (–Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥)');
    try {
      const response = await fetch(`${baseUrl}/api/user/api-settings`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ test: 'data' }),
      });
      const data = await response.json();

      if (response.status === 405) {
        console.log(
          '‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 405 –¥–ª—è –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ –º–µ—Ç–æ–¥–∞'
        );
        console.log(
          `   –°—Ç–∞—Ç—É—Å: ${response.status}, –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.error}\n`
        );
      } else {
        console.log('‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 405');
        console.log(`   –ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å: ${response.status}\n`);
      }
    } catch (error) {
      console.log('‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞');
      console.log(`   –û—à–∏–±–∫–∞: ${error.message}\n`);
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ API
    console.log('üìã –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API —Ä–æ—É—Ç–∞');
    try {
      const response = await fetch(`${baseUrl}/api/user/api-settings`);

      if (response.status === 401 || response.status === 200) {
        console.log('‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω: API —Ä–æ—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç');
        console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status}\n`);
      } else {
        console.log('‚ùå –¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞');
        console.log(`   –ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å: ${response.status}\n`);
      }
    } catch (error) {
      console.log('‚ùå –¢–µ—Å—Ç 3 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: API —Ä–æ—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`   –û—à–∏–±–∫–∞: ${error.message}\n`);
    }

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö PUT –∑–∞–ø—Ä–æ—Å–∞
    console.log('üìã –¢–µ—Å—Ç 4: PUT –∑–∞–ø—Ä–æ—Å —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
    try {
      const response = await fetch(`${baseUrl}/api/user/api-settings`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          useCustomApi: 'invalid', // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å boolean
          apiType: 'invalid_type', // –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø
        }),
      });

      if (response.status === 401) {
        console.log(
          '‚úÖ –¢–µ—Å—Ç 4 –ø—Ä–æ–π–¥–µ–Ω: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 401 –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        );
        console.log(`   –°—Ç–∞—Ç—É—Å: ${response.status}\n`);
      } else if (response.status === 400) {
        const data = await response.json();
        console.log(
          '‚úÖ –¢–µ—Å—Ç 4 –ø—Ä–æ–π–¥–µ–Ω: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 400 –¥–ª—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'
        );
        console.log(
          `   –°—Ç–∞—Ç—É—Å: ${response.status}, –°–æ–æ–±—â–µ–Ω–∏–µ: ${data.error}\n`
        );
      } else {
        console.log('‚ùå –¢–µ—Å—Ç 4 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 401 –∏–ª–∏ 400');
        console.log(`   –ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å: ${response.status}\n`);
      }
    } catch (error) {
      console.log('‚ùå –¢–µ—Å—Ç 4 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞');
      console.log(`   –û—à–∏–±–∫–∞: ${error.message}\n`);
    }

    console.log('üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('   - API —Ä–æ—É—Ç /api/user/api-settings —Å–æ–∑–¥–∞–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('   - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    console.log('   - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ GET –∏ PUT –º–µ—Ç–æ–¥—ã');
    console.log('   - –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö');
    console.log('\nüìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏');
    console.log('   –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å');
    console.log('   –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.');
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testApiSettings().catch(console.error);
