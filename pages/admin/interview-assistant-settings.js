import { useState, useEffect } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useSession } from 'next-auth/react';
import AdminLayout from '../../components/admin/AdminLayout';
import { useNotification } from '../../contexts/NotificationContext';
import styles from '../../styles/admin/InterviewAssistantSettings.module.css';

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
 * @returns {JSX.Element} –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
 */
export default function InterviewAssistantSettingsPage() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const { showSuccess, showError } = useNotification();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const [settings, setSettings] = useState({
    maxQuestionsPerDay: 10,
    maxTokensPerQuestion: 4000,
    isActive: true,
    apiType: 'openrouter', // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ OpenRouter
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è OpenRouter
    openRouterApiKey: '',
    openRouterBaseUrl: 'https://openrouter.ai/api/v1',
    openRouterModel: 'google/gemma-3-12b-it:free',
    openRouterTemperature: 0.7,
    openRouterMaxTokens: 4000,
  });

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  const [validationErrors, setValidationErrors] = useState({});

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const [loading, setLoading] = useState(true);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  const [saving, setSaving] = useState(false);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏
  const [error, setError] = useState(null);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è API –∫–ª—é—á–∞
  const [showApiKey, setShowApiKey] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  useEffect(() => {
    if (status === 'authenticated') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (session.user.role !== 'admin' && session.user.role !== 'superadmin') {
        showError('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        router.push('/');
      }
    } else if (status === 'unauthenticated') {
      router.push('/admin/signin');
    }
  }, [status, session, router, showError]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  const fetchSettings = async () => {
    setLoading(true);
    setError(null);

    try {
      const response = await fetch('/api/admin/interview-assistant-settings');

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
      }

      const data = await response.json();
      setSettings(data.settings);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (status === 'authenticated') {
      fetchSettings();
    }
  }, [status]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    let newValue;

    // –î–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ
    if (type === 'number') {
      newValue = parseInt(value, 10);
    } else if (type === 'checkbox') {
      newValue = checked;
    } else {
      newValue = value;
    }

    setSettings({
      ...settings,
      [name]: newValue,
    });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e) => {
    e.preventDefault();
    setSaving(true);
    setError(null);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è OpenRouter
    if (!settings.openRouterApiKey) {
      setError('API –∫–ª—é—á OpenRouter –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω');
      setSaving(false);
      return;
    }

    if (!settings.openRouterModel) {
      setError('–ú–æ–¥–µ–ª—å OpenRouter –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞');
      setSaving(false);
      return;
    }

    try {
      const response = await fetch('/api/admin/interview-assistant-settings', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(settings),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
      }

      showSuccess('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      fetchSettings();
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', err);
      setError(
        err.message ||
          '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
      );
      showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    } finally {
      setSaving(false);
    }
  };

  // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (status === 'loading' || status === 'unauthenticated') {
    return null;
  }

  return (
    <>
      <Head>
        <title>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–≤—å—é-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ | –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</title>
        <meta
          name="description"
          content="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–Ω—Ç–µ—Ä–≤—å—é-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"
        />
      </Head>

      <AdminLayout>
        <div className={styles.settingsPageContainer}>
          <h1 className={styles.settingsPageTitle}>
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–≤—å—é-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
          </h1>

          {loading ? (
            <div className={styles.loadingContainer}>
              <div className={styles.loadingSpinner}></div>
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...</p>
            </div>
          ) : error ? (
            <div className={styles.errorContainer}>
              <p className={styles.errorMessage}>{error}</p>
              <button onClick={fetchSettings} className={styles.retryButton}>
                –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
              </button>
            </div>
          ) : (
            <form onSubmit={handleSubmit} className={styles.settingsForm}>
              <div className={styles.formGroup}>
                <h2 className={styles.sectionTitle}>
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenRouter API
                </h2>
                <p className={styles.formHelp}>
                  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å OpenRouter API - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º
                  —à–ª—é–∑–æ–º –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —è–∑—ã–∫–æ–≤—ã–º –º–æ–¥–µ–ª—è–º
                </p>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="openRouterApiKey" className={styles.formLabel}>
                  API –∫–ª—é—á OpenRouter
                </label>
                <div className={styles.apiKeyContainer}>
                  <input
                    type={showApiKey ? 'text' : 'password'}
                    id="openRouterApiKey"
                    name="openRouterApiKey"
                    value={settings.openRouterApiKey}
                    onChange={handleChange}
                    className={styles.formInput}
                    required
                  />
                  <button
                    type="button"
                    onClick={() => setShowApiKey(!showApiKey)}
                    className={styles.toggleButton}
                  >
                    {showApiKey ? 'üôà –°–∫—Ä—ã—Ç—å' : 'üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å'}
                  </button>
                </div>
                <p className={styles.formHelp}>
                  API –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ OpenRouter. –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞{' '}
                  <a
                    href="https://openrouter.ai/keys"
                    target="_blank"
                    rel="noopener noreferrer"
                    className={styles.externalLink}
                  >
                    —Å–∞–π—Ç–µ OpenRouter
                  </a>
                </p>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="openRouterModel" className={styles.formLabel}>
                  –ú–æ–¥–µ–ª—å OpenRouter
                </label>
                <select
                  id="openRouterModel"
                  name="openRouterModel"
                  value={settings.openRouterModel}
                  onChange={handleChange}
                  className={styles.formSelect}
                  required
                >
                  <option value="google/gemma-3-12b-it:free">
                    Google Gemma 3 12B (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)
                  </option>
                  <option value="anthropic/claude-3-opus:2024-05-23">
                    Anthropic Claude 3 Opus
                  </option>
                  <option value="anthropic/claude-3-sonnet:2024-05-23">
                    Anthropic Claude 3 Sonnet
                  </option>
                  <option value="anthropic/claude-3-haiku:2024-05-23">
                    Anthropic Claude 3 Haiku
                  </option>
                  <option value="meta-llama/llama-3-70b-instruct:free">
                    Meta Llama 3 70B (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)
                  </option>
                  <option value="mistralai/mistral-large-latest">
                    Mistral Large
                  </option>
                  <option value="mistralai/mistral-medium-latest">
                    Mistral Medium
                  </option>
                  <option value="mistralai/mistral-small-latest">
                    Mistral Small
                  </option>
                </select>
                <p className={styles.formHelp}>
                  –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å OpenRouter –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö
                </p>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="openRouterBaseUrl" className={styles.formLabel}>
                  –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è OpenRouter API
                </label>
                <input
                  type="text"
                  id="openRouterBaseUrl"
                  name="openRouterBaseUrl"
                  value={settings.openRouterBaseUrl}
                  onChange={handleChange}
                  className={styles.formInput}
                  required
                />
                <p className={styles.formHelp}>
                  URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API OpenRouter (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
                  https://openrouter.ai/api/v1)
                </p>
              </div>

              <div className={styles.formGroup}>
                <label
                  htmlFor="openRouterTemperature"
                  className={styles.formLabel}
                >
                  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ({settings.openRouterTemperature})
                </label>
                <input
                  type="range"
                  id="openRouterTemperature"
                  name="openRouterTemperature"
                  min="0"
                  max="1"
                  step="0.1"
                  value={settings.openRouterTemperature}
                  onChange={handleChange}
                  className={styles.formInput}
                  required
                />
                <p className={styles.formHelp}>
                  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ù–∏–∑–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
                  –¥–µ–ª–∞—é—Ç –æ—Ç–≤–µ—Ç—ã –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏, –≤—ã—Å–æ–∫–∏–µ - –±–æ–ª–µ–µ
                  —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º–∏.
                </p>
              </div>

              <div className={styles.formGroup}>
                <label
                  htmlFor="openRouterMaxTokens"
                  className={styles.formLabel}
                >
                  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
                </label>
                <input
                  type="number"
                  id="openRouterMaxTokens"
                  name="openRouterMaxTokens"
                  value={settings.openRouterMaxTokens}
                  onChange={handleChange}
                  min="1000"
                  max="10000"
                  className={styles.formInput}
                  required
                />
                <p className={styles.formHelp}>
                  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å
                  –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
                </p>
              </div>

              <div className={styles.formGroup}>
                <label
                  htmlFor="maxQuestionsPerDay"
                  className={styles.formLabel}
                >
                  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
                </label>
                <input
                  type="number"
                  id="maxQuestionsPerDay"
                  name="maxQuestionsPerDay"
                  value={settings.maxQuestionsPerDay}
                  onChange={handleChange}
                  min="1"
                  max="100"
                  className={styles.formInput}
                  required
                />
                <p className={styles.formHelp}>
                  –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç
                  –∑–∞–¥–∞—Ç—å –≤ –¥–µ–Ω—å
                </p>
              </div>

              <div className={styles.formGroup}>
                <label
                  htmlFor="maxTokensPerQuestion"
                  className={styles.formLabel}
                >
                  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å
                </label>
                <input
                  type="number"
                  id="maxTokensPerQuestion"
                  name="maxTokensPerQuestion"
                  value={settings.maxTokensPerQuestion}
                  onChange={handleChange}
                  min="1000"
                  max="10000"
                  className={styles.formInput}
                  required
                />
                <p className={styles.formHelp}>
                  –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å
                  –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å
                </p>
              </div>

              <div className={styles.formGroup}>
                <div className={styles.checkboxContainer}>
                  <input
                    type="checkbox"
                    id="isActive"
                    name="isActive"
                    checked={settings.isActive}
                    onChange={handleChange}
                    className={styles.formCheckbox}
                  />
                  <label htmlFor="isActive" className={styles.checkboxLabel}>
                    –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                  </label>
                </div>
                <p className={styles.formHelp}>
                  –ï—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ, –∏–Ω—Ç–µ—Ä–≤—å—é-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è
                  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                </p>
              </div>

              <div className={styles.formActions}>
                <button
                  type="submit"
                  className={styles.saveButton}
                  disabled={saving}
                >
                  {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
                </button>
              </div>
            </form>
          )}
        </div>
      </AdminLayout>
    </>
  );
}

// –°–µ—Ä–≤–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
export async function getServerSideProps(context) {
  return {
    props: {}, // –ü–µ—Ä–µ–¥–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç props
  };
}
