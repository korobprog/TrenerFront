import { useState, useEffect } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useSession } from 'next-auth/react';
import AdminLayout from '../../components/admin/AdminLayout';
import StatisticsOverview from '../../components/admin/StatisticsOverview';
import StatisticsChart from '../../components/admin/StatisticsChart';
import { useNotification } from '../../contexts/NotificationContext';
import styles from '../../styles/admin/StatisticsOverview.module.css';

/**
 * –ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ API –ø–æ–¥ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º StatisticsOverview
 * @param {Object} apiData - –î–∞–Ω–Ω—ã–µ –æ—Ç API
 * @returns {Object} –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è summary
 */
function adaptApiDataToSummary(apiData) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (!apiData || typeof apiData !== 'object') {
    throw new Error('adaptApiDataToSummary: –ù–µ–≤–µ—Ä–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  }

  const {
    users = {},
    interviews = {},
    points = {},
    adminActivity = {},
  } = apiData;

  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const usersByRole = users.byRole || {};
  const admins = (usersByRole.admin || 0) + (usersByRole.superadmin || 0);
  const regular = usersByRole.user || 0;

  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
  const interviewsByStatus = interviews.byStatus || {};
  const totalInterviews = Object.values(interviewsByStatus).reduce(
    (sum, count) => sum + (typeof count === 'number' ? count : 0),
    0
  );

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const safeNumber = (value, defaultValue = 0) => {
    const num = Number(value);
    return isNaN(num) ? defaultValue : num;
  };

  return {
    users: {
      total: safeNumber(users.total),
      admins: safeNumber(admins),
      regular: safeNumber(regular),
      blocked: safeNumber(users.blocked),
    },
    interviews: {
      total: safeNumber(totalInterviews),
      completed: safeNumber(interviewsByStatus.completed),
      pending: safeNumber(interviewsByStatus.pending),
      booked: safeNumber(interviewsByStatus.confirmed), // confirmed -> booked
      cancelled: safeNumber(interviewsByStatus.cancelled),
      noShow: safeNumber(interviewsByStatus.no_show),
    },
    points: {
      totalIssued: safeNumber(points.totalIssued),
      totalSpent: 0, // API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º 0
      averagePerUser: safeNumber(points.averagePerUser),
    },
    feedback: {
      count: 0, // API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
      averageTechnicalScore: 0,
      averageInterviewerRating: 0,
    },
    violations: {
      count: 0, // API –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
    },
  };
}

/**
 * –ê–¥–∞–ø—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ API –ø–æ–¥ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º StatisticsChart
 * @param {Object} apiData - –î–∞–Ω–Ω—ã–µ –æ—Ç API
 * @returns {Array} –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
 */
function adaptApiDataToStatistics(apiData) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (!apiData || typeof apiData !== 'object') {
    throw new Error('adaptApiDataToStatistics: –ù–µ–≤–µ—Ä–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  }

  const { users = {}, interviews = {}, points = {} } = apiData;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ —á–∏—Å–ª–æ
  const safeNumber = (value, defaultValue = 0) => {
    const num = Number(value);
    return isNaN(num) ? defaultValue : Math.max(0, num); // –ù–µ –¥–æ–ø—É—Å–∫–∞–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  };

  // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π
  const timeSeriesData = [];
  const today = new Date();

  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const interviewsByStatus = interviews.byStatus || {};
  const totalUsers = safeNumber(users.total);
  const newUsersLast30Days = safeNumber(users.newLast30Days);
  const totalPointsIssued = safeNumber(points.totalIssued);

  for (let i = 6; i >= 0; i--) {
    const date = new Date(today);
    date.setDate(date.getDate() - i);

    // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –ø–æ –¥–Ω—è–º (–±–∞–∑–æ–≤–∞—è —Å–∏–º—É–ª—è—Ü–∏—è)
    const dayFactor = (7 - i) / 7; // –ë–æ–ª—å—à–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏

    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
    const completedCount = safeNumber(interviewsByStatus.completed);
    const pendingCount = safeNumber(interviewsByStatus.pending);
    const confirmedCount = safeNumber(interviewsByStatus.confirmed);
    const cancelledCount = safeNumber(interviewsByStatus.cancelled);
    const noShowCount = safeNumber(interviewsByStatus.no_show);

    timeSeriesData.push({
      date: date.toISOString(),
      // –î–∞–Ω–Ω—ã–µ –ø–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º (—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      completedInterviews: Math.max(
        0,
        Math.round((completedCount * dayFactor) / 7)
      ),
      pendingInterviews: Math.max(
        0,
        Math.round((pendingCount * dayFactor) / 7)
      ),
      bookedInterviews: Math.max(
        0,
        Math.round((confirmedCount * dayFactor) / 7)
      ),
      cancelledInterviews: Math.max(
        0,
        Math.round((cancelledCount * dayFactor) / 7)
      ),
      noShowInterviews: Math.max(0, Math.round((noShowCount * dayFactor) / 7)),

      // –î–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (—Å–∏–º—É–ª—è—Ü–∏—è —Ä–æ—Å—Ç–∞)
      totalUsers: Math.max(0, Math.round(totalUsers * dayFactor)),
      newUsers: Math.max(0, Math.round((newUsersLast30Days * dayFactor) / 30)), // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –¥–Ω—è–º
      activeUsers: Math.max(0, Math.round(totalUsers * dayFactor * 0.3)), // 30% –∞–∫—Ç–∏–≤–Ω—ã—Ö

      // –î–∞–Ω–Ω—ã–µ –ø–æ –±–∞–ª–ª–∞–º (—Å–∏–º—É–ª—è—Ü–∏—è)
      pointsIssued: Math.max(
        0,
        Math.round((totalPointsIssued * dayFactor) / 7)
      ),
      pointsSpent: Math.max(
        0,
        Math.round((totalPointsIssued * dayFactor) / 10)
      ), // –ü—Ä–∏–º–µ—Ä–Ω–æ 10% –æ—Ç –≤—ã–¥–∞–Ω–Ω—ã—Ö

      // –î–∞–Ω–Ω—ã–µ –ø–æ –æ—Ç–∑—ã–≤–∞–º (–±–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º seed –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)
      averageTechnicalScore: Math.max(
        0,
        Math.min(5, 3.5 + (Math.sin(i) + 1) * 0.75)
      ), // 3.5-5.0
      averageInterviewerRating: Math.max(
        0,
        Math.min(5, 4.0 + (Math.cos(i) + 1) * 0.5)
      ), // 4.0-5.0
    });
  }

  return timeSeriesData;
}

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã
 * @returns {JSX.Element} –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */
export default function AdminStatisticsPage() {
  const { data: session, status } = useSession();
  const router = useRouter();
  const { showError } = useNotification();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const [statistics, setStatistics] = useState([]);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const [summary, setSummary] = useState(null);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –¥–∞—Ç–µ
  const [dateFilters, setDateFilters] = useState({
    startDate: '',
    endDate: '',
  });
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const [loading, setLoading] = useState(true);
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏
  const [error, setError] = useState(null);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  useEffect(() => {
    if (status === 'authenticated') {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (session.user.role !== 'admin' && session.user.role !== 'superadmin') {
        showError('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        router.push('/');
      }
    } else if (status === 'unauthenticated') {
      router.push('/admin/signin');
    }
  }, [status, session, router, showError]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const fetchStatistics = async () => {
    setLoading(true);
    setError(null);

    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
      const queryParams = new URLSearchParams();

      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –¥–∞—Ç–µ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
      if (dateFilters.startDate) {
        queryParams.append('startDate', dateFilters.startDate);
      }
      if (dateFilters.endDate) {
        queryParams.append('endDate', dateFilters.endDate);
      }

      // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
      const response = await fetch(
        `/api/admin/statistics?${queryParams.toString()}`,
        {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
          credentials: 'include', // –í–∫–ª—é—á–∞–µ–º cookies –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        }
      );

      if (!response.ok) {
        if (response.status === 401) {
          throw new Error('–ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ');
        } else if (response.status === 403) {
          throw new Error('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
        } else if (response.status >= 500) {
          throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        } else {
          throw new Error(
            `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${response.status}`
          );
        }
      }

      const data = await response.json();

      // –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ï –õ–û–ì–ò
      console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç API:', data);
      console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ data:', Object.keys(data));
      console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: data.data:', data.data);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
      if (!data || typeof data !== 'object') {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API');
      }

      if (!data.success) {
        throw new Error(data.message || 'API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É');
      }

      if (!data.data || typeof data.data !== 'object') {
        throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –æ—Ç–≤–µ—Ç–µ API');
      }

      // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–¥ –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      let adaptedSummary, adaptedStatistics;

      try {
        adaptedSummary = adaptApiDataToSummary(data.data);
        adaptedStatistics = adaptApiDataToStatistics(data.data);
      } catch (adaptError) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', adaptError);
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
      if (!adaptedSummary || typeof adaptedSummary !== 'object') {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      }

      if (!Array.isArray(adaptedStatistics)) {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setStatistics(adaptedStatistics);
      setSummary(adaptedSummary);

      // –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ò–ï –õ–û–ì–ò –ü–û–°–õ–ï –ê–î–ê–ü–¢–ê–¶–ò–ò
      console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π summary:', adaptedSummary);
      console.log(
        'üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ statistics:',
        adaptedStatistics
      );
      console.log(
        '‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞'
      );
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err);

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage =
        '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';

      if (
        err.message.includes('–ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞') ||
        err.message.includes('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω')
      ) {
        errorMessage = '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã.';
      } else if (err.message.includes('—Å–µ—Ä–≤–µ—Ä–∞')) {
        errorMessage =
          '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.';
      } else if (err.message.includes('–¥–∞–Ω–Ω—ã—Ö')) {
        errorMessage =
          '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.';
      }

      setError(errorMessage);

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
      setStatistics([]);
      setSummary(null);
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    if (status === 'authenticated') {
      fetchStatistics();
    }
  }, [status, dateFilters]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ –¥–∞—Ç–µ
  const handleDateFilterChange = (newFilters) => {
    setDateFilters(newFilters);
  };

  // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (status === 'loading' || status === 'unauthenticated') {
    return null;
  }

  return (
    <>
      <Head>
        <title>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã | –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</title>
        <meta name="description" content="–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã" />
      </Head>

      <AdminLayout>
        <div className={styles.statisticsPageContainer}>
          <h1 className={styles.statisticsPageTitle}>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</h1>

          {loading ? (
            <div className={styles.loadingContainer}>
              <div className={styles.loadingSpinner}></div>
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
            </div>
          ) : error ? (
            <div className={styles.errorContainer}>
              <p className={styles.errorMessage}>{error}</p>
              <button onClick={fetchStatistics} className={styles.retryButton}>
                –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
              </button>
            </div>
          ) : (
            <>
              <StatisticsOverview
                summary={summary}
                onDateFilterChange={handleDateFilterChange}
              />
              <StatisticsChart statistics={statistics} />
            </>
          )}
        </div>
      </AdminLayout>
    </>
  );
}

// –°–µ—Ä–≤–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
export async function getServerSideProps(context) {
  return {
    props: {}, // –ü–µ—Ä–µ–¥–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç props
  };
}
