import { useState, useEffect } from 'react';
import Head from 'next/head';
import AdminLayout from '../../components/admin/AdminLayout';
import styles from '../../styles/admin/AdminLayout.module.css';
import { useNotification } from '../../contexts/NotificationContext';

/**
 * –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
 * @returns {JSX.Element} –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
 */
export default function AdminDashboard() {
  const [statistics, setStatistics] = useState(null);
  const [loading, setLoading] = useState(true);
  const { showError } = useNotification();

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const fetchStatistics = async () => {
      try {
        const response = await fetch('/api/admin/statistics');

        if (!response.ok) {
          const errorData = await response.json().catch(() => ({}));
          console.error('–û—à–∏–±–∫–∞ API:', response.status, errorData);
          throw new Error(
            errorData.message ||
              `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${response.status}`
          );
        }

        const data = await response.json();
        console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç API:', data);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ API
        if (!data.success || !data.data) {
          throw new Error('API –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö');
        }

        const apiData = data.data;

        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API
        const usersData = apiData.users || {};
        const interviewsData = apiData.interviews || {};
        const interviewsByStatus = interviewsData.byStatus || {};

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –∏–∑ —Å—Ç–∞—Ç—É—Å–æ–≤
        const totalInterviews = Object.values(interviewsByStatus).reduce(
          (sum, count) => sum + count,
          0
        );

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è (pending + confirmed + in_progress)
        const activeInterviewsCount =
          (interviewsByStatus.pending || 0) +
          (interviewsByStatus.confirmed || 0) +
          (interviewsByStatus.in_progress || 0);

        setStatistics({
          usersCount: usersData.total || 0,
          interviewsCount: totalInterviews,
          activeInterviewsCount: activeInterviewsCount,
          noShowCount: interviewsByStatus.no_show || 0,
          recentLogs: [], // API –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç recentLogs, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
        });
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        showError(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: ${error.message}`);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
        setStatistics({
          usersCount: 0,
          interviewsCount: 0,
          activeInterviewsCount: 0,
          noShowCount: 0,
          recentLogs: [],
        });
      } finally {
        setLoading(false);
      }
    };

    fetchStatistics();
  }, [showError]);

  return (
    <>
      <Head>
        <title>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</title>
        <meta name="description" content="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å" />
      </Head>
      <AdminLayout>
        <div className={styles.dashboardContainer}>
          <h1 className={styles.pageTitle}>–î–∞—à–±–æ—Ä–¥</h1>

          {loading ? (
            <div className={styles.loadingContainer}>
              <div className={styles.loadingSpinner}></div>
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
            </div>
          ) : statistics ? (
            <div className={styles.statsGrid}>
              <div className={styles.statCard}>
                <h3 className={styles.statTitle}>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h3>
                <div className={styles.statValue}>
                  {statistics.usersCount || 0}
                </div>
                <div className={styles.statDescription}>
                  –í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ
                </div>
              </div>

              <div className={styles.statCard}>
                <h3 className={styles.statTitle}>–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è</h3>
                <div className={styles.statValue}>
                  {statistics.interviewsCount || 0}
                </div>
                <div className={styles.statDescription}>–í—Å–µ–≥–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ</div>
              </div>

              <div className={styles.statCard}>
                <h3 className={styles.statTitle}>–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è</h3>
                <div className={styles.statValue}>
                  {statistics.activeInterviewsCount || 0}
                </div>
                <div className={styles.statDescription}>–û–∂–∏–¥–∞—é—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è</div>
              </div>

              <div className={styles.statCard}>
                <h3 className={styles.statTitle}>–ù–µ—è–≤–∫–∏</h3>
                <div className={styles.statValue}>
                  {statistics.noShowCount || 0}
                </div>
                <div className={styles.statDescription}>–í—Å–µ–≥–æ –Ω–µ—è–≤–æ–∫</div>
              </div>
            </div>
          ) : (
            <div className={styles.errorMessage}>
              –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
            </div>
          )}

          <div className={styles.recentActivitySection}>
            <h2 className={styles.sectionTitle}>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
            {loading ? (
              <div className={styles.loadingContainer}>
                <div className={styles.loadingSpinner}></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
              </div>
            ) : statistics &&
              statistics.recentLogs &&
              statistics.recentLogs.length > 0 ? (
              <div className={styles.activityList}>
                {statistics.recentLogs.map((log) => (
                  <div key={log.id} className={styles.activityItem}>
                    <div className={styles.activityIcon}>
                      {log.action === 'create' && '‚ûï'}
                      {log.action === 'update' && '‚úèÔ∏è'}
                      {log.action === 'delete' && 'üóëÔ∏è'}
                      {log.action === 'login' && 'üîê'}
                      {!['create', 'update', 'delete', 'login'].includes(
                        log.action
                      ) && 'üìã'}
                    </div>
                    <div className={styles.activityContent}>
                      <div className={styles.activityTitle}>
                        {log.adminName || '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'}{' '}
                        {getActionText(log.action)} {log.entityType}
                        {log.entityId && ` (ID: ${log.entityId})`}
                      </div>
                      <div className={styles.activityTime}>
                        {new Date(log.createdAt).toLocaleString('ru-RU')}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className={styles.emptyState}>
                –ù–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
              </div>
            )}
          </div>
        </div>
      </AdminLayout>
    </>
  );
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
 * @param {string} action - –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
 * @returns {string} –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
 */
function getActionText(action) {
  switch (action) {
    case 'create':
      return '—Å–æ–∑–¥–∞–ª';
    case 'update':
      return '–æ–±–Ω–æ–≤–∏–ª';
    case 'delete':
      return '—É–¥–∞–ª–∏–ª';
    case 'login':
      return '–≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É';
    default:
      return '–≤—ã–ø–æ–ª–Ω–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ —Å';
  }
}
