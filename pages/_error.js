import { useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Link from 'next/link';

/**
 * –ö–∞—Å—Ç–æ–º–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–æ–∫ Next.js
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ 404, 500 –∏ –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –æ—à–∏–±–∫–∏
 */
function Error({ statusCode, hasGetInitialPropsRun, err }) {
  const router = useRouter();

  useEffect(() => {
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (err) {
      console.error('üî• –û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', {
        statusCode,
        message: err.message,
        stack: err.stack,
        url: router.asPath,
        timestamp: new Date().toISOString(),
      });
    }
  }, [err, statusCode, router.asPath]);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
  const getErrorMessage = (statusCode) => {
    switch (statusCode) {
      case 404:
        return '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
      case 500:
        return '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞';
      case 403:
        return '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω';
      case 401:
        return '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è';
      default:
        return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞';
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –æ—à–∏–±–∫–∏
  const getErrorDescription = (statusCode) => {
    switch (statusCode) {
      case 404:
        return '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞.';
      case 500:
        return '–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ—ë —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º.';
      case 403:
        return '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.';
      case 401:
        return '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.';
      default:
        return '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ.';
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è –æ—à–∏–±–∫–∏
  const getErrorIcon = (statusCode) => {
    switch (statusCode) {
      case 404:
        return 'üîç';
      case 500:
        return '‚ö†Ô∏è';
      case 403:
        return 'üö´';
      case 401:
        return 'üîê';
      default:
        return '‚ùå';
    }
  };

  return (
    <>
      <Head>
        <title>
          {statusCode} - {getErrorMessage(statusCode)}
        </title>
        <meta name="description" content={getErrorDescription(statusCode)} />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div
        style={{
          minHeight: '100vh',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          padding: '20px',
          backgroundColor: '#f8f9fa',
          fontFamily:
            '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',
        }}
      >
        <div
          style={{
            maxWidth: '600px',
            width: '100%',
            textAlign: 'center',
            backgroundColor: 'white',
            borderRadius: '12px',
            padding: '40px',
            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
            border: '1px solid #e9ecef',
          }}
        >
          {/* –ò–∫–æ–Ω–∫–∞ –æ—à–∏–±–∫–∏ */}
          <div
            style={{
              fontSize: '64px',
              marginBottom: '20px',
            }}
          >
            {getErrorIcon(statusCode)}
          </div>

          {/* –ö–æ–¥ –æ—à–∏–±–∫–∏ */}
          <h1
            style={{
              fontSize: '48px',
              fontWeight: 'bold',
              color: '#dc3545',
              margin: '0 0 16px 0',
            }}
          >
            {statusCode}
          </h1>

          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—à–∏–±–∫–∏ */}
          <h2
            style={{
              fontSize: '24px',
              fontWeight: '600',
              color: '#343a40',
              margin: '0 0 16px 0',
            }}
          >
            {getErrorMessage(statusCode)}
          </h2>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ */}
          <p
            style={{
              fontSize: '16px',
              color: '#6c757d',
              lineHeight: '1.5',
              margin: '0 0 32px 0',
            }}
          >
            {getErrorDescription(statusCode)}
          </p>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ */}
          {process.env.NODE_ENV === 'development' && err && (
            <details
              style={{
                marginBottom: '32px',
                textAlign: 'left',
                backgroundColor: '#f8f9fa',
                padding: '16px',
                borderRadius: '8px',
                border: '1px solid #dee2e6',
              }}
            >
              <summary
                style={{
                  cursor: 'pointer',
                  fontWeight: '600',
                  color: '#495057',
                  marginBottom: '8px',
                }}
              >
                –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ (—Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
              </summary>
              <pre
                style={{
                  fontSize: '12px',
                  color: '#dc3545',
                  whiteSpace: 'pre-wrap',
                  wordBreak: 'break-word',
                  margin: '8px 0 0 0',
                }}
              >
                {err.stack || err.message}
              </pre>
            </details>
          )}

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div
            style={{
              display: 'flex',
              gap: '16px',
              justifyContent: 'center',
              flexWrap: 'wrap',
            }}
          >
            <button
              onClick={() => router.back()}
              style={{
                padding: '12px 24px',
                backgroundColor: '#6c757d',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                fontSize: '16px',
                fontWeight: '500',
                cursor: 'pointer',
                transition: 'background-color 0.2s',
                textDecoration: 'none',
              }}
              onMouseOver={(e) => (e.target.style.backgroundColor = '#5a6268')}
              onMouseOut={(e) => (e.target.style.backgroundColor = '#6c757d')}
            >
              ‚Üê –ù–∞–∑–∞–¥
            </button>

            <Link
              href="/"
              style={{
                padding: '12px 24px',
                backgroundColor: '#007bff',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                fontSize: '16px',
                fontWeight: '500',
                cursor: 'pointer',
                transition: 'background-color 0.2s',
                textDecoration: 'none',
                display: 'inline-block',
              }}
              onMouseOver={(e) => (e.target.style.backgroundColor = '#0056b3')}
              onMouseOut={(e) => (e.target.style.backgroundColor = '#007bff')}
            >
              üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Link>

            <button
              onClick={() => window.location.reload()}
              style={{
                padding: '12px 24px',
                backgroundColor: '#28a745',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                fontSize: '16px',
                fontWeight: '500',
                cursor: 'pointer',
                transition: 'background-color 0.2s',
                textDecoration: 'none',
              }}
              onMouseOver={(e) => (e.target.style.backgroundColor = '#1e7e34')}
              onMouseOut={(e) => (e.target.style.backgroundColor = '#28a745')}
            >
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å
            </button>
          </div>

          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
          <div
            style={{
              marginTop: '32px',
              paddingTop: '24px',
              borderTop: '1px solid #dee2e6',
            }}
          >
            <p
              style={{
                fontSize: '14px',
                color: '#6c757d',
                margin: '0 0 16px 0',
              }}
            >
              –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?
            </p>
            <div
              style={{
                display: 'flex',
                gap: '16px',
                justifyContent: 'center',
                flexWrap: 'wrap',
              }}
            >
              <Link
                href="/flashcards"
                style={{
                  color: '#007bff',
                  textDecoration: 'none',
                  fontSize: '14px',
                }}
              >
                üìö –§–ª–µ—à-–∫–∞—Ä—Ç–æ—á–∫–∏
              </Link>
              <Link
                href="/mock-interviews"
                style={{
                  color: '#007bff',
                  textDecoration: 'none',
                  fontSize: '14px',
                }}
              >
                üéØ –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
              </Link>
              <Link
                href="/training"
                style={{
                  color: '#007bff',
                  textDecoration: 'none',
                  fontSize: '14px',
                }}
              >
                üí™ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
              </Link>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–ø—Å–æ–≤ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–∫–∏
Error.getInitialProps = ({ res, err }) => {
  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;

  // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  if (err) {
    console.error('üî• –°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞:', {
      statusCode,
      message: err.message,
      stack: err.stack,
      timestamp: new Date().toISOString(),
    });
  }

  return { statusCode };
};

export default Error;
