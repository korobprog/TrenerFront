import NextAuth from 'next-auth';
import GoogleProvider from 'next-auth/providers/google';
import GitHubProvider from 'next-auth/providers/github';
import EmailProvider from 'next-auth/providers/email';
import CredentialsProvider from 'next-auth/providers/credentials';
import { PrismaAdapter } from '@next-auth/prisma-adapter';
import prisma from '../../../lib/prisma';
import {
  verifyPassword,
  validateEmail,
  validateUsername,
} from '../../../lib/utils/passwordUtils';

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–ª
 * @param {Object} user - –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} account - –æ–±—ä–µ–∫—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 */
async function handleFirstTimeUserRegistration(user, account) {
  try {
    const STARTUP_POINTS = 1; // –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–ª –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const timestamp = new Date().toISOString();

    console.log(`     üí∞ [${timestamp}] –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –±–∞–ª–ª–∞`);
    console.log(
      `        üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email || user.name || user.id}`
    );
    console.log(`        üÜî User ID: ${user.id}`);
    console.log(`        üîë –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${account?.provider || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);
    console.log(`        üíé –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–ª: ${STARTUP_POINTS}`);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
    await prisma.$transaction(async (tx) => {
      console.log(`        üîÑ –ù–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –±–∞–ª–ª–∞
      const existingStartupTransaction = await tx.pointsTransaction.findFirst({
        where: {
          userId: user.id,
          type: 'startup_bonus',
        },
      });

      if (existingStartupTransaction) {
        console.log(`        ‚ö†Ô∏è –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–ª —É–∂–µ –±—ã–ª –Ω–∞—á–∏—Å–ª–µ–Ω —Ä–∞–Ω–µ–µ`);
        console.log(
          `        üìÖ –î–∞—Ç–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è: ${existingStartupTransaction.createdAt}`
        );
        return;
      }

      console.log(`        ‚ú® –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –±–∞–ª–ª–∞`);

      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å UserPoints —Å —Å—Ç–∞—Ä—Ç–æ–≤—ã–º –±–∞–ª–∞–Ω—Å–æ–º
      const userPoints = await tx.userPoints.create({
        data: {
          userId: user.id,
          points: STARTUP_POINTS,
        },
      });
      console.log(
        `        üìä –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å UserPoints —Å ID: ${userPoints.id}`
      );

      // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
      const transaction = await tx.pointsTransaction.create({
        data: {
          userId: user.id,
          amount: STARTUP_POINTS,
          type: 'startup_bonus',
          description: '–°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–ª –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é',
        },
      });
      console.log(
        `        üìù –°–æ–∑–¥–∞–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Å ID: ${transaction.id}`
      );

      console.log(
        `        ‚úÖ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–ª (${STARTUP_POINTS}) —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${
          user.email || user.name
        }`
      );
    });

    console.log(
      `        üéâ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –±–∞–ª–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`
    );
  } catch (error) {
    const timestamp = new Date().toISOString();
    console.error(
      `        ‚ùå [${timestamp}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –±–∞–ª–ª–∞:`,
      error
    );
    console.error(
      `        üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email || user.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`
    );
    console.error(`        üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:`, error.message);
    console.error(`        üîÑ –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:`, error.stack);
    // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤
    console.log(
      `        ‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –±–∞–ª–ª–æ–≤`
    );
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} provider - –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @returns {boolean} - —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –¥–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –≤—Ö–æ–¥–∞
 */
async function checkUserAuthSettings(userId, provider) {
  try {
    console.log(
      `     üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}, –ø—Ä–æ–≤–∞–π–¥–µ—Ä: ${provider}`
    );

    const authSettings = await prisma.userAuthSettings.findUnique({
      where: { userId },
    });

    // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ —Å–ø–æ—Å–æ–±—ã –≤—Ö–æ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (!authSettings) {
      console.log(
        `     ‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Ö–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`
      );
      return true;
    }

    console.log(`     üìã –ù–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:`);
    console.log(
      `        üìß Email: ${
        authSettings.enableEmailAuth ? '—Ä–∞–∑—Ä–µ—à–µ–Ω' : '–∑–∞–ø—Ä–µ—â–µ–Ω'
      }`
    );
    console.log(
      `        üîó Google: ${
        authSettings.enableGoogleAuth ? '—Ä–∞–∑—Ä–µ—à–µ–Ω' : '–∑–∞–ø—Ä–µ—â–µ–Ω'
      }`
    );
    console.log(
      `        üêô GitHub: ${
        authSettings.enableGithubAuth ? '—Ä–∞–∑—Ä–µ—à–µ–Ω' : '–∑–∞–ø—Ä–µ—â–µ–Ω'
      }`
    );
    console.log(
      `        üîê Credentials: ${
        authSettings.enableCredentialsAuth ? '—Ä–∞–∑—Ä–µ—à–µ–Ω' : '–∑–∞–ø—Ä–µ—â–µ–Ω'
      }`
    );
    console.log(
      `        üîí 2FA: ${
        authSettings.requireTwoFactor ? '—Ç—Ä–µ–±—É–µ—Ç—Å—è' : '–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'
      }`
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –≤—Ö–æ–¥–∞
    let isAllowed = true;
    switch (provider) {
      case 'email':
        isAllowed = authSettings.enableEmailAuth;
        break;
      case 'google':
        isAllowed = authSettings.enableGoogleAuth;
        break;
      case 'github':
        isAllowed = authSettings.enableGithubAuth;
        break;
      case 'credentials':
        isAllowed = authSettings.enableCredentialsAuth;
        break;
      default:
        isAllowed = true;
        console.log(
          `     ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä ${provider}, —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`
        );
    }

    console.log(
      `     ${isAllowed ? '‚úÖ' : '‚ùå'} –ü—Ä–æ–≤–∞–π–¥–µ—Ä ${provider}: ${
        isAllowed ? '—Ä–∞–∑—Ä–µ—à–µ–Ω' : '–∑–∞–ø—Ä–µ—â–µ–Ω'
      }`
    );
    return isAllowed;
  } catch (error) {
    console.error(
      `     ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`,
      error
    );
    console.error(`     üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:`, error.message);
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Ö–æ–¥
    console.log(`     ‚ö†Ô∏è –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Ö–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`);
    return true;
  }
}

// –õ–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
if (process.env.NODE_ENV === 'development' && !global.nextAuthInitialized) {
  console.log('NextAuth: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:');
  console.log('NODE_ENV:', process.env.NODE_ENV);
  console.log('NEXTAUTH_URL:', process.env.NEXTAUTH_URL);
  console.log('GOOGLE_REDIRECT_URI:', process.env.GOOGLE_REDIRECT_URI);
  console.log('YANDEX_SMTP_HOST:', process.env.YANDEX_SMTP_HOST);
  global.nextAuthInitialized = true;
}

export const authOptions = {
  adapter: PrismaAdapter(prisma),
  providers: [
    // Email –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Å –Ø–Ω–¥–µ–∫—Å SMTP
    EmailProvider({
      server: {
        host: process.env.YANDEX_SMTP_HOST,
        port: parseInt(process.env.YANDEX_SMTP_PORT),
        secure: process.env.YANDEX_SMTP_SECURE === 'true',
        auth: {
          user: process.env.YANDEX_SMTP_USER,
          pass: process.env.YANDEX_SMTP_PASSWORD,
        },
        debug: process.env.NODE_ENV === 'development', // –í–∫–ª—é—á–∞–µ–º –æ—Ç–ª–∞–¥–∫—É –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        logger: process.env.NODE_ENV === 'development', // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      },
      from: process.env.YANDEX_EMAIL_FROM,
      maxAge: 24 * 60 * 60, // 24 —á–∞—Å–∞
      async sendVerificationRequest({ identifier: email, url, provider }) {
        try {
          console.log('üìß NextAuth: –û—Ç–ø—Ä–∞–≤–∫–∞ –º–∞–≥–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏');
          console.log('   üìß Email:', email);
          console.log('   üîó URL:', url);
          console.log('   ‚öôÔ∏è Provider:', provider.from);

          // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É NextAuth
          const { createTransport } = await import('nodemailer');
          const transport = createTransport(provider.server);

          const result = await transport.sendMail({
            to: email,
            from: provider.from,
            subject: '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É - –°–µ—Ä–≤–∏—Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π',
            text: `–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É, –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ: ${url}`,
            html: `
              <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
                <h2 style="color: #333; text-align: center;">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h2>
                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>
                <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ –º–∞–≥–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É.</p>
                <div style="text-align: center; margin: 30px 0;">
                  <a href="${url}"
                     style="background-color: #0070f3; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; display: inline-block; font-weight: bold;">
                    –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                  </a>
                </div>
                <p style="color: #666; font-size: 14px;">
                  –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
                </p>
                <p style="color: #666; font-size: 14px;">
                  –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —ç—Ç–æ—Ç –≤—Ö–æ–¥, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.
                </p>
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #eee;">
                <p style="color: #999; font-size: 12px; text-align: center;">
                  –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
                  –ö–æ–º–∞–Ω–¥–∞ —Å–µ—Ä–≤–∏—Å–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
                </p>
              </div>
            `,
          });

          console.log('‚úÖ NextAuth: Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
          console.log('   üìß Message ID:', result.messageId);
        } catch (error) {
          console.error('‚ùå NextAuth: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error);
          throw error;
        }
      },
    }),
    GoogleProvider({
      clientId: process.env.GOOGLE_CLIENT_ID,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET,
      allowDangerousEmailAccountLinking: true, // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ email
      authorization: {
        params: {
          scope:
            'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/calendar https://www.googleapis.com/auth/calendar.events',
          prompt: 'consent',
          access_type: 'offline',
          response_type: 'code',
        },
      },
    }),
    // GitHub –ø—Ä–æ–≤–∞–π–¥–µ—Ä –≤–∫–ª—é—á–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤–∞–ª–∏–¥–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    ...(process.env.GITHUB_CLIENT_ID &&
    process.env.GITHUB_CLIENT_SECRET &&
    process.env.GITHUB_CLIENT_ID !== 'your_github_client_id'
      ? [
          GitHubProvider({
            clientId: process.env.GITHUB_CLIENT_ID,
            clientSecret: process.env.GITHUB_CLIENT_SECRET,
            allowDangerousEmailAccountLinking: true, // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ email
            authorization: {
              params: {
                scope: 'read:user user:email',
              },
            },
          }),
        ]
      : []),
    CredentialsProvider({
      name: 'Credentials',
      credentials: {
        username: { label: 'Email –∏–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', type: 'text' },
        password: { label: '–ü–∞—Ä–æ–ª—å', type: 'password' },
      },
      async authorize(credentials) {
        if (!credentials?.username || !credentials?.password) {
          return null;
        }

        try {
          // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          const isEmail = validateEmail(credentials.username);
          const usernameValidation = validateUsername(credentials.username);

          if (!isEmail && !usernameValidation.isValid) {
            return null;
          }

          // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email –∏–ª–∏ username
          let user = null;

          if (isEmail) {
            user = await prisma.user.findUnique({
              where: { email: credentials.username },
            });
          } else {
            // –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º)
            if (
              credentials.username === 'admin' ||
              credentials.username === 'superadmin'
            ) {
              user = await prisma.user.findFirst({
                where: { role: 'superadmin' },
              });
            }
          }

          if (!user) {
            return null;
          }

          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
          if (!user.password) {
            return null;
          }

          const isValidPassword = await verifyPassword(
            credentials.password,
            user.password
          );

          if (!isValidPassword) {
            return null;
          }

          // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (user.isBlocked) {
            return null;
          }

          // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—Ö–æ–¥–∞
          await prisma.user.update({
            where: { id: user.id },
            data: { lastLoginAt: new Date() },
          });

          return {
            id: user.id,
            email: user.email,
            name: user.name,
            role: user.role,
            image: user.image,
          };
        } catch (error) {
          console.error('NextAuth authorize: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
          return null;
        }
      },
    }),
  ],
  callbacks: {
    async jwt({ token, user, account }) {
      // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ), –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–æ–∫–µ–Ω
      if (user) {
        token.role = user.role;
        token.userId = user.id;
        token.provider = account?.provider;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
      if (account) {
        token.provider = account.provider;
        token.providerAccountId = account.providerAccountId;
      }

      return token;
    },
    async session({ session, token, user }) {
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—ä–µ–∫—Ç —Å–µ—Å—Å–∏–∏
      if (user) {
        session.user.id = user.id;
        session.user.role = user.role;
      } else if (token) {
        session.user.id = token.userId;
        session.user.role = token.role;
        session.user.provider = token.provider;
        session.user.providerAccountId = token.providerAccountId;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
      session.timestamp = Date.now();

      return session;
    },
    async signIn({ user, account, profile, email, credentials }) {
      try {
        const timestamp = new Date().toISOString();
        const userInfo = user?.email || user?.name || user?.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
        const provider = account?.provider || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';

        console.log(`üîê [${timestamp}] NextAuth SignIn: –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞`);
        console.log(`   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userInfo}`);
        console.log(`   üîë –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${provider}`);
        console.log(`   üìß Email: ${email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`   üÜî User ID: ${user?.id || '–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (user?.id) {
          console.log(
            `   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.id}`
          );

          const isAllowed = await checkUserAuthSettings(
            user.id,
            account?.provider
          );

          if (!isAllowed) {
            console.log(
              `   ‚ùå –í—Ö–æ–¥ —á–µ—Ä–µ–∑ ${account?.provider} –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email}`
            );
            console.log(
              `   üö´ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`
            );
            return false;
          }

          console.log(
            `   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞–∑—Ä–µ—à–∞—é—Ç –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ ${provider}`
          );
        }

        // –î–ª—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã (Google, GitHub)
        if (account?.provider === 'google' || account?.provider === 'github') {
          console.log(`   üîó OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ ${account.provider}`);
          console.log(
            `   üìã –ü—Ä–æ—Ñ–∏–ª—å: ${JSON.stringify(
              profile?.name || profile?.login || '–Ω–µ —É–∫–∞–∑–∞–Ω'
            )}`
          );

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          await handleFirstTimeUserRegistration(user, account);

          console.log(`   ‚úÖ OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞`);
          return true;
        }

        // –î–ª—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ email (–º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏)
        if (account?.provider === 'email') {
          console.log(`   üìß Email –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –º–∞–≥–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É`);
          console.log(`   üì¨ Email –∞–¥—Ä–µ—Å: ${email}`);
          console.log(`   ‚úÖ Email –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞`);
          return true;
        }

        // –î–ª—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ credentials –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
        if (account?.provider === 'credentials') {
          console.log(`   üîê Credentials –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è`);
          console.log(`   üë§ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user?.role || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
          console.log(
            `   üîí –°—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: ${
              user?.isBlocked ? '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–∞–∫—Ç–∏–≤–µ–Ω'
            }`
          );

          // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Ö–æ–¥ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
          // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ authorize —Ñ—É–Ω–∫—Ü–∏–∏
          console.log(`   ‚úÖ Credentials –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞`);
          return true;
        }

        // –î–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Ö–æ–¥
        console.log(
          `   ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä: ${provider}, —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤—Ö–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`
        );
        return true;
      } catch (error) {
        const timestamp = new Date().toISOString();
        console.error(
          `‚ùå [${timestamp}] NextAuth signIn: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Ö–æ–¥–∞:`,
          error
        );
        console.error(
          `   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user?.email || user?.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`
        );
        console.error(`   üîë –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${account?.provider || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);
        console.error(`   üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:`, error.message);
        return false;
      }
    },
  },
  events: {
    async createUser({ user }) {
      const timestamp = new Date().toISOString();
      console.log(
        `üÜï [${timestamp}] NextAuth Event: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`
      );
      console.log(`   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email || user.name || user.id}`);
      console.log(`   üÜî User ID: ${user.id}`);
      console.log(`   üìß Email: ${user.email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`   üë§ –ò–º—è: ${user.name || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);

      // –ù–∞—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–ª –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      console.log(`   üí∞ –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –±–∞–ª–ª–∞...`);
      await handleFirstTimeUserRegistration(user, { provider: 'oauth' });

      // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      try {
        console.log(`   ‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...`);
        await prisma.userAuthSettings.create({
          data: {
            userId: user.id,
            enableEmailAuth: true,
            enableGoogleAuth: true,
            enableGithubAuth: true,
            enableCredentialsAuth: true,
            requireTwoFactor: false,
            sessionTimeout: 24,
          },
        });
        console.log(`   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ`);
      } catch (error) {
        console.error(
          `   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:`,
          error
        );
      }

      console.log(`   üéâ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`);
    },

    async signIn({ user, account, profile, isNewUser }) {
      const timestamp = new Date().toISOString();
      console.log(`üîë [${timestamp}] NextAuth Event: –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É`);
      console.log(`   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.email || user.name || user.id}`);
      console.log(`   üîë –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${account?.provider || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);
      console.log(`   üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${isNewUser ? '–¥–∞' : '–Ω–µ—Ç'}`);
      console.log(`   üïê –í—Ä–µ–º—è –≤—Ö–æ–¥–∞: ${timestamp}`);

      if (account?.provider) {
        console.log(`   üìã –î–µ—Ç–∞–ª–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: ${account.provider}`);
        if (account.providerAccountId) {
          console.log(
            `   üÜî ID –∞–∫–∫–∞—É–Ω—Ç–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞: ${account.providerAccountId}`
          );
        }
      }
    },

    async signOut({ session, token }) {
      const timestamp = new Date().toISOString();
      console.log(`üö™ [${timestamp}] NextAuth Event: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã`);
      console.log(
        `   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${
          session?.user?.email || token?.email || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
        }`
      );
      console.log(
        `   üÜî User ID: ${session?.user?.id || token?.userId || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`
      );
      console.log(`   üïê –í—Ä–µ–º—è –≤—ã—Ö–æ–¥–∞: ${timestamp}`);
    },

    async session({ session, token }) {
      // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Å–ø–∞–º–∞
      if (process.env.NODE_ENV === 'development') {
        const timestamp = new Date().toISOString();
        console.log(`üìã [${timestamp}] NextAuth Event: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏`);
        console.log(
          `   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${session?.user?.email || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`
        );
        console.log(`   üÜî User ID: ${session?.user?.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);
        console.log(
          `   üîë –ü—Ä–æ–≤–∞–π–¥–µ—Ä: ${
            session?.user?.provider || token?.provider || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'
          }`
        );
        console.log(
          `   ‚è∞ Timestamp —Å–µ—Å—Å–∏–∏: ${session?.timestamp || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`
        );
      }
    },
  },
  pages: {
    signIn: '/auth/signin', // –ö–∞—Å—Ç–æ–º–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞
    error: '/auth/error', // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏
    verifyRequest: '/auth/verify-request', // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
    // signOut: '/auth/signout', // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã—Ö–æ–¥–∞
  },
  session: {
    strategy: 'jwt', // –ò—Å–ø–æ–ª—å–∑—É–µ–º JWT –¥–ª—è —Å–µ—Å—Å–∏–π
    maxAge: 24 * 60 * 60, // 24 —á–∞—Å–∞
  },
  secret: process.env.NEXTAUTH_SECRET,
};

export default NextAuth(authOptions);
