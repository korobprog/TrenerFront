import { useState, useEffect } from 'react';
import styles from '../styles/Header.module.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ç–µ–º—ã (—Å–≤–µ—Ç–ª–∞—è/—Ç–µ–º–Ω–∞—è)
 * @returns {JSX.Element} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ç–µ–º—ã
 */
export default function ThemeToggle() {
  const [isDarkTheme, setIsDarkTheme] = useState(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –≤ localStorage
    const savedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
    if (savedTheme) {
      setIsDarkTheme(savedTheme === 'dark');
      document.documentElement.setAttribute('data-theme', savedTheme);
    } else if (prefersDark) {
      setIsDarkTheme(true);
      document.documentElement.setAttribute('data-theme', 'dark');
    }
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
  const toggleTheme = () => {
    const newTheme = isDarkTheme ? 'light' : 'dark';
    setIsDarkTheme(!isDarkTheme);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç data-theme –¥–ª—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    document.documentElement.setAttribute('data-theme', newTheme);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
    localStorage.setItem('theme', newTheme);
  };

  return (
    <div className={styles.themeToggle}>
      <span className={styles.themeToggleIcon}>‚òÄÔ∏è</span>
      <label className={styles.themeToggleSwitch}>
        <input 
          type="checkbox" 
          checked={isDarkTheme} 
          onChange={toggleTheme} 
        />
        <span className={styles.themeToggleSlider}></span>
      </label>
      <span className={styles.themeToggleIcon}>üåô</span>
    </div>
  );
}