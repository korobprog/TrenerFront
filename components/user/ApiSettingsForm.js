import { useState } from 'react';
import styles from '../../styles/user/ApiSettings.module.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ API
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Object} props.settings - –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API
 * @param {Function} props.onSettingsChange - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
 * @param {Function} props.onSubmit - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 * @param {boolean} props.saving - –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
 * @returns {JSX.Element} –§–æ—Ä–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ API
 */
export default function ApiSettingsForm({
  settings,
  onSettingsChange,
  onSubmit,
  saving,
}) {
  const [showApiKey, setShowApiKey] = useState(false);
  const [showLangdockApiKey, setShowLangdockApiKey] = useState(false);
  const [showGeminiApiKey, setShowGeminiApiKey] = useState(false);
  const [showHuggingfaceApiKey, setShowHuggingfaceApiKey] = useState(false);
  const [showOpenRouterApiKey, setShowOpenRouterApiKey] = useState(false);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;

    if (type === 'checkbox') {
      onSettingsChange({
        ...settings,
        [name]: checked,
      });
    } else if (name === 'apiType') {
      // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–∏–ø–∞ API –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–π
      onSettingsChange({
        ...settings,
        apiType: value,
      });
    } else {
      onSettingsChange({
        ...settings,
        [name]: value,
      });
    }
  };

  return (
    <form onSubmit={onSubmit} className={styles.settingsForm}>
      <div className={styles.formGroup}>
        <div className={styles.checkboxContainer}>
          <input
            type="checkbox"
            id="usePersonalSettings"
            name="usePersonalSettings"
            checked={settings.usePersonalSettings}
            onChange={handleChange}
            className={styles.formCheckbox}
          />
          <label htmlFor="usePersonalSettings" className={styles.checkboxLabel}>
            –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API
          </label>
        </div>
        <p className={styles.formHelp}>
          –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ, –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API
          –≤–º–µ—Å—Ç–æ –æ–±—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–µ—Ä–≤–∏—Å–∞
        </p>
      </div>

      {settings.usePersonalSettings && (
        <div className={styles.formGroup}>
          <label htmlFor="apiType" className={styles.formLabel}>
            –¢–∏–ø API
          </label>
          <div className={styles.radioGroup}>
            <div className={styles.radioOption}>
              <input
                type="radio"
                id="apiTypeOpenRouter"
                name="apiType"
                value="openrouter"
                checked={settings.apiType === 'openrouter'}
                onChange={handleChange}
                className={styles.radioInput}
              />
              <label htmlFor="apiTypeOpenRouter" className={styles.radioLabel}>
                OpenRouter API
              </label>
            </div>
          </div>
          <p className={styles.formHelp}>
            –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø API, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
          </p>
        </div>
      )}

      {settings.usePersonalSettings && settings.apiType === 'anthropic' && (
        <>
          <div className={styles.formGroup}>
            <label htmlFor="apiKey" className={styles.formLabel}>
              API –∫–ª—é—á Anthropic
            </label>
            <div className={styles.apiKeyContainer}>
              <input
                type={showApiKey ? 'text' : 'password'}
                id="apiKey"
                name="apiKey"
                value={settings.apiKey}
                onChange={handleChange}
                className={styles.formInput}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Anthropic"
              />
              <button
                type="button"
                onClick={() => setShowApiKey(!showApiKey)}
                className={styles.toggleButton}
              >
                {showApiKey ? 'üôà –°–∫—Ä—ã—Ç—å' : 'üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å'}
              </button>
            </div>
            <p className={styles.formHelp}>
              <span className={styles.warningText}>
                –í–Ω–∏–º–∞–Ω–∏–µ: API –∫–ª—é—á —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ù–µ
                –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –µ–≥–æ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.
              </span>
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="baseUrl" className={styles.formLabel}>
              –ë–∞–∑–æ–≤—ã–π URL
            </label>
            <input
              type="url"
              id="baseUrl"
              name="baseUrl"
              value={settings.baseUrl}
              onChange={handleChange}
              className={styles.formInput}
              placeholder="https://api.anthropic.com"
            />
            <p className={styles.formHelp}>
              –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
              URL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
            </p>
          </div>
        </>
      )}

      {settings.usePersonalSettings && settings.apiType === 'langdock' && (
        <>
          <div className={styles.formGroup}>
            <label htmlFor="langdockApiKey" className={styles.formLabel}>
              API –∫–ª—é—á LangDock
            </label>
            <div className={styles.apiKeyContainer}>
              <input
                type={showLangdockApiKey ? 'text' : 'password'}
                id="langdockApiKey"
                name="langdockApiKey"
                value={settings.langdockApiKey || ''}
                onChange={handleChange}
                className={styles.formInput}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á LangDock"
              />
              <button
                type="button"
                onClick={() => setShowLangdockApiKey(!showLangdockApiKey)}
                className={styles.toggleButton}
              >
                {showLangdockApiKey ? 'üôà –°–∫—Ä—ã—Ç—å' : 'üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å'}
              </button>
            </div>
            <p className={styles.formHelp}>
              <span className={styles.warningText}>
                –í–Ω–∏–º–∞–Ω–∏–µ: API –∫–ª—é—á —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ù–µ
                –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –µ–≥–æ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.
              </span>
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="langdockAssistantId" className={styles.formLabel}>
              ID –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ LangDock (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            </label>
            <input
              type="text"
              id="langdockAssistantId"
              name="langdockAssistantId"
              value={settings.langdockAssistantId || ''}
              onChange={handleChange}
              className={styles.formInput}
              placeholder="–í–≤–µ–¥–∏—Ç–µ ID –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ LangDock"
            />
            <p className={styles.formHelp}>
              ID –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ LangDock –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö. –û—Å—Ç–∞–≤—å—Ç–µ
              –ø—É—Å—Ç—ã–º, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ID –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="langdockBaseUrl" className={styles.formLabel}>
              –ë–∞–∑–æ–≤—ã–π URL LangDock
            </label>
            <input
              type="url"
              id="langdockBaseUrl"
              name="langdockBaseUrl"
              value={settings.langdockBaseUrl || ''}
              onChange={handleChange}
              className={styles.formInput}
              placeholder="https://api.langdock.com/assistant/v1/chat/completions"
            />
            <p className={styles.formHelp}>
              –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ LangDock. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è
              –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è URL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
            </p>
          </div>
          <div className={styles.formGroup}>
            <label htmlFor="langdockRegion" className={styles.formLabel}>
              –†–µ–≥–∏–æ–Ω LangDock
            </label>
            <select
              id="langdockRegion"
              name="langdockRegion"
              value={settings.langdockRegion || 'eu'}
              onChange={handleChange}
              className={styles.formInput}
            >
              <option value="eu">–ï–≤—Ä–æ–ø–∞ (EU)</option>
              <option value="us">–°–®–ê (US)</option>
            </select>
            <p className={styles.formHelp}>
              –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ LangDock. –í–ª–∏—è–µ—Ç –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ
              –±–∞–∑–æ–≤–æ–≥–æ URL.
            </p>
          </div>
        </>
      )}

      {settings.usePersonalSettings && settings.apiType === 'gemini' && (
        <>
          <div className={styles.formGroup}>
            <label htmlFor="geminiApiKey" className={styles.formLabel}>
              API –∫–ª—é—á Google Gemini
            </label>
            <div className={styles.apiKeyContainer}>
              <input
                type={showGeminiApiKey ? 'text' : 'password'}
                id="geminiApiKey"
                name="geminiApiKey"
                value={settings.geminiApiKey || ''}
                onChange={handleChange}
                className={styles.formInput}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Google Gemini"
              />
              <button
                type="button"
                onClick={() => setShowGeminiApiKey(!showGeminiApiKey)}
                className={styles.toggleButton}
              >
                {showGeminiApiKey ? 'üôà –°–∫—Ä—ã—Ç—å' : 'üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å'}
              </button>
            </div>
            <p className={styles.formHelp}>
              <span className={styles.warningText}>
                –í–Ω–∏–º–∞–Ω–∏–µ: API –∫–ª—é—á —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ù–µ
                –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –µ–≥–æ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.
              </span>
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="geminiModel" className={styles.formLabel}>
              –ú–æ–¥–µ–ª—å Gemini
            </label>
            <select
              id="geminiModel"
              name="geminiModel"
              value={settings.geminiModel || 'gemini-1.5-flash'}
              onChange={handleChange}
              className={styles.formInput}
            >
              <option value="gemini-1.5-flash">
                gemini-1.5-flash (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)
              </option>
              <option value="gemini-1.5-pro">gemini-1.5-pro</option>
              <option value="gemini-1.0-pro">gemini-1.0-pro</option>
              <option value="gemini-pro">gemini-pro</option>
              <option value="gemini-pro-vision">gemini-pro-vision</option>
            </select>
            <p className={styles.formHelp}>
              –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å Gemini –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="geminiBaseUrl" className={styles.formLabel}>
              –ë–∞–∑–æ–≤—ã–π URL Gemini API
            </label>
            <input
              type="url"
              id="geminiBaseUrl"
              name="geminiBaseUrl"
              value={settings.geminiBaseUrl || ''}
              onChange={handleChange}
              className={styles.formInput}
              placeholder="https://generativelanguage.googleapis.com"
            />
            <p className={styles.formHelp}>
              –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ Gemini. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è
              –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è URL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="geminiTemperature" className={styles.formLabel}>
              –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ({settings.geminiTemperature || 0.7})
            </label>
            <input
              type="range"
              id="geminiTemperature"
              name="geminiTemperature"
              min="0"
              max="1"
              step="0.1"
              value={settings.geminiTemperature || 0.7}
              onChange={handleChange}
              className={styles.formInput}
            />
            <p className={styles.formHelp}>
              –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ù–∏–∑–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
              –¥–µ–ª–∞—é—Ç –æ—Ç–≤–µ—Ç—ã –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏, –≤—ã—Å–æ–∫–∏–µ - –±–æ–ª–µ–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º–∏.
            </p>
          </div>
        </>
      )}

      {settings.usePersonalSettings && settings.apiType === 'huggingface' && (
        <>
          <div className={styles.formGroup}>
            <label htmlFor="huggingfaceApiKey" className={styles.formLabel}>
              API –∫–ª—é—á Hugging Face
            </label>
            <div className={styles.apiKeyContainer}>
              <input
                type={showHuggingfaceApiKey ? 'text' : 'password'}
                id="huggingfaceApiKey"
                name="huggingfaceApiKey"
                value={settings.huggingfaceApiKey || ''}
                onChange={handleChange}
                className={styles.formInput}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Hugging Face"
              />
              <button
                type="button"
                onClick={() => setShowHuggingfaceApiKey(!showHuggingfaceApiKey)}
                className={styles.toggleButton}
              >
                {showHuggingfaceApiKey ? 'üôà –°–∫—Ä—ã—Ç—å' : 'üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å'}
              </button>
            </div>
            <p className={styles.formHelp}>
              <span className={styles.warningText}>
                –í–Ω–∏–º–∞–Ω–∏–µ: API –∫–ª—é—á —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ù–µ
                –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –µ–≥–æ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.
              </span>
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="huggingfaceModel" className={styles.formLabel}>
              –ú–æ–¥–µ–ª—å Hugging Face
            </label>
            <select
              id="huggingfaceModel"
              name="huggingfaceModel"
              value={settings.huggingfaceModel || 'bigcode/starcoder2-7b'}
              onChange={handleChange}
              className={styles.formInput}
            >
              <option value="bigcode/starcoder2-7b">
                bigcode/starcoder2-7b (–¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç
                —Ä—É—Å—Å–∫–∏–π)
              </option>
              <option value="meta-llama/Meta-Llama-3-8B-Instruct">
                meta-llama/Meta-Llama-3-8B-Instruct
              </option>
              <option value="mistralai/Mistral-7B-Instruct-v0.2">
                mistralai/Mistral-7B-Instruct-v0.2
              </option>
              <option value="meta-llama/Llama-2-7b-chat-hf">
                meta-llama/Llama-2-7b-chat-hf (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è)
              </option>
              <option value="gpt2">gpt2</option>
              <option value="distilgpt2">distilgpt2</option>
              <option value="facebook/bart-base">facebook/bart-base</option>
              <option value="google/flan-t5-small">google/flan-t5-small</option>
              <option value="gpt2-medium">gpt2-medium</option>
              <option value="EleutherAI/gpt-neo-125M">
                EleutherAI/gpt-neo-125M
              </option>
              <option value="microsoft/DialoGPT-small">
                microsoft/DialoGPT-small
              </option>
            </select>
            <p className={styles.formHelp}>
              –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å Hugging Face –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="huggingfaceBaseUrl" className={styles.formLabel}>
              –ë–∞–∑–æ–≤—ã–π URL Hugging Face API
            </label>
            <input
              type="url"
              id="huggingfaceBaseUrl"
              name="huggingfaceBaseUrl"
              value={settings.huggingfaceBaseUrl || ''}
              onChange={handleChange}
              className={styles.formInput}
              placeholder="https://api-inference.huggingface.co/models"
            />
            <p className={styles.formHelp}>
              –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ Hugging Face. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è
              –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è URL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label
              htmlFor="huggingfaceTemperature"
              className={styles.formLabel}
            >
              –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ({settings.huggingfaceTemperature || 0.7})
            </label>
            <input
              type="range"
              id="huggingfaceTemperature"
              name="huggingfaceTemperature"
              min="0"
              max="1"
              step="0.1"
              value={settings.huggingfaceTemperature || 0.7}
              onChange={handleChange}
              className={styles.formInput}
            />
            <p className={styles.formHelp}>
              –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ù–∏–∑–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
              –¥–µ–ª–∞—é—Ç –æ—Ç–≤–µ—Ç—ã –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏, –≤—ã—Å–æ–∫–∏–µ - –±–æ–ª–µ–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º–∏.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="huggingfaceMaxTokens" className={styles.formLabel}>
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤
            </label>
            <input
              type="number"
              id="huggingfaceMaxTokens"
              name="huggingfaceMaxTokens"
              min="1"
              max="8000"
              value={settings.huggingfaceMaxTokens || 4000}
              onChange={handleChange}
              className={styles.formInput}
            />
            <p className={styles.formHelp}>
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞.
            </p>
          </div>
        </>
      )}

      {settings.usePersonalSettings && settings.apiType === 'openrouter' && (
        <>
          <div className={styles.formGroup}>
            <label htmlFor="openRouterApiKey" className={styles.formLabel}>
              API –∫–ª—é—á OpenRouter
            </label>
            <div className={styles.apiKeyContainer}>
              <input
                type={showOpenRouterApiKey ? 'text' : 'password'}
                id="openRouterApiKey"
                name="openRouterApiKey"
                value={settings.openRouterApiKey || ''}
                onChange={handleChange}
                className={styles.formInput}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á OpenRouter"
              />
              <button
                type="button"
                onClick={() => setShowOpenRouterApiKey(!showOpenRouterApiKey)}
                className={styles.toggleButton}
              >
                {showOpenRouterApiKey ? 'üôà –°–∫—Ä—ã—Ç—å' : 'üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å'}
              </button>
            </div>
            <p className={styles.formHelp}>
              <span className={styles.warningText}>
                –í–Ω–∏–º–∞–Ω–∏–µ: API –∫–ª—é—á —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ù–µ
                –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –µ–≥–æ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.
              </span>
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="openRouterModel" className={styles.formLabel}>
              –ú–æ–¥–µ–ª—å OpenRouter
            </label>
            <select
              id="openRouterModel"
              name="openRouterModel"
              value={settings.openRouterModel || 'google/gemma-3-12b-it:free'}
              onChange={handleChange}
              className={styles.formInput}
            >
              <option value="google/gemma-3-12b-it:free">
                google/gemma-3-12b-it:free (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)
              </option>
              <option value="anthropic/claude-3-opus:beta">
                anthropic/claude-3-opus:beta
              </option>
              <option value="anthropic/claude-3-sonnet:beta">
                anthropic/claude-3-sonnet:beta
              </option>
              <option value="anthropic/claude-3-haiku:beta">
                anthropic/claude-3-haiku:beta
              </option>
              <option value="meta-llama/llama-3-70b-instruct:free">
                meta-llama/llama-3-70b-instruct:free
              </option>
              <option value="meta-llama/llama-3-8b-instruct:free">
                meta-llama/llama-3-8b-instruct:free
              </option>
            </select>
            <p className={styles.formHelp}>
              –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å OpenRouter –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="openRouterBaseUrl" className={styles.formLabel}>
              –ë–∞–∑–æ–≤—ã–π URL OpenRouter API
            </label>
            <input
              type="url"
              id="openRouterBaseUrl"
              name="openRouterBaseUrl"
              value={settings.openRouterBaseUrl || ''}
              onChange={handleChange}
              className={styles.formInput}
              placeholder="https://openrouter.ai/api/v1"
            />
            <p className={styles.formHelp}>
              –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ OpenRouter. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è
              –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è URL –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="openRouterTemperature" className={styles.formLabel}>
              –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ({settings.openRouterTemperature || 0.7})
            </label>
            <input
              type="range"
              id="openRouterTemperature"
              name="openRouterTemperature"
              min="0"
              max="1"
              step="0.1"
              value={settings.openRouterTemperature || 0.7}
              onChange={handleChange}
              className={styles.formInput}
            />
            <p className={styles.formHelp}>
              –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ù–∏–∑–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
              –¥–µ–ª–∞—é—Ç –æ—Ç–≤–µ—Ç—ã –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏, –≤—ã—Å–æ–∫–∏–µ - –±–æ–ª–µ–µ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–º–∏.
            </p>
          </div>

          <div className={styles.formGroup}>
            <label htmlFor="openRouterMaxTokens" className={styles.formLabel}>
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤
            </label>
            <input
              type="number"
              id="openRouterMaxTokens"
              name="openRouterMaxTokens"
              min="1"
              max="8000"
              value={settings.openRouterMaxTokens || 4000}
              onChange={handleChange}
              className={styles.formInput}
            />
            <p className={styles.formHelp}>
              –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞.
            </p>
          </div>
        </>
      )}

      <div className={styles.infoBlock}>
        <h3 className={styles.infoTitle}>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á</h3>
        {settings.apiType === 'gemini' ? (
          <ol className={styles.infoList}>
            <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ Google AI Studio (ai.google.dev)</li>
            <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "API Keys" –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ</li>
            <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Create API key"</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
            <li>
              –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ Gemini
            </li>
          </ol>
        ) : settings.apiType === 'openrouter' ? (
          <ol className={styles.infoList}>
            <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ OpenRouter (openrouter.ai)</li>
            <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "API Keys" –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ</li>
            <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Create API key"</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
            <li>
              –ú–æ–¥–µ–ª—å google/gemma-3-12b-it:free –¥–æ—Å—Ç—É–ø–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –±–µ–∑
              –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–≤—è–∑–∫–∏ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç—ã
            </li>
          </ol>
        ) : settings.apiType === 'langdock' ? (
          <ol className={styles.infoList}>
            <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ LangDock</li>
            <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "API Keys" –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ</li>
            <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Create new API key"</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
            <li>
              –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ
              "Assistants"
            </li>
          </ol>
        ) : settings.apiType === 'huggingface' ? (
          <ol className={styles.infoList}>
            <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ Hugging Face (huggingface.co)</li>
            <li>
              –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "Settings" ‚Üí "Access Tokens" –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ
            </li>
            <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "New token"</li>
            <li>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å "Read"</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
            <li>
              –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π Llama-2 –≤–∞–º –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è
              –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º–æ–¥–µ–ª–∏
            </li>
          </ol>
        ) : (
          <ol className={styles.infoList}>
            <li>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ Anthropic</li>
            <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "API Keys" –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ</li>
            <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Create new API key"</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
          </ol>
        )}
        <p className={styles.infoText}>
          –ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–µ —Å API –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤{' '}
          <a
            href={
              settings.apiType === 'gemini'
                ? 'https://ai.google.dev/docs'
                : settings.apiType === 'langdock'
                ? 'https://docs.langdock.com'
                : settings.apiType === 'huggingface'
                ? 'https://huggingface.co/docs/api-inference/index'
                : settings.apiType === 'openrouter'
                ? 'https://openrouter.ai/docs'
                : 'https://docs.anthropic.com'
            }
            target="_blank"
            rel="noopener noreferrer"
            className={styles.externalLink}
          >
            –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
          </a>
        </p>
      </div>

      <div className={styles.formActions}>
        <button
          type="submit"
          className={styles.saveButton}
          disabled={saving || !settings.usePersonalSettings}
        >
          {saving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
        </button>
      </div>
    </form>
  );
}
