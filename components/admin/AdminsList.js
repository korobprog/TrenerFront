import { useState } from 'react';
import { useRouter } from 'next/router';
import AdminTable from './AdminTable';
import AdminPagination from './AdminPagination';
import styles from '../../styles/admin/UsersList.module.css'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —Å—Ç–∏–ª–∏, —á—Ç–æ –∏ –¥–ª—è UsersList

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –ø–∞–Ω–µ–ª–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Array} props.admins - –ú–∞—Å—Å–∏–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
 * @param {Object} props.pagination - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
 * @param {Object} props.sorting - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ
 * @param {Function} props.onPageChange - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {Function} props.onPageSizeChange - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @param {Function} props.onSortChange - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
 * @returns {JSX.Element} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
 */
export default function AdminsList({
  admins,
  pagination,
  sorting,
  onPageChange,
  onPageSizeChange,
  onSortChange,
}) {
  const router = useRouter();

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
  const columns = [
    {
      field: 'name',
      title: '–ò–º—è',
      sortable: true,
      width: '25%',
      format: (value, admin) => (
        <div className={styles.userNameCell}>
          {admin.image && (
            <img
              src={admin.image}
              alt={admin.name}
              className={styles.userAvatar}
            />
          )}
          <div className={styles.userInfo}>
            <div className={styles.userName}>{value}</div>
            <div className={styles.userEmail}>{admin.email}</div>
          </div>
        </div>
      ),
    },
    {
      field: 'role',
      title: '–†–æ–ª—å',
      sortable: true,
      width: '15%',
      format: (value) => {
        const roleLabels = {
          admin: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
          superadmin: '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        };

        const roleClasses = {
          admin: styles.roleAdmin,
          superadmin: styles.roleAdmin, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –∫–ª–∞—Å—Å, —á—Ç–æ –∏ –¥–ª—è admin
        };

        return (
          <span className={`${styles.roleLabel} ${roleClasses[value] || ''}`}>
            {roleLabels[value] || value}
          </span>
        );
      },
    },
    {
      field: 'isBlocked',
      title: '–°—Ç–∞—Ç—É—Å',
      sortable: true,
      width: '15%',
      format: (value) => (
        <span
          className={`${styles.statusLabel} ${
            value ? styles.statusBlocked : styles.statusActive
          }`}
        >
          {value ? '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : '–ê–∫—Ç–∏–≤–µ–Ω'}
        </span>
      ),
    },
    {
      field: 'actionsCount',
      title: '–î–µ–π—Å—Ç–≤–∏—è',
      sortable: false,
      width: '15%',
      format: (value) => (
        <div className={styles.actionsCount}>
          <div>–í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π: {value}</div>
        </div>
      ),
    },
    {
      field: 'createdAt',
      title: '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
      sortable: true,
      width: '15%',
      format: (value) => {
        const date = new Date(value);
        return date.toLocaleDateString('ru-RU', {
          day: '2-digit',
          month: '2-digit',
          year: 'numeric',
        });
      },
    },
    {
      field: 'actions',
      title: '–î–µ–π—Å—Ç–≤–∏—è',
      sortable: false,
      width: '15%',
      format: (_, admin) => (
        <div className={styles.actionButtons}>
          <button
            className={`${styles.actionButton} ${styles.viewButton}`}
            onClick={(e) => {
              e.stopPropagation();
              router.push(`/admin/superadmin/admins/${admin.id}`);
            }}
            title="–ü—Ä–æ—Å–º–æ—Ç—Ä"
          >
            üëÅÔ∏è
          </button>
          <button
            className={`${styles.actionButton} ${
              admin.isBlocked ? styles.unblockButton : styles.blockButton
            }`}
            onClick={(e) => {
              e.stopPropagation();
              handleToggleBlock(admin);
            }}
            title={admin.isBlocked ? '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å'}
            disabled={
              admin.role === 'superadmin' && admin.id === getCurrentAdminId()
            }
          >
            {admin.isBlocked ? 'üîì' : 'üîí'}
          </button>
        </div>
      ),
    },
  ];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —Ç–µ–∫—É—â–µ–≥–æ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const getCurrentAdminId = () => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω–æ –∏–∑ —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    // –ó–¥–µ—Å—å –º—ã –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
    return '';
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã
  const handleRowClick = (admin) => {
    router.push(`/admin/superadmin/admins/${admin.id}`);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const handleSortChange = (field, order) => {
    if (onSortChange) {
      onSortChange(field, order);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const handleToggleBlock = async (admin) => {
    // –ó–∞–ø—Ä–µ—â–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è
    if (admin.id === getCurrentAdminId() && admin.role === 'superadmin') {
      alert('–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å');
      return;
    }

    try {
      const response = await fetch(`/api/admin/superadmin/admins/${admin.id}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          isBlocked: !admin.isBlocked,
        }),
      });

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
      router.reload();
    } catch (error) {
      console.error(
        '–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:',
        error
      );
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
    }
  };

  return (
    <div className={styles.usersListContainer}>
      <AdminTable
        columns={columns}
        data={admins}
        onRowClick={handleRowClick}
        sortBy={sorting?.sortBy}
        sortOrder={sorting?.sortOrder}
        onSort={handleSortChange}
      />

      <div className={styles.paginationWrapper}>
        <AdminPagination
          currentPage={pagination.page}
          totalPages={pagination.totalPages}
          totalItems={pagination.total}
          pageSize={pagination.limit}
          onPageChange={onPageChange}
          onPageSizeChange={onPageSizeChange}
        />
      </div>
    </div>
  );
}
