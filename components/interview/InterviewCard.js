import { useRouter } from 'next/router';
import { useSession } from 'next-auth/react';
import styles from '../../styles/InterviewCard.module.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –¥–æ—Å–∫–µ
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Object} props.interview - –î–∞–Ω–Ω—ã–µ –æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏
 * @param {number} props.userPoints - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} props.onBookInterview - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
 * @returns {JSX.Element} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
 */
export default function InterviewCard({
  interview,
  userPoints,
  onBookInterview,
}) {
  const router = useRouter();
  const { data: session } = useSession();

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
  const formatDateTime = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU', {
      day: 'numeric',
      month: 'long',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä–æ–º
  const isInterviewer = session?.user?.id === interview.interviewerId;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –¥–µ—Ç–∞–ª—è–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
  const handleCardClick = () => {
    router.push(`/mock-interviews/${interview.id}`);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
  const handleBookClick = (e) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª handleCardClick
    onBookInterview(interview.id);
  };

  return (
    <div
      className={`${styles.card} ${styles[interview.status]}`}
      onClick={handleCardClick}
    >
      <div className={styles.cardHeader}>
        <div className={styles.interviewerInfo}>
          <span className={styles.interviewerName}>
            {interview.interviewer?.name || '–ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä'}
          </span>
          {isInterviewer && <span className={styles.youBadge}>–í—ã</span>}
        </div>
        <div className={styles.statusBadge} data-status={interview.status}>
          {interview.status === 'pending' && '–û–∂–∏–¥–∞–µ—Ç –∑–∞–ø–∏—Å–∏'}
          {interview.status === 'booked' && '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ'}
          {interview.status === 'completed' && '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'}
          {interview.status === 'cancelled' && '–û—Ç–º–µ–Ω–µ–Ω–æ'}
        </div>
      </div>

      <div className={styles.cardBody}>
        <div className={styles.dateTime}>
          <span className={styles.icon}>üóìÔ∏è</span>
          <span>{formatDateTime(interview.scheduledTime)}</span>
        </div>

        {interview.interviewee && (
          <div className={styles.interviewee}>
            <span className={styles.icon}>üë§</span>
            <span>–û—Ç–≤–µ—á–∞—é—â–∏–π: {interview.interviewee.name}</span>
          </div>
        )}

        {interview.interviewFeedback && (
          <div className={styles.feedbackInfo}>
            <div className={styles.rating}>
              <span className={styles.icon}>‚≠ê</span>
              <span>
                –û—Ü–µ–Ω–∫–∞: {interview.interviewFeedback.technicalScore}/5
              </span>
            </div>
            <div className={styles.feedbackStatus}>
              {interview.interviewFeedback.isAccepted ? (
                <span className={styles.accepted}>–û—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç</span>
              ) : (
                <span className={styles.pending}>–û–∂–∏–¥–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è</span>
              )}
            </div>
          </div>
        )}
      </div>

      <div className={styles.cardFooter}>
        {interview.status === 'pending' && !isInterviewer && (
          <button
            className={styles.bookButton}
            onClick={handleBookClick}
            disabled={userPoints < 1}
            title={userPoints < 1 ? '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 1 –±–∞–ª–ª' : ''}
          >
            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
          </button>
        )}

        {interview.status === 'booked' &&
          isInterviewer &&
          !interview.interviewFeedback && (
            <button
              className={styles.feedbackButton}
              onClick={(e) => {
                e.stopPropagation();
                router.push(`/mock-interviews/${interview.id}/feedback`);
              }}
            >
              –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
            </button>
          )}

        <button className={styles.detailsButton} onClick={handleCardClick}>
          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
        </button>
      </div>
    </div>
  );
}
