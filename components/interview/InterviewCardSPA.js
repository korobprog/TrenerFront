import { useRouter } from 'next/router';
import { useSession } from 'next-auth/react';
import { useState } from 'react';
import { useNotification } from '../../contexts/NotificationContext';
import CreateMeetButton from './CreateMeetButton';
import styles from '../../styles/InterviewCard.module.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è —Å SPA-–Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {Object} props.interview - –î–∞–Ω–Ω—ã–µ –æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏
 * @param {number} props.userPoints - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Function} props.onRefresh - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
 * @returns {JSX.Element} –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
 */
export default function InterviewCardSPA({ interview, userPoints, onRefresh }) {
  const router = useRouter();
  const { data: session, status } = useSession();
  const [showNoShowModal, setShowNoShowModal] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showBookingModal, setShowBookingModal] = useState(false);
  const { showSuccess, showError } = useNotification();

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
  const formatDateTime = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU', {
      day: 'numeric',
      month: 'long',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä–æ–º (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞)
  const isInterviewer =
    status === 'authenticated' && session?.user?.id === interview.interviewerId;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—á–∞—é—â–∏–º (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞)
  const isInterviewee =
    status === 'authenticated' && session?.user?.id === interview.intervieweeId;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–æ—à–ª–æ –ª–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
  const isInterviewTimePassed = new Date() > new Date(interview.scheduledTime);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –¥–µ—Ç–∞–ª—è–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
  const handleCardClick = () => {
    router.push(`/mock-interviews/${interview.id}`);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
  const handleBookClick = (e) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ —Å–µ—Å—Å–∏—è
    if (status !== 'authenticated') {
      showError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ');
      return;
    }

    if (userPoints < 1) {
      showError('–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 1 –±–∞–ª–ª');
      return;
    }

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    setShowBookingModal(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è Google Meet-—Å—Å—ã–ª–∫–∏
  const handleMeetLinkCreated = async ({ meetingLink, eventId }) => {
    try {
      setIsSubmitting(true);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è —Å –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
      const response = await fetch(
        `/api/mock-interviews/${interview.id}/book`,
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            meetingLink,
            calendarEventId: eventId,
          }),
        }
      );

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(
          errorData.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ'
        );
      }

      showSuccess('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ');

      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      setShowBookingModal(false);

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
      if (onRefresh) {
        onRefresh();
      } else {
        // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º SPA-–Ω–∞–≤–∏–≥–∞—Ü–∏—é
        router.push(`/mock-interviews/${interview.id}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ:', error);
      showError(error.message);
    } finally {
      setIsSubmitting(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ—Ç–∫–∏ –Ω–µ—è–≤–∫–∏
  const handleNoShowClick = (e) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
    setShowNoShowModal(true);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –æ—Ç–º–µ—Ç–∫–∏ –Ω–µ—è–≤–∫–∏
  const handleNoShowSubmit = async (noShowType) => {
    setIsSubmitting(true);
    try {
      const response = await fetch(
        `/api/mock-interviews/${interview.id}/no-show`,
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ noShowType }),
        }
      );

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –Ω–µ—è–≤–∫–∏');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–º–µ—Ç–∫–∏ –Ω–µ—è–≤–∫–∏
      showSuccess('–ù–µ—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—á–µ–Ω–∞');

      // –í–º–µ—Å—Ç–æ –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º SPA-–Ω–∞–≤–∏–≥–∞—Ü–∏—é
      // –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      if (onRefresh) {
        onRefresh(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      } else {
        // –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        router.push(router.asPath, undefined, { shallow: true });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –Ω–µ—è–≤–∫–∏:', error);
      showError(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –Ω–µ—è–≤–∫–∏');
    } finally {
      setIsSubmitting(false);
      setShowNoShowModal(false);
    }
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏
  if (status === 'loading') {
    return (
      <div
        className={`${styles.card} ${styles[interview.status]} ${
          styles.loading
        }`}
      >
        <div className={styles.loadingState}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    );
  }

  return (
    <div
      className={`${styles.card} ${styles[interview.status]}`}
      onClick={handleCardClick}
    >
      <div className={styles.cardHeader}>
        <div className={styles.interviewerInfo}>
          <span className={styles.interviewerName}>
            {interview.interviewer?.name || '–ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä'}
          </span>
          {isInterviewer && <span className={styles.youBadge}>–í—ã</span>}
        </div>
        <div className={styles.statusBadge} data-status={interview.status}>
          {interview.status === 'pending' && '–û–∂–∏–¥–∞–µ—Ç –∑–∞–ø–∏—Å–∏'}
          {interview.status === 'booked' && '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ'}
          {interview.status === 'completed' && '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'}
          {interview.status === 'cancelled' && '–û—Ç–º–µ–Ω–µ–Ω–æ'}
          {interview.status === 'no_show' && '–ù–µ—è–≤–∫–∞'}
        </div>
      </div>

      <div className={styles.cardBody}>
        <div className={styles.dateTime}>
          <span className={styles.icon}>üóìÔ∏è</span>
          <span>{formatDateTime(interview.scheduledTime)}</span>
        </div>

        {interview.interviewee && (
          <div className={styles.interviewee}>
            <span className={styles.icon}>üë§</span>
            <span>–û—Ç–≤–µ—á–∞—é—â–∏–π: {interview.interviewee.name}</span>
          </div>
        )}

        {interview.interviewFeedback && (
          <div className={styles.feedbackInfo}>
            <div className={styles.rating}>
              <span className={styles.icon}>‚≠ê</span>
              <span>
                –û—Ü–µ–Ω–∫–∞: {interview.interviewFeedback.technicalScore}/5
              </span>
            </div>
            <div className={styles.feedbackStatus}>
              {interview.interviewFeedback.isAccepted ? (
                <span className={styles.accepted}>–û—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç</span>
              ) : (
                <span className={styles.pending}>–û–∂–∏–¥–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è</span>
              )}
            </div>
          </div>
        )}
      </div>

      <div className={styles.cardFooter}>
        {interview.status === 'pending' && !isInterviewer && (
          <button
            className={styles.bookButton}
            onClick={handleBookClick}
            disabled={userPoints < 1}
            title={userPoints < 1 ? '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º 1 –±–∞–ª–ª' : ''}
          >
            –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
          </button>
        )}

        {interview.status === 'booked' &&
          isInterviewer &&
          !interview.interviewFeedback && (
            <button
              className={styles.feedbackButton}
              onClick={(e) => {
                e.stopPropagation();
                router.push(`/mock-interviews/${interview.id}/feedback`);
              }}
            >
              –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
            </button>
          )}

        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ –Ω–µ—è–≤–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ—Å–ª–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ */}
        {interview.status === 'booked' &&
          isInterviewTimePassed &&
          (isInterviewer || isInterviewee) && (
            <button className={styles.noShowButton} onClick={handleNoShowClick}>
              –û—Ç–º–µ—Ç–∏—Ç—å –Ω–µ—è–≤–∫—É
            </button>
          )}

        <button className={styles.detailsButton} onClick={handleCardClick}>
          –ü–æ–¥—Ä–æ–±–Ω–µ–µ
        </button>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –Ω–µ—è–≤–∫–∏ */}
      {showNoShowModal && (
        <div
          className={styles.modalOverlay}
          onClick={() => setShowNoShowModal(false)}
        >
          <div className={styles.modal} onClick={(e) => e.stopPropagation()}>
            <h3>–ö—Ç–æ –Ω–µ —è–≤–∏–ª—Å—è –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ?</h3>
            <div className={styles.modalButtons}>
              <button
                onClick={() => handleNoShowSubmit('interviewer')}
                disabled={isSubmitting || isInterviewer} // –ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å —Å–≤–æ—é –Ω–µ—è–≤–∫—É
                className={isInterviewer ? styles.disabledButton : ''}
              >
                –ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä –Ω–µ —è–≤–∏–ª—Å—è
              </button>
              <button
                onClick={() => handleNoShowSubmit('interviewee')}
                disabled={isSubmitting || isInterviewee} // –û—Ç–≤–µ—á–∞—é—â–∏–π –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å —Å–≤–æ—é –Ω–µ—è–≤–∫—É
                className={isInterviewee ? styles.disabledButton : ''}
              >
                –û—Ç–≤–µ—á–∞—é—â–∏–π –Ω–µ —è–≤–∏–ª—Å—è
              </button>
              <button onClick={() => setShowNoShowModal(false)}>–û—Ç–º–µ–Ω–∞</button>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ */}
      {showBookingModal && (
        <div
          className={styles.modalOverlay}
          onClick={() => setShowBookingModal(false)}
        >
          <div className={styles.modal} onClick={(e) => e.stopPropagation()}>
            <h3>–ó–∞–ø–∏—Å—å –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ</h3>
            <p>
              –î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ Google Meet –∏
              —Å–ø–∏—Å–∞–Ω 1 –±–∞–ª–ª.
            </p>
            <p>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {formatDateTime(interview.scheduledTime)}</p>
            <p>–ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä: {interview.interviewer?.name}</p>

            <div className={styles.modalButtons}>
              <CreateMeetButton
                onMeetLinkCreated={handleMeetLinkCreated}
                buttonText="–°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è"
                disabled={isSubmitting}
                className={styles.bookButton}
              />
              <button
                onClick={() => setShowBookingModal(false)}
                className={styles.cancelButton}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
